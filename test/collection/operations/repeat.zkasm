        10 => A

        14 => RCX
        A + 2 => A  :REPEAT(RCX)

        40          :ASSERT ; REPEAT 14 TIMES => 1 TIME + 14 REPS = 15 TIMES x 2 = 30 => 10 + 30 = 40
        0 => A
        RCX         :ASSERT

        0 => A
        :JMP(OpRepeatL1_2)
        1 => A      :JMP(OpRepeatEndJmpTest1)
OpRepeatL1_1:
        2 => A      :JMP(OpRepeatEndJmpTest1)
OpRepeatL1_2:
        3 => A      :JMP(OpRepeatEndJmpTest1)
OpRepeatL1_3:
        4 => A      :JMP(OpRepeatEndJmpTest1)

OpRepeatEndJmpTest1:
        3 :ASSERT
        3 :ASSERT
        3 :ASSERT
        3 :ASSERT
        3 :ASSERT


        0 => A
        A - 1 :JMPN(OpRepeatL2_1)
        10 => A  :JMP(OpRepeatEndJmpTest2)
OpRepeatL2_1:
        20 => A  :JMP(OpRepeatEndJmpTest2)
OpRepeatL2_2:
        30 => A  :JMP(OpRepeatEndJmpTest2)
OpRepeatL2_3:
        40 => A  :JMP(OpRepeatEndJmpTest2)

OpRepeatEndJmpTest2:
        20 :ASSERT
        20 :ASSERT
        20 :ASSERT
        20 :ASSERT
        20 :ASSERT

        0 => A
        A :JMPN(OpRepeatL3_1)
        110 => A  :JMP(OpRepeatEndJmpTest3)
OpRepeatL3_1:
        120 => A  :JMP(OpRepeatEndJmpTest3)
OpRepeatL3_2:
        130 => A  :JMP(OpRepeatEndJmpTest3)
OpRepeatL3_3:
        140 => A  :JMP(OpRepeatEndJmpTest3)

OpRepeatEndJmpTest3:
        110 :ASSERT
        110 :ASSERT
        110 :ASSERT
        110 :ASSERT
        110 :ASSERT


        0 => A
        0 => B
        $ :EQ,JMPC(OpRepeatL4_2)
        210 => A  :JMP(OpRepeatEndJmpTest4)
OpRepeatL4_1:
        220 => A  :JMP(OpRepeatEndJmpTest4)
OpRepeatL4_2:
        230 => A  :JMP(OpRepeatEndJmpTest4)
OpRepeatL4_3:
        240 => A  :JMP(OpRepeatEndJmpTest4)

OpRepeatEndJmpTest4:
        230 :ASSERT
        230 :ASSERT
        230 :ASSERT
        230 :ASSERT
        230 :ASSERT


        0 => A
        1 => B
        $ :EQ,JMPC(OpRepeatL5_1)
        310 => A  :JMP(OpRepeatEndJmpTest5)
OpRepeatL5_1:
        320 => A  :JMP(OpRepeatEndJmpTest5)
OpRepeatL5_2:
        330 => A  :JMP(OpRepeatEndJmpTest5)
OpRepeatL5_3:
        340 => A  :JMP(OpRepeatEndJmpTest5)


OpRepeatEndJmpTest5:
        310 :ASSERT
        310 :ASSERT
        310 :ASSERT
        310 :ASSERT
        310 :ASSERT

        0x7FFFFFFFn => RCX,A
        RCX             :ASSERT

        10 => RCX,A
        RCX             :ASSERT

        11 => A
        RCX + 1 => RCX
        RCX             :ASSERT

        ; negative values
        -1 => A
        RCX - 12 => RCX
        RCX             :ASSERT
