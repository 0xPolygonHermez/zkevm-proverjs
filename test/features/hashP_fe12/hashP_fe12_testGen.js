const { fea2scalar, scalar2h4 } = require("@0xpolygonhermez/zkevm-commonjs").smtUtils;
const buildPoseidon = require("@0xpolygonhermez/zkevm-commonjs").getPoseidon;

const P_BN254 = 21888242871839275222246405745257275088696311157297823662689037894645226208583n;
let values = [
    {
        A: 7439774195778494536n,
        B: 8820353827662201067n,
        C: 1935396539154500959n,
    },
    {
        A: 32377850365086383432987303117864376133611793823662409500334879797650651539055n,
        B: 39208589398284731158815672976856605281862143850793906317904078337576474660713n,
        C: 34978401516730469062527721413836229411487280588896376742311170379902872331568n,
    },
    {
        A: 17635282116348775157n,
        B: 8304360176603426482n,
        C: 2340390907135132865n,
    },
    {
        A: 69095332865694836717752884588568260116624730537960516421832082999699055580632n,
        B: 29107018022661510226637380434288002400797335175862469286939545363880853368879n,
        C: 111763271459511520543371470418914706986590020733971211144031166119514773529670n,
    },
    {
        A: 16757516697195404344n,
        B: 929073235532871906n,
        C: 16853362148286756239n,
    },
    {
        A: 73402578750312461230631586120029038942459882624069287874862534679231183555252n,
        B: 47171580200165403778054144474628618639449125451850424836039162623821559886056n,
        C: 19866585422428929576809108053948032711777513351831472479566056836939516738982n,
    },
    {
        A: 2490349566352070177n,
        B: 3764878969210071209n,
        C: 9733210294057183320n,
    },
    {
        A: 5554376649731744927165851570500330981471738377726730065031275030957278630475n,
        B: 60747250542300455531110136062984825034471931470133614706145665689117668128163n,
        C: 23363591507732979729957610987208701408958930874295446578000480103982765892773n,
    },
    {
        A: 2457415118321513312n,
        B: 6908560961913001969n,
        C: 382796748184630824n,
    },
    {
        A: 109547680453898971422311297569028841771631279395213636571110251049246466435156n,
        B: 80991271123970650147690557671635961475420389804658995867789196498027686898449n,
        C: 24435140593075350979734500365839660927721295615803228392722932707835074234813n,
    },
    {
        A: 9394349671035115269n,
        B: 8009763902757961934n,
        C: 12877609710057943925n,
    },
    {
        A: 10774011414778660960668903336373272605216707950807090443952630134208644757098n,
        B: 41748535594076550257305106192402918763035209022819714951624980174856196787079n,
        C: 63856178863541249149147863269128344841035094068649128152235099140192939450211n,
    },
    {
        A: 9275698628621952923n,
        B: 3669800398300728669n,
        C: 17687643853299656177n,
    },
    {
        A: 90580806538933197348693850037086194841002487028726201454791320452700259395329n,
        B: 46713172959778766217491600830341877704126192971157202903971685036300295617203n,
        C: 82959448426409429530566623829126690660341193144271000111816013032952443390525n,
    },
    {
        A: 5102735370967644483n,
        B: 7315755721411587016n,
        C: 4054796898896042781n,
    },
    {
        A: 15314372540432408803101720809993561425989127560733259574414440669863354819419n,
        B: 64092334938871121784349429033125632936041881023430294767589100330220467982854n,
        C: 58016549929896976231596214183553680679350974123608787430573119369095569756060n,
    },
    {
        A: 4553763238759950501n,
        B: 6950419733224864868n,
        C: 12442990584725843227n,
    },
    {
        A: 70052212973522695780921785667642550368919122678741389224032264288983726160037n,
        B: 99009802904627622718255067743971929884167457335262615411910320792552098777576n,
        C: 32568198736260364470479330484196499053731741823969227893547839271956626327388n,
    },
    {
        A: 16882263291292450377n,
        B: 17966565959889849463n,
        C: 5339684416767056700n,
    },
    {
        A: 51445565519252693544579410796538432653654975064430939825840093874214038295904n,
        B: 78666498958076256292246971335851960678462065657426137257440215506073504785111n,
        C: 39083509861470639295907715453660515244108715133637269763744998849674750734995n,
    },
    {
        A: 3073431275661473498n,
        B: 6575258535334083716n,
        C: 13271161499161728508n,
    },
    {
        A: 43272812726190371622169840168162875660899853320586286599569192681013310598761n,
        B: 32801194164494684324332239432946033858626862083313097497826592496532276876974n,
        C: 57450347717651377670535108076062690160365808124938331703545915871913495909627n,
    },
    {
        A: 16859086986506203568n,
        B: 12140768990102176453n,
        C: 16228409688322299001n,
    },
    {
        A: 5143465440277689972954909766809078092741814855487387161829338938001246745830n,
        B: 112323573151770619336481738888840200672530215954546117048427123814208623642566n,
        C: 23863872199935695276665413020676081475069048660323824949706900407937019170108n,
    },
    {
        A: 8529785651523530196n,
        B: 9284491662629448601n,
        C: 12059892148463147033n,
    },
    {
        A: 22116089451447448762509307735835908528452345742953740724369236149091265643620n,
        B: 38855313868157974909786638795685602695970659061041413606734657269738273823080n,
        C: 41781778681874045354957396143732315375638848237951971591293658630532486874455n,
    },
    {
        A: 16119140960634490620n,
        B: 3375230960159138166n,
        C: 15562638706538562272n,
    },
    {
        A: 59088511811152759779426611693334944113047149126079184996814067426562009942781n,
        B: 103337542000802582218411463819877854195079402849238371537304869766884834195142n,
        C: 37779615654400051845498049990886586999769589337207011950560467739511431484455n,
    },
    {
        A: 11243188051817898905n,
        B: 16959091944469103765n,
        C: 6613817178405425772n,
    },
    {
        A: 5514294218186185527523397807895257072268045863379611912215255260138768334241n,
        B: 9955673077125838072689845145393767858546913664100777616574106846180300061638n,
        C: 20707216963291446248288798167412420379109671316201777232372801823944478672503n,
    },
];

async function test_generator() {

    const poseidon = await buildPoseidon();
    const Fr = poseidon.F;

    const INS = 'HASHP_FE12';
    for (const value of values) {
        const [A,B,C] = [scalar2h4(value.A), scalar2h4(value.B), scalar2h4(value.C)];
        const op = safeFea2scalar(Fr, sr4to8(Fr, poseidon([...A, ...B], C)));
        const regs = {...value};
        for (const reg in regs) {
            console.log(`\t\t${regs[reg]}n => ${reg}`);
        }
    console.log(`\t\t${op}n :${INS}\n`);
    }
}

test_generator();


function sr4to8(F, r) {
    const sr=[];
    sr[0] = r[0] & 0xFFFFFFFFn;
    sr[1] = r[0] >> 32n;
    sr[2] = r[1] & 0xFFFFFFFFn;
    sr[3] = r[1] >> 32n;
    sr[4] = r[2] & 0xFFFFFFFFn;
    sr[5] = r[2] >> 32n;
    sr[6] = r[3] & 0xFFFFFFFFn;
    sr[7] = r[3] >> 32n;
    return sr;
}

function safeFea2scalar(Fr, arr) {
    for (let index = 0; index < 8; ++index) {
        const value = Fr.toObject(arr[index]);
        if (value > 0xFFFFFFFFn) {
            throw new Error(`Invalid value 0x${value.toString(16)} to convert to scalar on index ${index}: ${sourceRef}`);
        }
    }
    return fea2scalar(Fr, arr);
}