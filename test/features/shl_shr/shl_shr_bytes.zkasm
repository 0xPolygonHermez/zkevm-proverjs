CONST %MAX_CNT_STEPS = 2**23
CONST %MAX_CNT_MEM_ALIGN = %MAX_CNT_STEPS / 16

start:

    STEP => A
    0   :ASSERT

	0 => D
	:CALL(SaveRegs)
	0xd721c97e79ac95ed4dfb205e1e16e4766ede933c110dfeb07800ec102c85febbn => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xd721c97e79ac95ed4dfb205e1e16e4766ede933c110dfeb07800ec102c85febbn :ASSERT


	1 => D
	:CALL(SaveRegs)
	0x9eaa2d14e9b9bc5653da0f7d4f3523e671591b3e9204b4b2863d1bf23428c6d9n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xaa2d14e9b9bc5653da0f7d4f3523e671591b3e9204b4b2863d1bf23428c6d900n :ASSERT


	2 => D
	:CALL(SaveRegs)
	0x8c5072a5f699ff94f34a14afb30f576c7ae3e8a7c6d0c1a50730f1fe892a6a35n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x72a5f699ff94f34a14afb30f576c7ae3e8a7c6d0c1a50730f1fe892a6a350000n :ASSERT


	3 => D
	:CALL(SaveRegs)
	0xa0f63cb04e008dadec617eafe9b89b4c0188194a33b9b1dd8e47753fb4018637n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xb04e008dadec617eafe9b89b4c0188194a33b9b1dd8e47753fb4018637000000n :ASSERT


	4 => D
	:CALL(SaveRegs)
	0xedb6bfb4e36d0fb5f73744876e784e605eab0efe467078ec623d269c92fbc397n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xe36d0fb5f73744876e784e605eab0efe467078ec623d269c92fbc39700000000n :ASSERT


	5 => D
	:CALL(SaveRegs)
	0x43eac168095895659c81615e9eb4e51e72f680bdeba22453e90f28afd1dcf0bfn => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x5895659c81615e9eb4e51e72f680bdeba22453e90f28afd1dcf0bf0000000000n :ASSERT


	6 => D
	:CALL(SaveRegs)
	0x81d5091ec92d454e735082f1225743bfc060296bf71126ab56645ebf456f2dcen => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x454e735082f1225743bfc060296bf71126ab56645ebf456f2dce000000000000n :ASSERT


	7 => D
	:CALL(SaveRegs)
	0x7e41b6834e2e4b061e3f411c5d031e871c73b60ae51b4b226906f1b9c5491710n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x061e3f411c5d031e871c73b60ae51b4b226906f1b9c549171000000000000000n :ASSERT


	8 => D
	:CALL(SaveRegs)
	0xd0da0ade1518e16bbfa4888ae28cd03ea982f6eb008d4bb66d127d9b05a91a9fn => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xbfa4888ae28cd03ea982f6eb008d4bb66d127d9b05a91a9f0000000000000000n :ASSERT


	9 => D
	:CALL(SaveRegs)
	0x783f2a9062140dc0c0c29b4ba4b6db7508d3dbf2cf604bd5a206074c74104188n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xc29b4ba4b6db7508d3dbf2cf604bd5a206074c74104188000000000000000000n :ASSERT


	10 => D
	:CALL(SaveRegs)
	0xf1d136326cb76d371bf39ec93252fd5fd754cf75db868b7df02891eacf2cfa1cn => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x9ec93252fd5fd754cf75db868b7df02891eacf2cfa1c00000000000000000000n :ASSERT


	11 => D
	:CALL(SaveRegs)
	0x7da7b5ff79160e7ddae53860fe4cf56947310ed2d8184ce6c85db8796b543dedn => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x60fe4cf56947310ed2d8184ce6c85db8796b543ded0000000000000000000000n :ASSERT


	12 => D
	:CALL(SaveRegs)
	0xd93b509a5c945fca081657283cea6e8035611fc4e43c7c4f90e9e750d400ff18n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x3cea6e8035611fc4e43c7c4f90e9e750d400ff18000000000000000000000000n :ASSERT


	13 => D
	:CALL(SaveRegs)
	0x669186d5bb980fe6caae6f2d54cae9194680c461b1a418c8eb20d9d4dac23e31n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xcae9194680c461b1a418c8eb20d9d4dac23e3100000000000000000000000000n :ASSERT


	14 => D
	:CALL(SaveRegs)
	0xffbb29bb028f774589895aec64505161e25934e9c5a984929362490c29f36ed8n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x5161e25934e9c5a984929362490c29f36ed80000000000000000000000000000n :ASSERT


	15 => D
	:CALL(SaveRegs)
	0x117d05ed7d699c1ed4218cdbce6fc20a3d1b16c22eeb62289302d5559ca172b6n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x0a3d1b16c22eeb62289302d5559ca172b6000000000000000000000000000000n :ASSERT


	16 => D
	:CALL(SaveRegs)
	0x48f0dbdebe902b692c4a902cde90e0b53e7f1c698e4b36dd2ded42246b6816b2n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x3e7f1c698e4b36dd2ded42246b6816b200000000000000000000000000000000n :ASSERT


	17 => D
	:CALL(SaveRegs)
	0x3dbb5b3560802e81eafa0c5c4829fab9dcb89435bf8d9a7622b53b1efcf648b1n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xb89435bf8d9a7622b53b1efcf648b10000000000000000000000000000000000n :ASSERT


	18 => D
	:CALL(SaveRegs)
	0x28792e56f0d7229b91baa4dafba0c3dfd2439f979539449eda10022fc7c86665n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x9f979539449eda10022fc7c86665000000000000000000000000000000000000n :ASSERT


	19 => D
	:CALL(SaveRegs)
	0x86f450acb666659587dd91404bc3a5b8e6d5d31c85801b31f982998dc1cbf9bcn => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x1c85801b31f982998dc1cbf9bc00000000000000000000000000000000000000n :ASSERT


	20 => D
	:CALL(SaveRegs)
	0x21326cb712060453607adc3b8db5940db5440edfcbd0cddb4459499f7102c17en => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xcbd0cddb4459499f7102c17e0000000000000000000000000000000000000000n :ASSERT


	21 => D
	:CALL(SaveRegs)
	0x802ddda0d7a5f5e411060ccd295b0496169a24f9a39c0835ef8be5d78155689bn => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x9c0835ef8be5d78155689b000000000000000000000000000000000000000000n :ASSERT


	22 => D
	:CALL(SaveRegs)
	0xa4756a4c02366448154b64898d499a88c6220fa9b02621a6dce3455f3dcc71fan => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x21a6dce3455f3dcc71fa00000000000000000000000000000000000000000000n :ASSERT


	23 => D
	:CALL(SaveRegs)
	0x50c1c7bcacd41c5c0ae76edd6992291307e92c7e510c4c2c9ffb4a939226197cn => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x2c9ffb4a939226197c0000000000000000000000000000000000000000000000n :ASSERT


	24 => D
	:CALL(SaveRegs)
	0x79b197ba4fd461f34d64313b03b27b63b3769b0328771a6d486e1170aac0087cn => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x486e1170aac0087c000000000000000000000000000000000000000000000000n :ASSERT


	25 => D
	:CALL(SaveRegs)
	0xaeb7d0fedf5aeeb3c82258c31ad2e2f6510d2a8d1381fe3b6cf1b47806b0a2e9n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xf1b47806b0a2e900000000000000000000000000000000000000000000000000n :ASSERT


	26 => D
	:CALL(SaveRegs)
	0x2e5827e05bb5bc08ac26cff9d9583c74b0d5cfbead44bd9797825d38b9ec2609n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x5d38b9ec26090000000000000000000000000000000000000000000000000000n :ASSERT


	27 => D
	:CALL(SaveRegs)
	0x4190577d8eced571b6dc7c5a7a49d978630a908fdf498c855d2cc1eb4110d6a1n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xeb4110d6a1000000000000000000000000000000000000000000000000000000n :ASSERT


	28 => D
	:CALL(SaveRegs)
	0x143c23861e5b353279c1efc9ed5b3790400132db4e7d01fa2cfe637115f76d02n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x15f76d0200000000000000000000000000000000000000000000000000000000n :ASSERT


	29 => D
	:CALL(SaveRegs)
	0xb2236aff2b9c295f1a81ccc9b86ea1a2df9107a77aea68d88f6fdb20fa306716n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x3067160000000000000000000000000000000000000000000000000000000000n :ASSERT


	30 => D
	:CALL(SaveRegs)
	0xbc90f3ce977a385f27c728e5c7503704f452ad6774c9b0f303a48c393444277an => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x277a000000000000000000000000000000000000000000000000000000000000n :ASSERT


	31 => D
	:CALL(SaveRegs)
	0x516605ce44a4e5cbeb71db77a93176b95b262a9542c4fb6791b15115e553e5fan => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0xfa00000000000000000000000000000000000000000000000000000000000000n :ASSERT


	32 => D
	:CALL(SaveRegs)
	0x73c6b7537985a139558b451ef9bd1a73e68d5e3c34d86266ed2caf61071706c8n => A  :CALL(SHLbytes)
	:CALL(CheckRegs)
	0x0000000000000000000000000000000000000000000000000000000000000000n :ASSERT


	0 => D
	:CALL(SaveRegs)
	0xd721c97e79ac95ed4dfb205e1e16e4766ede933c110dfeb07800ec102c85febbn => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0xd721c97e79ac95ed4dfb205e1e16e4766ede933c110dfeb07800ec102c85febbn :ASSERT


	1 => D
	:CALL(SaveRegs)
	0x9eaa2d14e9b9bc5653da0f7d4f3523e671591b3e9204b4b2863d1bf23428c6d9n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x009eaa2d14e9b9bc5653da0f7d4f3523e671591b3e9204b4b2863d1bf23428c6n :ASSERT


	2 => D
	:CALL(SaveRegs)
	0x8c5072a5f699ff94f34a14afb30f576c7ae3e8a7c6d0c1a50730f1fe892a6a35n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00008c5072a5f699ff94f34a14afb30f576c7ae3e8a7c6d0c1a50730f1fe892an :ASSERT


	3 => D
	:CALL(SaveRegs)
	0xa0f63cb04e008dadec617eafe9b89b4c0188194a33b9b1dd8e47753fb4018637n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000a0f63cb04e008dadec617eafe9b89b4c0188194a33b9b1dd8e47753fb4n :ASSERT


	4 => D
	:CALL(SaveRegs)
	0xedb6bfb4e36d0fb5f73744876e784e605eab0efe467078ec623d269c92fbc397n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000edb6bfb4e36d0fb5f73744876e784e605eab0efe467078ec623d269cn :ASSERT


	5 => D
	:CALL(SaveRegs)
	0x43eac168095895659c81615e9eb4e51e72f680bdeba22453e90f28afd1dcf0bfn => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000000043eac168095895659c81615e9eb4e51e72f680bdeba22453e90f28n :ASSERT


	6 => D
	:CALL(SaveRegs)
	0x81d5091ec92d454e735082f1225743bfc060296bf71126ab56645ebf456f2dcen => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000081d5091ec92d454e735082f1225743bfc060296bf71126ab5664n :ASSERT


	7 => D
	:CALL(SaveRegs)
	0x7e41b6834e2e4b061e3f411c5d031e871c73b60ae51b4b226906f1b9c5491710n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000000000007e41b6834e2e4b061e3f411c5d031e871c73b60ae51b4b2269n :ASSERT


	8 => D
	:CALL(SaveRegs)
	0xd0da0ade1518e16bbfa4888ae28cd03ea982f6eb008d4bb66d127d9b05a91a9fn => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x0000000000000000d0da0ade1518e16bbfa4888ae28cd03ea982f6eb008d4bb6n :ASSERT


	9 => D
	:CALL(SaveRegs)
	0x783f2a9062140dc0c0c29b4ba4b6db7508d3dbf2cf604bd5a206074c74104188n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000000000000000783f2a9062140dc0c0c29b4ba4b6db7508d3dbf2cf604bn :ASSERT


	10 => D
	:CALL(SaveRegs)
	0xf1d136326cb76d371bf39ec93252fd5fd754cf75db868b7df02891eacf2cfa1cn => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000f1d136326cb76d371bf39ec93252fd5fd754cf75db86n :ASSERT


	11 => D
	:CALL(SaveRegs)
	0x7da7b5ff79160e7ddae53860fe4cf56947310ed2d8184ce6c85db8796b543dedn => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000007da7b5ff79160e7ddae53860fe4cf56947310ed2d8n :ASSERT


	12 => D
	:CALL(SaveRegs)
	0xd93b509a5c945fca081657283cea6e8035611fc4e43c7c4f90e9e750d400ff18n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000000000000000000000d93b509a5c945fca081657283cea6e8035611fc4n :ASSERT


	13 => D
	:CALL(SaveRegs)
	0x669186d5bb980fe6caae6f2d54cae9194680c461b1a418c8eb20d9d4dac23e31n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000000000669186d5bb980fe6caae6f2d54cae9194680c4n :ASSERT


	14 => D
	:CALL(SaveRegs)
	0xffbb29bb028f774589895aec64505161e25934e9c5a984929362490c29f36ed8n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x0000000000000000000000000000ffbb29bb028f774589895aec64505161e259n :ASSERT


	15 => D
	:CALL(SaveRegs)
	0x117d05ed7d699c1ed4218cdbce6fc20a3d1b16c22eeb62289302d5559ca172b6n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000000000000000000000000000117d05ed7d699c1ed4218cdbce6fc20a3dn :ASSERT


	16 => D
	:CALL(SaveRegs)
	0x48f0dbdebe902b692c4a902cde90e0b53e7f1c698e4b36dd2ded42246b6816b2n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x0000000000000000000000000000000048f0dbdebe902b692c4a902cde90e0b5n :ASSERT


	17 => D
	:CALL(SaveRegs)
	0x3dbb5b3560802e81eafa0c5c4829fab9dcb89435bf8d9a7622b53b1efcf648b1n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000000000000000003dbb5b3560802e81eafa0c5c4829fan :ASSERT


	18 => D
	:CALL(SaveRegs)
	0x28792e56f0d7229b91baa4dafba0c3dfd2439f979539449eda10022fc7c86665n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000000000000000000028792e56f0d7229b91baa4dafba0n :ASSERT


	19 => D
	:CALL(SaveRegs)
	0x86f450acb666659587dd91404bc3a5b8e6d5d31c85801b31f982998dc1cbf9bcn => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x0000000000000000000000000000000000000086f450acb666659587dd91404bn :ASSERT


	20 => D
	:CALL(SaveRegs)
	0x21326cb712060453607adc3b8db5940db5440edfcbd0cddb4459499f7102c17en => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000000000000000000000000000000000000021326cb712060453607adc3bn :ASSERT


	21 => D
	:CALL(SaveRegs)
	0x802ddda0d7a5f5e411060ccd295b0496169a24f9a39c0835ef8be5d78155689bn => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000000000000000000000000000000000000000802ddda0d7a5f5e411060cn :ASSERT


	22 => D
	:CALL(SaveRegs)
	0xa4756a4c02366448154b64898d499a88c6220fa9b02621a6dce3455f3dcc71fan => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000000000000000000000000000a4756a4c02366448154bn :ASSERT


	23 => D
	:CALL(SaveRegs)
	0x50c1c7bcacd41c5c0ae76edd6992291307e92c7e510c4c2c9ffb4a939226197cn => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000000000000000000000000000000000000000000050c1c7bcacd41c5c0an :ASSERT


	24 => D
	:CALL(SaveRegs)
	0x79b197ba4fd461f34d64313b03b27b63b3769b0328771a6d486e1170aac0087cn => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000000000000000000000000000000079b197ba4fd461f3n :ASSERT


	25 => D
	:CALL(SaveRegs)
	0xaeb7d0fedf5aeeb3c82258c31ad2e2f6510d2a8d1381fe3b6cf1b47806b0a2e9n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000000000000000000000000000000000aeb7d0fedf5aeen :ASSERT


	26 => D
	:CALL(SaveRegs)
	0x2e5827e05bb5bc08ac26cff9d9583c74b0d5cfbead44bd9797825d38b9ec2609n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000000000000000000000000000000000002e5827e05bb5n :ASSERT


	27 => D
	:CALL(SaveRegs)
	0x4190577d8eced571b6dc7c5a7a49d978630a908fdf498c855d2cc1eb4110d6a1n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x0000000000000000000000000000000000000000000000000000004190577d8en :ASSERT


	28 => D
	:CALL(SaveRegs)
	0x143c23861e5b353279c1efc9ed5b3790400132db4e7d01fa2cfe637115f76d02n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x00000000000000000000000000000000000000000000000000000000143c2386n :ASSERT


	29 => D
	:CALL(SaveRegs)
	0xb2236aff2b9c295f1a81ccc9b86ea1a2df9107a77aea68d88f6fdb20fa306716n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x0000000000000000000000000000000000000000000000000000000000b2236an :ASSERT


	30 => D
	:CALL(SaveRegs)
	0xbc90f3ce977a385f27c728e5c7503704f452ad6774c9b0f303a48c393444277an => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x000000000000000000000000000000000000000000000000000000000000bc90n :ASSERT


	31 => D
	:CALL(SaveRegs)
	0x516605ce44a4e5cbeb71db77a93176b95b262a9542c4fb6791b15115e553e5fan => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x0000000000000000000000000000000000000000000000000000000000000051n :ASSERT


	32 => D
	:CALL(SaveRegs)
	0x73c6b7537985a139558b451ef9bd1a73e68d5e3c34d86266ed2caf61071706c8n => A  :CALL(SHRbytes)
	:CALL(CheckRegs)
	0x0000000000000000000000000000000000000000000000000000000000000000n :ASSERT

    :JMP(end)

VAR GLOBAL tmpB;
VAR GLOBAL tmpC;
VAR GLOBAL tmpD;
VAR GLOBAL tmpE;
SaveRegs:
    B   :MSTORE(tmpB)
    C   :MSTORE(tmpC)
    D   :MSTORE(tmpD)
    C   :MSTORE(tmpE), RETURN

CheckRegs:
    B   :MLOAD(tmpB)
    C   :MLOAD(tmpC)
    D   :MLOAD(tmpD)
    C   :MLOAD(tmpE), RETURN

; ### MEM_ALIGN_RD
;
; M0=A, M1=B, V=op, Offset=C
;
; M0 = 256bit word read in position x of ZKEVM memory (32x EVM)
; M1 = 256bit word read in position x+1 of ZKEVM memory (32x+1 EVM)
; Offset = 0..31 bytes
; V = value of 256 bits
;

; @info Shift right D bytes to A
; @in A - (A >> D)
; @in D - (A >> D) D bytes
; @out A - A >> D => A
VAR GLOBAL tmpSHRbytes_B
VAR GLOBAL tmpSHRbytes_C

SHRbytes:
    %MAX_CNT_STEPS - STEP - 11              :JMPN(outOfCountersStep)

    31 - D  :JMPN(SHRbytes_32)
    C       :MSTORE(tmpSHRbytes_C)
    D => C  :JMPZ(SHRbytes_0)

    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1  :JMPN(outOfCountersMemalign)
    
    B       :MSTORE(tmpSHRbytes_B)
    A => B
    0 => A
    32 - D => C
    $ => A  :MEM_ALIGN_RD
    $ => B  :MLOAD(tmpSHRbytes_B)
    $ => C  :MLOAD(tmpSHRbytes_C), RETURN

SHRbytes_32:
    0 => A  :RETURN
SHRbytes_0:
    $ => C  :MLOAD(tmpSHRbytes_C), RETURN

; @info Shift right D bytes to A
; @in A - (A >> D)
; @in D - (A >> D) D bytes
; @out A - A >> D => A

VAR GLOBAL tmpSHLbytes_B
VAR GLOBAL tmpSHLbytes_C

SHLbytes:
    %MAX_CNT_STEPS - STEP - 10              :JMPN(outOfCountersStep)

    31 - D  :JMPN(SHLbytes_32)
    C       :MSTORE(tmpSHLbytes_C)
    D => C  :JMPZ(SHLbytes_0)

    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1  :JMPN(outOfCountersMemalign)

    B       :MSTORE(tmpSHLbytes_B)
    0 => B
    D => C
    $ => A  :MEM_ALIGN_RD
    $ => C  :MLOAD(tmpSHLbytes_C)
    $ => B  :MLOAD(tmpSHLbytes_B), RETURN

SHLbytes_32:
    0 => A  :RETURN
SHLbytes_0:
    $ => C  :MLOAD(tmpSHLbytes_C), RETURN
    

ERROR:
outOfCountersStep:
outOfCountersMemalign:

        A + 1 :ASSERT

end:
       0 => A,B,C,D,E, SP, PC, GAS, SR

finalWait:
        ${beforeLast()}  : JMPN(finalWait)

                         : JMP(start)
opINVALID: