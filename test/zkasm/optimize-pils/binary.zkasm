start:

        STEP => A
        0 :ASSERT

        0 => A
        CNT_BINARY :ASSERT

        0x5000000000000n => A
        0x3000000000000n => B
        $ => A    :SUB
        0x2000000000000n :ASSERT

        0x5000000000000n => A
        0x3000000000000n => B
        $ => A    :ADD
        0x8000000000000n :ASSERT

        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFn => A
        0x1n => B
        $ => A    :ADD
        0x0n :ASSERT

        0x4000000000000n => A
        0x6000000000000n => B
        $ => A    :LT
        1 :ASSERT

        0x7F00000000000000000000000000000000000000000000000000000000000001n => A
        0x8000000000000000000000000000000000000000000000000000000000000001n => B
        $ => A    :LT
        1 :ASSERT

        0x7F00000000000000000000000000000000000000000000000000000000000001n => A
        0x8000000000000000000000000000000000000000000000000000000000000001n => B
        $ => A    :SLT
        0 :ASSERT

        0x8000000000000000000000000000000000000000000000000000000000000001n => A
        0x7F00000000000000000000000000000000000000000000000000000000000001n => B
        $ => A    :SLT
        1 :ASSERT

        0x4000000000000n => A
        0x6000000000000n => B
        $ => A    :LT
        1 :ASSERT
        ; TEST 55 bytes => counter increase 1 => total = 1

        0 => E
        0 => HASHPOS
        32 => D

        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)

        23 => D
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511n :HASHP(E)

        55             :HASHPLEN(E)
        $ => A         :HASHPDIGEST(E)

        1 => A
        CNT_POSEIDON_G :ASSERT
        CNT_PADDING_PG   :ASSERT

        ; TEST 56 bytes => counter increase 2 => total = 3

        E + 1 => E
        0 => HASHPOS
        32 => D

        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)

        24 => D
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9n :HASHP(E)

        56             :HASHPLEN(E)
        $ => A         :HASHPDIGEST(E)

        3 => A
        CNT_POSEIDON_G   :ASSERT
        CNT_PADDING_PG   :ASSERT

        ; TEST 57 bytes => counter increase 2 => total = 5

        E + 1 => E
        0 => HASHPOS
        32 => D

        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)

        25 => D
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAn :HASHP(E)

        57             :HASHPLEN(E)
        $ => A         :HASHPDIGEST(E)

        5 => A
        CNT_POSEIDON_G   :ASSERT
        CNT_PADDING_PG   :ASSERT



        ; TEST 111 bytes => counter increase 2 => total = 7

        E + 1 => E
        0 => HASHPOS
        32 => D

        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        ; 96

        15 => D
        0x5E1268E5B2A8DC1D0BB047386FC227n :HASHP(E)

        111            :HASHPLEN(E)
        $ => A         :HASHPDIGEST(E)

        7 => A
        CNT_POSEIDON_G :ASSERT
        CNT_PADDING_PG   :ASSERT


        ; TEST 112 bytes => counter increase 3 => total = 10

        E + 1 => E
        0 => HASHPOS
        32 => D

        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        ; 96

        16 => D
        0x5E1268E5B2A8DC1D0BB047386FC227FAn :HASHP(E)

        112            :HASHPLEN(E)
        $ => A         :HASHPDIGEST(E)

        10 => A
        CNT_POSEIDON_G   :ASSERT
        CNT_PADDING_PG   :ASSERT

        ; TEST 113 bytes => counter increase 3 => total = 13

        E + 1 => E
        0 => HASHPOS
        32 => D

        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        ; 96

        17 => D
        0x5E1268E5B2A8DC1D0BB047386FC227FA4Cn :HASHP(E)

        113            :HASHPLEN(E)
        $ => A         :HASHPDIGEST(E)

        13 => A
        CNT_POSEIDON_G   :ASSERT
        CNT_PADDING_PG   :ASSERT

        ; TEST 114 bytes => counter increase 3 => total = 16

        E + 1 => E
        0 => HASHPOS
        32 => D

        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C852DBA596511B9EAF7FCDD79C9006Dn :HASHP(E)
        ; 96

        18 => D
        0x5E1268E5B2A8DC1D0BB047386FC227FA4C85n :HASHP(E)

        114            :HASHPLEN(E)
        $ => A         :HASHPDIGEST(E)

        0 => SR

        0x23 => A
        0 => B,C
        $ => A  :SLOAD
        0       :ASSERT

        0x13 => A
        0x2025 => D
        $ => SR :SSTORE

        0x13 => A
        0 => B,C
        $ => A  :SLOAD
        0x2025  :ASSERT

        0x23 => A
        ; 0x8026000000000000000000000000000000000000000000000000000000000000n => D
        0x8026n => D
        $ => SR :SSTORE

        0x13 => A
        0 => B,C
        $ => A  :SLOAD
        0x2025  :ASSERT

        0x23 => A
        0 => B,C
        $ => A  :SLOAD
        ; 0x8026000000000000000000000000000000000000000000000000000000000000n :ASSERT
        0x8026n :ASSERT

        0 => SR

        0x23 => A
        0 => B,C
        $ => A  :SLOAD
        0       :ASSERT

        0x23 => A
        2022 => D
        $ => SR :SSTORE

        0x03 => A
        2021 => D
        $ => SR :SSTORE

        0x13 => A
        2020 => D
        $ => SR :SSTORE

        0x23 => A
        0 => B,C
        $ => A  :SLOAD
        2022    :ASSERT

        0x03 => A
        0 => B,C
        $ => A  :SLOAD
        2021    :ASSERT

        0x13 => A
        0 => B,C
        $ => A  :SLOAD
        2020    :ASSERT

        0x33 => A
        0 => B,C
        $ => A  :SLOAD
        0       :ASSERT

        0x30 => A
        0 => B,C
        $ => A  :SLOAD
        0       :ASSERT

        0x13 => A
        0 => B,C
        12020 => D
        $ => SR :SSTORE

        0x73 => A
        0 => B,C
        0 => D
        $ => SR :SSTORE

        0x13 => A
        0 => D
        0 => B,C
        $ => SR :SSTORE

        ; 3 => A
        ; CNT_BINARY :ASSERT

end:
       0 => A,B,C,D,E,CTX, SP, PC, GAS, SR, RR

finalWait:
        ${beforeLast()}  : JMPN(finalWait)

                         : JMP(start)
opINVALID: