; key bits with A,B = 0  C = #
CONST %_0000101 = 8  ; 0000101....1010 #8
CONST %_0000111 = 4  ; 0000111....0001 #4
CONST %_0010001 = 13 ; 0010001....0111 #13
CONST %_0011010 = 1  ; 0011010....1110 #1
CONST %_0011101 = 5  ; 0011101....0001 #5
CONST %_0100101 = 7  ; 0100101....0110 #7
CONST %_0101011 = 10 ; 0101011....1001 #10
CONST %_0110101 = 3  ; 0110101....0010 #3
CONST %_0110110 = 9  ; 0110110....0110 #9
CONST %_0111001 = 6  ; 0111001....0000 #6
CONST %_1010110 = 15 ; 1010110....0101 #15
CONST %_1010111 = 14 ; 1010111....1101 #14
CONST %_1100011 = 12 ; 1100011....1010 #12
CONST %_1101000 = 0  ; 1101000....0010 #0
CONST %_1101010 = 2  ; 1101010....1001 #2
CONST %_1111001 = 11 ; 1111001....0110 #11

start:

        STEP => A
        0 :ASSERT

        ; to verify that there are no correlations between counters
        0 => A
        CNT_ARITH :ASSERT
        CNT_BINARY :ASSERT
        CNT_KECCAK_F: ASSERT
        CNT_MEM_ALIGN :ASSERT
        CNT_POSEIDON_G :ASSERT
        CNT_PADDING_PG :ASSERT

        0 => SR

        %_1111001 => A
        0x10n => D
        $ => SR :SSTORE

        %_1100011 => A
        0x20n => D
        $ => SR :SSTORE

        %_1101000 => A
        0x40n => D
        $ => SR :SSTORE

        %_1111001 => A
        0n => D
        $ => SR :SSTORE

        %_1101000 => A
        0n => D
        $ => SR :SSTORE

        %_1100011 => A
        0n => D
        $ => SR :SSTORE

end:
       0 => A,B,C,D,E,CTX, SP, PC, GAS, SR

finalWait:
        ${beforeLast()}  : JMPN(finalWait)

                         : JMP(start)
opINVALID: