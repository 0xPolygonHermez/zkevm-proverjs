namespace Rom(%N);

    pol constant CONST0;
    pol constant CONST1;
    pol constant offset;

    pol constant inA, inB, inC, inROTL_C, inD, inE, inFREE, inCTX, inSP, inPC, inGAS, inHASHPOS, inSTEP, inRR ,inRCX;
    pol constant inCntArith, inCntBinary, inCntKeccakF, inCntMemAlign;
    pol constant incStack;
    pol constant binOpcode;
    pol constant jmpAddr, elseAddr;

    pol constant line;

    pol constant operations;

    /*
      comment genereated with:
      node tools/pil_pol_table/bits_compose.js "arith,assert,bin,hashK,hashKDigest,hashKLen,ind,indRR,isMem,isStack,JMP,JMPC,JMPN,memAlignRD,memAlignWR,memAlignWR8,mOp,mWR,repeat,setA,setB,setC,setCTX,setD,setE,setGAS,setHASHPOS,setPC,setRCX,setRR,setSP,useCTX,useJmpAddr,JMPZ,call,return,hashK1,useElseAddr"

      operations =
            2**0  * arith         + 2**1  * assert        + 2**2  * bin           + 2**3  * hashK
            + 2**4  * hashKDigest   + 2**5  * hashKLen      + 2**6  * ind           + 2**7  * indRR
            + 2**8  * isMem         + 2**9  * isStack       + 2**10 * JMP           + 2**11 * JMPC
            + 2**12 * JMPN          + 2**13 * memAlignRD    + 2**14 * memAlignWR    + 2**15 * memAlignWR8
            + 2**16 * mOp           + 2**17 * mWR           + 2**18 * repeat        + 2**19 * setA
            + 2**20 * setB          + 2**21 * setC          + 2**22 * setCTX        + 2**23 * setD
            + 2**24 * setE          + 2**25 * setGAS        + 2**26 * setHASHPOS    + 2**27 * setPC
            + 2**28 * setRCX        + 2**29 * setRR         + 2**30 * setSP         + 2**31 * useCTX
            + 2**32 * useJmpAddr    + 2**33 * JMPZ          + 2**34 * call          + 2**35 * return
            + 2**36 * hashK1        + 2**37 * useElseAddr

    */
