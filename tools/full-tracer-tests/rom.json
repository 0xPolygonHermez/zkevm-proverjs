{
    "program": [
     {
      "inSTEP": "1",
      "setA": 1,
      "line": 16,
      "fileName": "main.zkasm",
      "lineStr": "        STEP => A"
     },
     {
      "CONST": "0",
      "assert": 1,
      "line": 17,
      "fileName": "main.zkasm",
      "lineStr": "        0                                   :ASSERT ; Ensure it is the beginning of the execution"
     },
     {
      "inCTX": "1",
      "offset": 8,
      "mOp": 1,
      "mWR": 1,
      "line": 19,
      "offsetLabel": "forkID",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        CTX                                 :MSTORE(forkID)"
     },
     {
      "inCTX": "1",
      "CONST": "-4",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4,
      "useElseAddr": 1,
      "elseAddr": 5015,
      "line": 20,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "failAssert",
      "fileName": "main.zkasm",
      "lineStr": "        CTX - %FORK_ID                      :JMPNZ(failAssert)"
     },
     {
      "inB": "1",
      "offset": 0,
      "mOp": 1,
      "mWR": 1,
      "line": 22,
      "offsetLabel": "oldStateRoot",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        B                                   :MSTORE(oldStateRoot)"
     },
     {
      "inC": "1",
      "offset": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 23,
      "offsetLabel": "oldAccInputHash",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        C                                   :MSTORE(oldAccInputHash)"
     },
     {
      "inSP": "1",
      "offset": 3,
      "mOp": 1,
      "mWR": 1,
      "line": 24,
      "offsetLabel": "oldNumBatch",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        SP                                  :MSTORE(oldNumBatch)"
     },
     {
      "inGAS": "1",
      "offset": 7,
      "mOp": 1,
      "mWR": 1,
      "line": 25,
      "offsetLabel": "chainID",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        GAS                                 :MSTORE(chainID) ; assumed to be less than 32 bits"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "getGlobalExitRoot",
       "params": []
      },
      "inFREE": "1",
      "offset": 2,
      "mOp": 1,
      "mWR": 1,
      "line": 27,
      "offsetLabel": "globalExitRoot",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        ${getGlobalExitRoot()}              :MSTORE(globalExitRoot)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "getSequencerAddr",
       "params": []
      },
      "inFREE": "1",
      "offset": 4,
      "mOp": 1,
      "mWR": 1,
      "line": 28,
      "offsetLabel": "sequencerAddr",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        ${getSequencerAddr()}               :MSTORE(sequencerAddr)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "getTimestamp",
       "params": []
      },
      "inFREE": "1",
      "offset": 6,
      "mOp": 1,
      "mWR": 1,
      "line": 29,
      "offsetLabel": "timestamp",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        ${getTimestamp()}                   :MSTORE(timestamp)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "getTxsLen",
       "params": []
      },
      "inFREE": "1",
      "offset": 18,
      "mOp": 1,
      "mWR": 1,
      "line": 30,
      "offsetLabel": "batchL2DataLength",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        ${getTxsLen()}                      :MSTORE(batchL2DataLength) ; less than 300.000 bytes. Enforced by the smart contract"
     },
     {
      "inB": "1",
      "setSR": 1,
      "line": 32,
      "fileName": "main.zkasm",
      "lineStr": "        B => SR ;set initial state root"
     },
     {
      "inSP": "1",
      "CONST": "1",
      "offset": 11,
      "mOp": 1,
      "mWR": 1,
      "line": 35,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onStartBatch"
         },
         {
          "op": "getReg",
          "regName": "C"
         }
        ]
       }
      ],
      "offsetLabel": "newNumBatch",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        SP + 1                              :MSTORE(newNumBatch)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 45,
      "offsetLabel": "globalExitRoot",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                                  :MLOAD(globalExitRoot)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 46,
      "fileName": "main.zkasm",
      "lineStr": "        0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 30,
      "useElseAddr": 1,
      "elseAddr": 17,
      "line": 47,
      "jmpAddrLabel": "skipSetGlobalExitRoot",
      "elseAddrLabel": "next",
      "fileName": "main.zkasm",
      "lineStr": "        $                                       :EQ, JMPC(skipSetGlobalExitRoot)"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 51,
      "fileName": "main.zkasm",
      "lineStr": "        0 => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 52,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => E                                  :MLOAD(lastHashKIdUsed)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 53,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        E+1 => E                                :MSTORE(lastHashKIdUsed)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 55,
      "fileName": "main.zkasm",
      "lineStr": "        32 => D"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 56,
      "fileName": "main.zkasm",
      "lineStr": "        A                                       :HASHK(E)"
     },
     {
      "CONST": "0",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 57,
      "fileName": "main.zkasm",
      "lineStr": "        %GLOBAL_EXIT_ROOT_STORAGE_POS           :HASHK(E) ; Storage position of the global exit root map"
     },
     {
      "inHASHPOS": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 58,
      "fileName": "main.zkasm",
      "lineStr": "        HASHPOS                                 :HASHKLEN(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "line": 59,
      "fileName": "main.zkasm",
      "lineStr": "        $ => C                                  :HASHKDIGEST(E)"
     },
     {
      "CONSTL": "936572701188795762702460789585668173002398546170",
      "setA": 1,
      "line": 61,
      "fileName": "main.zkasm",
      "lineStr": "        %ADDRESS_GLOBAL_EXIT_ROOT_MANAGER_L2 => A"
     },
     {
      "CONST": "3",
      "setB": 1,
      "line": 62,
      "fileName": "main.zkasm",
      "lineStr": "        %SMT_KEY_SC_STORAGE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "sRD": 1,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 28,
      "useElseAddr": 1,
      "elseAddr": 30,
      "line": 67,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "skipSetGlobalExitRoot",
      "fileName": "main.zkasm",
      "lineStr": "        $ => D                                  :SLOAD, JMPNZ(skipSetGlobalExitRoot)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 6,
      "mOp": 1,
      "mWR": 0,
      "line": 69,
      "offsetLabel": "timestamp",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => D                                  :MLOAD(timestamp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 70,
      "fileName": "main.zkasm",
      "lineStr": "        $ => SR                                 :SSTORE ; Store 'timestamp' in storage position 'keccak256(globalExitRoot, 0)'"
     },
     {
      "inSR": "1",
      "offset": 34,
      "mOp": 1,
      "mWR": 1,
      "line": 73,
      "offsetLabel": "batchSR",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        SR                                      :MSTORE(batchSR)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 75,
      "fileName": "main.zkasm",
      "lineStr": "        %LAST_TX_STORAGE_POS => C"
     },
     {
      "CONSTL": "1554098974",
      "setA": 1,
      "line": 76,
      "fileName": "main.zkasm",
      "lineStr": "        %ADDRESS_SYSTEM => A"
     },
     {
      "CONST": "3",
      "setB": 1,
      "line": 77,
      "fileName": "main.zkasm",
      "lineStr": "        %SMT_KEY_SC_STORAGE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "sRD": 1,
      "line": 78,
      "fileName": "main.zkasm",
      "lineStr": "        $ => D          :SLOAD"
     },
     {
      "inD": "1",
      "offset": 35,
      "mOp": 1,
      "mWR": 1,
      "line": 79,
      "offsetLabel": "txCount",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        D               :MSTORE(txCount)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 18,
      "mOp": 1,
      "mWR": 0,
      "line": 82,
      "offsetLabel": "batchL2DataLength",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A          :MLOAD(batchL2DataLength)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 85,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        A + 1                                   :MSTORE(arithA)"
     },
     {
      "CONST": "136",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 86,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "main.zkasm",
      "lineStr": "        136                                     :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 87,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => B                                  :MLOAD(arithRes1)"
     },
     {
      "inB": "1",
      "CONST": "2",
      "setB": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 1,
      "line": 89,
      "offsetLabel": "cntKeccakPreProcess",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        B + 1 + %MIN_CNT_KECCAK_BATCH => B      :MSTORE(cntKeccakPreProcess)"
     },
     {
      "CONST": "2258",
      "inCntKeccakF": "-1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 284,
      "useElseAddr": 1,
      "elseAddr": 42,
      "line": 90,
      "jmpAddrLabel": "handleOOCKatRLP",
      "elseAddrLabel": "next",
      "fileName": "main.zkasm",
      "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - B    :JMPN(handleOOCKatRLP)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 98,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        E+1 => E                            :MSTORE(lastHashKIdUsed)"
     },
     {
      "CONST": "0",
      "offset": 20,
      "mOp": 1,
      "mWR": 1,
      "line": 99,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        0                                   :MSTORE(batchHashPos)"
     },
     {
      "inE": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "line": 100,
      "offsetLabel": "batchHashDataId",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        E                                   :MSTORE(batchHashDataId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 101,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                              :MLOAD(lastCtxUsed)"
     },
     {
      "inA": "1",
      "offset": 15,
      "mOp": 1,
      "mWR": 1,
      "line": 102,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "p"
         },
         {
          "op": "number",
          "num": "0"
         }
        ]
       }
      ],
      "offsetLabel": "ctxTxToUse",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        A                                   :MSTORE(ctxTxToUse) ; Points at first context to be used when processing transactions"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 107,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A          :MLOAD(lastCtxUsed)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setCTX": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 1,
      "line": 108,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        A+1 => CTX      :MSTORE(lastCtxUsed)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 18,
      "mOp": 1,
      "mWR": 0,
      "line": 110,
      "offsetLabel": "batchL2DataLength",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A          :MLOAD(batchL2DataLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 111,
      "offsetLabel": "batchL2DataParsed",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => C          :MLOAD(batchL2DataParsed)"
     },
     {
      "inC": "1",
      "inA": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 133,
      "useElseAddr": 1,
      "elseAddr": 52,
      "line": 112,
      "jmpAddrLabel": "loadTx_rlp",
      "elseAddrLabel": "endCheckRLP",
      "fileName": "main.zkasm",
      "lineStr": "        C - A           :JMPN(loadTx_rlp, endCheckRLP)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 53,
      "line": 114,
      "jmpAddrLabel": "txLoop",
      "fileName": "main.zkasm",
      "lineStr": "                        :JMP(txLoop)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "line": 122,
      "offsetLabel": "pendingTxs",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A          :MLOAD(pendingTxs)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 59,
      "useElseAddr": 1,
      "elseAddr": 55,
      "line": 123,
      "offsetLabel": "pendingTxs",
      "useCTX": 0,
      "jmpAddrLabel": "processTxsEnd",
      "elseAddrLabel": "next",
      "fileName": "main.zkasm",
      "lineStr": "        A-1 => A        :MSTORE(pendingTxs), JMPN(processTxsEnd)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 15,
      "mOp": 1,
      "mWR": 0,
      "line": 125,
      "offsetLabel": "ctxTxToUse",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A          :MLOAD(ctxTxToUse) ; Load first context used by transaction"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setCTX": 1,
      "offset": 15,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3903,
      "line": 126,
      "offsetLabel": "ctxTxToUse",
      "useCTX": 0,
      "jmpAddrLabel": "processTx",
      "fileName": "main.zkasm",
      "lineStr": "        A+1 => CTX      :MSTORE(ctxTxToUse),JMP(processTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4903,
      "call": 1,
      "line": 129,
      "jmpAddrLabel": "updateSystemData",
      "fileName": "main.zkasm",
      "lineStr": "                        :CALL(updateSystemData)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 53,
      "line": 131,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onFinishTx"
         }
        ]
       }
      ],
      "jmpAddrLabel": "txLoop",
      "fileName": "main.zkasm",
      "lineStr": "        $${eventLog(onFinishTx)}   :JMP(txLoop)"
     },
     {
      "CONSTL": "936572701188795762702460789585668173002398546170",
      "setA": 1,
      "line": 146,
      "fileName": "main.zkasm",
      "lineStr": "        %ADDRESS_GLOBAL_EXIT_ROOT_MANAGER_L2  => A"
     },
     {
      "CONST": "3",
      "setB": 1,
      "line": 147,
      "fileName": "main.zkasm",
      "lineStr": "        %SMT_KEY_SC_STORAGE => B"
     },
     {
      "CONST": "1",
      "setC": 1,
      "line": 148,
      "fileName": "main.zkasm",
      "lineStr": "        %LOCAL_EXIT_ROOT_STORAGE_POS => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 149,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                                          :SLOAD"
     },
     {
      "inA": "1",
      "offset": 10,
      "mOp": 1,
      "mWR": 1,
      "line": 150,
      "offsetLabel": "newLocalExitRoot",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        A                                               :MSTORE(newLocalExitRoot)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 20,
      "mOp": 1,
      "mWR": 0,
      "line": 154,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                          :MLOAD(batchHashPos)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 18,
      "mOp": 1,
      "mWR": 0,
      "assert": 1,
      "line": 155,
      "offsetLabel": "batchL2DataLength",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $                               :MLOAD(batchL2DataLength), ASSERT"
     },
     {
      "inA": "1",
      "setHASHPOS": 1,
      "line": 158,
      "fileName": "main.zkasm",
      "lineStr": "        A => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 159,
      "offsetLabel": "batchHashDataId",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
     },
     {
      "inHASHPOS": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 161,
      "fileName": "main.zkasm",
      "lineStr": "        HASHPOS                         :HASHKLEN(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "line": 162,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                          :HASHKDIGEST(E)"
     },
     {
      "inA": "1",
      "offset": 5,
      "mOp": 1,
      "mWR": 1,
      "line": 164,
      "offsetLabel": "batchHashData",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        A                               :MSTORE(batchHashData)"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 167,
      "fileName": "main.zkasm",
      "lineStr": "        0 => HASHPOS"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 169,
      "fileName": "main.zkasm",
      "lineStr": "        32 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 170,
      "offsetLabel": "oldAccInputHash",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                          :MLOAD(oldAccInputHash)"
     },
     {
      "inA": "1",
      "ind": 0,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 171,
      "fileName": "main.zkasm",
      "lineStr": "        A                               :HASHK(0)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 5,
      "mOp": 1,
      "mWR": 0,
      "line": 173,
      "offsetLabel": "batchHashData",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                          :MLOAD(batchHashData)"
     },
     {
      "inA": "1",
      "ind": 0,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 174,
      "fileName": "main.zkasm",
      "lineStr": "        A                               :HASHK(0)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 176,
      "offsetLabel": "globalExitRoot",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                          :MLOAD(globalExitRoot)"
     },
     {
      "inA": "1",
      "ind": 0,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 177,
      "fileName": "main.zkasm",
      "lineStr": "        A                               :HASHK(0)"
     },
     {
      "CONST": "8",
      "setD": 1,
      "line": 179,
      "fileName": "main.zkasm",
      "lineStr": "        8 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 6,
      "mOp": 1,
      "mWR": 0,
      "line": 180,
      "offsetLabel": "timestamp",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                          :MLOAD(timestamp)"
     },
     {
      "inA": "1",
      "ind": 0,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 181,
      "fileName": "main.zkasm",
      "lineStr": "        A                               :HASHK(0)"
     },
     {
      "CONST": "20",
      "setD": 1,
      "line": 183,
      "fileName": "main.zkasm",
      "lineStr": "        20 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 4,
      "mOp": 1,
      "mWR": 0,
      "line": 184,
      "offsetLabel": "sequencerAddr",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => A                          :MLOAD(sequencerAddr)"
     },
     {
      "inA": "1",
      "ind": 0,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 185,
      "fileName": "main.zkasm",
      "lineStr": "        A                               :HASHK(0)"
     },
     {
      "inHASHPOS": "1",
      "ind": 0,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 187,
      "fileName": "main.zkasm",
      "lineStr": "        HASHPOS                         :HASHKLEN(0)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "ind": 0,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "line": 189,
      "fileName": "main.zkasm",
      "lineStr": "        $ => C                          :HASHKDIGEST(0)"
     },
     {
      "inC": "1",
      "offset": 9,
      "mOp": 1,
      "mWR": 1,
      "line": 190,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onFinishBatch"
         }
        ]
       }
      ],
      "offsetLabel": "newAccInputHash",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        C                               :MSTORE(newAccInputHash)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 9,
      "mOp": 1,
      "mWR": 0,
      "line": 197,
      "offsetLabel": "newAccInputHash",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => D                          :MLOAD(newAccInputHash)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 10,
      "mOp": 1,
      "mWR": 0,
      "line": 198,
      "offsetLabel": "newLocalExitRoot",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => E                          :MLOAD(newLocalExitRoot)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 11,
      "mOp": 1,
      "mWR": 0,
      "line": 199,
      "offsetLabel": "newNumBatch",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => PC                         :MLOAD(newNumBatch)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 8,
      "mOp": 1,
      "mWR": 0,
      "line": 202,
      "offsetLabel": "forkID",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => CTX                        :MLOAD(forkID)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 0,
      "mOp": 1,
      "mWR": 0,
      "line": 203,
      "offsetLabel": "oldStateRoot",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => B                          :MLOAD(oldStateRoot)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 204,
      "offsetLabel": "oldAccInputHash",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => C                          :MLOAD(oldAccInputHash)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 205,
      "offsetLabel": "oldNumBatch",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => SP                         :MLOAD(oldNumBatch)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setGAS": 1,
      "offset": 7,
      "mOp": 1,
      "mWR": 0,
      "line": 206,
      "offsetLabel": "chainID",
      "useCTX": 0,
      "fileName": "main.zkasm",
      "lineStr": "        $ => GAS                        :MLOAD(chainID)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 97,
      "line": 208,
      "jmpAddrLabel": "finalWait",
      "fileName": "main.zkasm",
      "lineStr": "                                        :JMP(finalWait)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "beforeLast",
       "params": []
      },
      "inFREE": "1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 97,
      "useElseAddr": 1,
      "elseAddr": 98,
      "line": 2,
      "jmpAddrLabel": "finalWait",
      "elseAddrLabel": "next",
      "fileName": "end.zkasm",
      "lineStr": "    ${beforeLast()}                                       :JMPN(finalWait)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "setD": 1,
      "setE": 1,
      "setPC": 1,
      "setSR": 1,
      "setHASHPOS": 1,
      "setRR": 1,
      "setRCX": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 0,
      "line": 4,
      "jmpAddrLabel": "start",
      "fileName": "end.zkasm",
      "lineStr": "    0 => A, D, E, PC, SR, HASHPOS, RR, RCX   :JMP(start)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setHASHPOS": 1,
      "offset": 20,
      "mOp": 1,
      "mWR": 0,
      "line": 4,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => HASHPOS                    :MLOAD(batchHashPos)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 5,
      "offsetLabel": "batchHashDataId",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 6,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A                               :HASHK(E)"
     },
     {
      "inHASHPOS": "1",
      "offset": 20,
      "mOp": 1,
      "mWR": 1,
      "line": 7,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        HASHPOS                         :MSTORE(batchHashPos)"
     },
     {
      "inC": "1",
      "setHASHPOS": 1,
      "line": 8,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        C => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 9,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed), RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 18,
      "mOp": 1,
      "mWR": 0,
      "line": 13,
      "offsetLabel": "batchL2DataLength",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => A                          :MLOAD(batchL2DataLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 14,
      "offsetLabel": "batchL2DataParsed",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => B                          :MLOAD(batchL2DataParsed)"
     },
     {
      "inA": "1",
      "inB": "-1",
      "inC": "-1",
      "inD": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 287,
      "useElseAddr": 1,
      "elseAddr": 108,
      "line": 15,
      "jmpAddrLabel": "invalidTxRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A - B - C - D                   :JMPN(invalidTxRLP)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "getTxs",
       "params": [
        {
         "op": "getVar",
         "varName": "p"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      },
      "inFREE": "1",
      "setA": 1,
      "line": 16,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "getVar",
          "varName": "p"
         },
         {
          "op": "add",
          "values": [
           {
            "op": "getVar",
            "varName": "p"
           },
           {
            "op": "getReg",
            "regName": "D"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        ${getTxs(p,D)} => A"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 18,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "                                        :RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 40,
      "mOp": 1,
      "mWR": 0,
      "line": 22,
      "offsetLabel": "txRLPLength",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txRLPLength)"
     },
     {
      "inA": "1",
      "inHASHPOS": "-1",
      "inD": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 287,
      "useElseAddr": 1,
      "elseAddr": 112,
      "line": 23,
      "jmpAddrLabel": "invalidTxRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A - HASHPOS - D                 :JMPN(invalidTxRLP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 18,
      "mOp": 1,
      "mWR": 0,
      "line": 25,
      "offsetLabel": "batchL2DataLength",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => A                          :MLOAD(batchL2DataLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 26,
      "offsetLabel": "batchL2DataParsed",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => B                          :MLOAD(batchL2DataParsed)"
     },
     {
      "inA": "1",
      "inB": "-1",
      "inC": "-1",
      "inD": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 287,
      "useElseAddr": 1,
      "elseAddr": 115,
      "line": 27,
      "jmpAddrLabel": "invalidTxRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A - B - C - D                   :JMPN(invalidTxRLP)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "getTxs",
       "params": [
        {
         "op": "getVar",
         "varName": "p"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      },
      "inFREE": "1",
      "setA": 1,
      "line": 28,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "getVar",
          "varName": "p"
         },
         {
          "op": "add",
          "values": [
           {
            "op": "getVar",
            "varName": "p"
           },
           {
            "op": "getReg",
            "regName": "D"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        ${getTxs(p,D)} => A"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 30,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A                               :HASHK(E)"
     },
     {
      "inC": "1",
      "inD": "1",
      "setC": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 31,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        C + D => C                      :RETURN"
     },
     {
      "inD": "1",
      "CONST": "-1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 119,
      "useElseAddr": 1,
      "elseAddr": 120,
      "line": 35,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "skipCheckShort",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        D - 1                           :JMPNZ(skipCheckShort)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 287,
      "useElseAddr": 1,
      "elseAddr": 120,
      "line": 36,
      "jmpAddrLabel": "invalidTxRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A - %MIN_VALUE_SHORT            :JMPN(invalidTxRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 39,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "                                        :RETURN"
     },
     {
      "inA": "1",
      "CONST": "-56",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 287,
      "useElseAddr": 1,
      "elseAddr": 122,
      "line": 43,
      "jmpAddrLabel": "invalidTxRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A - %MIN_BYTES_LONG             :JMPN(invalidTxRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 44,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "                                        :RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 48,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txCalldataLen)"
     },
     {
      "inB": "1",
      "CONST": "-1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 125,
      "useElseAddr": 1,
      "elseAddr": 126,
      "line": 49,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "skipCheckShortData",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        B - 1                           :JMPNZ(skipCheckShortData)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 287,
      "useElseAddr": 1,
      "elseAddr": 126,
      "line": 50,
      "jmpAddrLabel": "invalidTxRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A - %MIN_VALUE_SHORT            :JMPN(invalidTxRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 53,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "                                        :RETURN"
     },
     {
      "inRR": "1",
      "offset": 43,
      "mOp": 1,
      "mWR": 1,
      "line": 59,
      "offsetLabel": "tmpVarZkPCcheckNonLeadingZeros",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        RR              :MSTORE(tmpVarZkPCcheckNonLeadingZeros)"
     },
     {
      "inA": "1",
      "offset": 42,
      "mOp": 1,
      "mWR": 1,
      "line": 60,
      "offsetLabel": "tmpVarAcheckNonLeadingZeros",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A               :MSTORE(tmpVarAcheckNonLeadingZeros)"
     },
     {
      "inA": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4238,
      "call": 1,
      "line": 62,
      "jmpAddrLabel": "getLenBytes",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        A => B          :CALL(getLenBytes) ; in: [B: number] out: [A: byte length of B]"
     },
     {
      "inD": "1",
      "inA": "-1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 131,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 64,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        D - A           :JMPNZ(invalidTxRLP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 43,
      "mOp": 1,
      "mWR": 0,
      "line": 65,
      "offsetLabel": "tmpVarZkPCcheckNonLeadingZeros",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => RR         :MLOAD(tmpVarZkPCcheckNonLeadingZeros)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 42,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 66,
      "offsetLabel": "tmpVarAcheckNonLeadingZeros",
      "useCTX": 0,
      "fileName": "load-tx-rlp-utils.zkasm",
      "lineStr": "        $ => A          :MLOAD(tmpVarAcheckNonLeadingZeros), RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 19,
      "offsetLabel": "cntKeccakPreProcess",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => D                                          :MLOAD(cntKeccakPreProcess)"
     },
     {
      "CONST": "2257",
      "inCntKeccakF": "-1",
      "inD": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 284,
      "useElseAddr": 1,
      "elseAddr": 135,
      "line": 20,
      "jmpAddrLabel": "handleOOCKatRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - 1 - D        :JMPN(handleOOCKatRLP)"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 23,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        0 => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 26,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 27,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        E+1 => E                        :MSTORE(lastHashKIdUsed)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 29,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 112,
      "call": 1,
      "line": 37,
      "jmpAddrLabel": "addHashTxBegin",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1 => D                          :CALL(addHashTxBegin)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 38,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "inA": "1",
      "CONST": "-192",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 287,
      "useElseAddr": 1,
      "elseAddr": 142,
      "line": 39,
      "jmpAddrLabel": "invalidTxRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xc0                        :JMPN(invalidTxRLP)"
     },
     {
      "inA": "1",
      "CONST": "-248",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 149,
      "useElseAddr": 1,
      "elseAddr": 143,
      "line": 40,
      "jmpAddrLabel": "shortList",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xf8                        :JMPN(shortList)"
     },
     {
      "inA": "1",
      "CONST": "-251",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 144,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 44,
      "jmpAddrLabel": "longList",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xfb                        :JMPN(longList, invalidTxRLP)"
     },
     {
      "inA": "1",
      "CONST": "-247",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 112,
      "call": 1,
      "line": 47,
      "jmpAddrLabel": "addHashTxBegin",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xf7 => D                   :CALL(addHashTxBegin)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 48,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 121,
      "call": 1,
      "line": 49,
      "jmpAddrLabel": "checkLongRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkLongRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 127,
      "call": 1,
      "line": 50,
      "jmpAddrLabel": "checkNonLeadingZeros",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkNonLeadingZeros)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 150,
      "line": 51,
      "jmpAddrLabel": "endList",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :JMP(endList)"
     },
     {
      "inA": "1",
      "CONST": "-192",
      "setA": 1,
      "line": 53,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xc0 => A"
     },
     {
      "inA": "1",
      "inC": "1",
      "setB": 1,
      "offset": 40,
      "mOp": 1,
      "mWR": 1,
      "line": 56,
      "offsetLabel": "txRLPLength",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A + C => B                      :MSTORE(txRLPLength)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 58,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        B + 1                           :MSTORE(arithA)"
     },
     {
      "CONST": "136",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 59,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        136                             :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 60,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => B                          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 61,
      "offsetLabel": "cntKeccakPreProcess",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => D                          :MLOAD(cntKeccakPreProcess)"
     },
     {
      "CONST": "2257",
      "inCntKeccakF": "-1",
      "inB": "-1",
      "inD": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 284,
      "useElseAddr": 1,
      "elseAddr": 156,
      "line": 62,
      "jmpAddrLabel": "handleOOCKatRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - B - D - 1:JMPN(handleOOCKatRLP)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 67,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1 => D                          :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 68,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 167,
      "useElseAddr": 1,
      "elseAddr": 159,
      "line": 69,
      "jmpAddrLabel": "endNonce",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80                        :JMPN(endNonce)"
     },
     {
      "inA": "1",
      "CONST": "-129",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 161,
      "useElseAddr": 1,
      "elseAddr": 160,
      "line": 70,
      "jmpAddrLabel": "nonce0",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x81                        :JMPN(nonce0)"
     },
     {
      "inA": "1",
      "CONST": "-137",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 162,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 71,
      "jmpAddrLabel": "shortNonce",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x89                        :JMPN(shortNonce, invalidTxRLP)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "offset": 15,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 167,
      "line": 74,
      "offsetLabel": "lengthNonce",
      "useCTX": 1,
      "jmpAddrLabel": "endNonce",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        0 => A                         :MSTORE(lengthNonce), JMP(endNonce)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "setD": 1,
      "line": 77,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80 => D"
     },
     {
      "inD": "1",
      "offset": 15,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 78,
      "offsetLabel": "lengthNonce",
      "useCTX": 1,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        D                               :MSTORE(lengthNonce), CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 79,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 118,
      "call": 1,
      "line": 80,
      "jmpAddrLabel": "checkShortRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkShortRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 127,
      "call": 1,
      "line": 81,
      "jmpAddrLabel": "checkNonLeadingZeros",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkNonLeadingZeros)"
     },
     {
      "inA": "1",
      "offset": 4,
      "mOp": 1,
      "mWR": 1,
      "line": 84,
      "offsetLabel": "txNonce",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txNonce)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 89,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1 => D                          :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 90,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 178,
      "useElseAddr": 1,
      "elseAddr": 171,
      "line": 91,
      "jmpAddrLabel": "endGasPrice",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80                        :JMPN(endGasPrice)"
     },
     {
      "inA": "1",
      "CONST": "-129",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 173,
      "useElseAddr": 1,
      "elseAddr": 172,
      "line": 92,
      "jmpAddrLabel": "gasPrice0",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x81                        :JMPN(gasPrice0)"
     },
     {
      "inA": "1",
      "CONST": "-161",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 174,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 93,
      "jmpAddrLabel": "shortGasPrice",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xa1                        :JMPN(shortGasPrice, invalidTxRLP)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 178,
      "line": 96,
      "jmpAddrLabel": "endGasPrice",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        0 => A                          :JMP(endGasPrice)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 99,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80 => D                   :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 100,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 118,
      "call": 1,
      "line": 101,
      "jmpAddrLabel": "checkShortRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkShortRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 127,
      "call": 1,
      "line": 102,
      "jmpAddrLabel": "checkNonLeadingZeros",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkNonLeadingZeros)"
     },
     {
      "inA": "1",
      "offset": 5,
      "mOp": 1,
      "mWR": 1,
      "line": 105,
      "offsetLabel": "txGasPriceRLP",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txGasPriceRLP)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 111,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1 => D                          :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 112,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 189,
      "useElseAddr": 1,
      "elseAddr": 182,
      "line": 113,
      "jmpAddrLabel": "endGasLimit",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80                        :JMPN(endGasLimit)"
     },
     {
      "inA": "1",
      "CONST": "-129",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 184,
      "useElseAddr": 1,
      "elseAddr": 183,
      "line": 114,
      "jmpAddrLabel": "gasLimit0",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x81                        :JMPN(gasLimit0)"
     },
     {
      "inA": "1",
      "CONST": "-137",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 185,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 115,
      "jmpAddrLabel": "shortGasLimit",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x89                        :JMPN(shortGasLimit, invalidTxRLP)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 189,
      "line": 118,
      "jmpAddrLabel": "endGasLimit",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        0 => A                          :JMP(endGasLimit)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 121,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80 => D                   :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 122,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 118,
      "call": 1,
      "line": 123,
      "jmpAddrLabel": "checkShortRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkShortRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 127,
      "call": 1,
      "line": 124,
      "jmpAddrLabel": "checkNonLeadingZeros",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkNonLeadingZeros)"
     },
     {
      "inA": "1",
      "offset": 0,
      "mOp": 1,
      "mWR": 1,
      "line": 127,
      "offsetLabel": "txGasLimit",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txGasLimit)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 132,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1 => D                          :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 133,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 287,
      "useElseAddr": 1,
      "elseAddr": 193,
      "line": 134,
      "jmpAddrLabel": "invalidTxRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80                        :JMPN(invalidTxRLP)"
     },
     {
      "inA": "1",
      "CONST": "-129",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 196,
      "useElseAddr": 1,
      "elseAddr": 194,
      "line": 135,
      "jmpAddrLabel": "noTo",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x81                        :JMPN(noTo)"
     },
     {
      "inA": "1",
      "CONST": "-148",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 287,
      "useElseAddr": 1,
      "elseAddr": 195,
      "line": 136,
      "jmpAddrLabel": "invalidTxRLP",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x94                        :JMPN(invalidTxRLP)"
     },
     {
      "inA": "1",
      "CONST": "-149",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 197,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 137,
      "jmpAddrLabel": "shortTo",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x95                        :JMPN(shortTo, invalidTxRLP)"
     },
     {
      "CONST": "1",
      "offset": 13,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 201,
      "line": 140,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "endTo",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1                               :MSTORE(isCreateContract), JMP(endTo)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 143,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80 => D                   :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 144,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "inA": "1",
      "offset": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 145,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txDestAddr)"
     },
     {
      "inA": "1",
      "offset": 2,
      "mOp": 1,
      "mWR": 1,
      "line": 146,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(storageAddr)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 153,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1 => D                          :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 154,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 211,
      "useElseAddr": 1,
      "elseAddr": 204,
      "line": 155,
      "jmpAddrLabel": "endValue",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80                        :JMPN(endValue)"
     },
     {
      "inA": "1",
      "CONST": "-129",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 206,
      "useElseAddr": 1,
      "elseAddr": 205,
      "line": 156,
      "jmpAddrLabel": "value0",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x81                        :JMPN(value0)"
     },
     {
      "inA": "1",
      "CONST": "-161",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 207,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 157,
      "jmpAddrLabel": "shortValue",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xa1                        :JMPN(shortValue, invalidTxRLP)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 211,
      "line": 160,
      "jmpAddrLabel": "endValue",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        0 => A                          :JMP(endValue)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 163,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80 => D                   :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 164,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 118,
      "call": 1,
      "line": 165,
      "jmpAddrLabel": "checkShortRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkShortRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 127,
      "call": 1,
      "line": 166,
      "jmpAddrLabel": "checkNonLeadingZeros",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkNonLeadingZeros)"
     },
     {
      "inA": "1",
      "offset": 3,
      "mOp": 1,
      "mWR": 1,
      "line": 169,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txValue)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 20,
      "mOp": 1,
      "mWR": 0,
      "line": 174,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => D                          :MLOAD(batchHashPos)"
     },
     {
      "inD": "1",
      "offset": 39,
      "mOp": 1,
      "mWR": 1,
      "line": 175,
      "offsetLabel": "dataStarts",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        D                               :MSTORE(dataStarts)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 176,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1 => D"
     },
     {
      "CONST": "1024",
      "setSP": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 177,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        %CALLDATA_OFFSET => SP          :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 178,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 221,
      "useElseAddr": 1,
      "elseAddr": 218,
      "line": 179,
      "jmpAddrLabel": "veryShortData",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80                        :JMPN(veryShortData)"
     },
     {
      "inA": "1",
      "CONST": "-129",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 245,
      "useElseAddr": 1,
      "elseAddr": 219,
      "line": 180,
      "jmpAddrLabel": "endData",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x81                        :JMPN(endData)"
     },
     {
      "inA": "1",
      "CONST": "-184",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 224,
      "useElseAddr": 1,
      "elseAddr": 220,
      "line": 181,
      "jmpAddrLabel": "shortData",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xb8                        :JMPN(shortData)"
     },
     {
      "inA": "1",
      "CONST": "-187",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 227,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 185,
      "jmpAddrLabel": "longData",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xbb                        :JMPN(longData, invalidTxRLP)"
     },
     {
      "CONST": "1",
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "line": 188,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1                               :MSTORE(txCalldataLen)"
     },
     {
      "CONST": "31",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "call": 1,
      "line": 189,
      "jmpAddrLabel": "SHLarith",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        31 => D                         :CALL(SHLarith)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 245,
      "line": 190,
      "jmpAddrLabel": "endData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(SP++), JMP(endData)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 20,
      "mOp": 1,
      "mWR": 0,
      "line": 193,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => D                          :MLOAD(batchHashPos)"
     },
     {
      "inD": "1",
      "offset": 39,
      "mOp": 1,
      "mWR": 1,
      "line": 194,
      "offsetLabel": "dataStarts",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        D                               :MSTORE(dataStarts)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 234,
      "line": 195,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "jmpAddrLabel": "readData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80 => B                   :MSTORE(txCalldataLen), JMP(readData)"
     },
     {
      "inA": "1",
      "CONST": "-183",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 198,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0xb7 => D                   :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 199,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 121,
      "call": 1,
      "line": 200,
      "jmpAddrLabel": "checkLongRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkLongRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 127,
      "call": 1,
      "line": 201,
      "jmpAddrLabel": "checkNonLeadingZeros",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkNonLeadingZeros)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 20,
      "mOp": 1,
      "mWR": 0,
      "line": 202,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => D                          :MLOAD(batchHashPos)"
     },
     {
      "inD": "1",
      "offset": 39,
      "mOp": 1,
      "mWR": 1,
      "line": 203,
      "offsetLabel": "dataStarts",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        D                               :MSTORE(dataStarts)"
     },
     {
      "inA": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "line": 204,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A => B                          :MSTORE(txCalldataLen)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 207,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        32 => D"
     },
     {
      "inB": "1",
      "inD": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 239,
      "useElseAddr": 1,
      "elseAddr": 236,
      "line": 208,
      "jmpAddrLabel": "readDataFinal",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        B - D                           :JMPN(readDataFinal)"
     },
     {
      "inB": "1",
      "inD": "-1",
      "offset": 41,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 209,
      "offsetLabel": "txDataRead",
      "useCTX": 0,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        B - D                           :MSTORE(txDataRead), CALL(addHashTx)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4815,
      "call": 1,
      "line": 210,
      "jmpAddrLabel": "addBatchHashByteByByte",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(SP++), CALL(addBatchHashByteByByte)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 41,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 234,
      "line": 211,
      "offsetLabel": "txDataRead",
      "useCTX": 0,
      "jmpAddrLabel": "readData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txDataRead), JMP(readData)"
     },
     {
      "inB": "1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 245,
      "useElseAddr": 1,
      "elseAddr": 240,
      "line": 214,
      "jmpAddrLabel": "endData",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        B - 1                           :JMPN(endData)"
     },
     {
      "inB": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 215,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        B => D                          :CALL(addHashTx)"
     },
     {
      "CONST": "32",
      "inD": "-1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "call": 1,
      "line": 216,
      "jmpAddrLabel": "SHLarith",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        32 - D => D                     :CALL(SHLarith)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 217,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(SP)"
     },
     {
      "CONST": "32",
      "inD": "-1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4815,
      "call": 1,
      "line": 218,
      "jmpAddrLabel": "addBatchHashByteByByte",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        32 - D => D                     :CALL(addBatchHashByteByByte)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 123,
      "call": 1,
      "line": 219,
      "jmpAddrLabel": "checkShortDataRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkShortDataRLP)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 223,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 40,
      "mOp": 1,
      "mWR": 0,
      "line": 224,
      "offsetLabel": "txRLPLength",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txRLPLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 263,
      "useElseAddr": 1,
      "elseAddr": 248,
      "line": 225,
      "jmpAddrLabel": "setPreEIP155Flag",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $                               :EQ,JMPC(setPreEIP155Flag)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 230,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1 => D                          :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 231,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 258,
      "useElseAddr": 1,
      "elseAddr": 251,
      "line": 232,
      "jmpAddrLabel": "endChainId",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80                        :JMPN(endChainId)"
     },
     {
      "inA": "1",
      "CONST": "-129",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 253,
      "useElseAddr": 1,
      "elseAddr": 252,
      "line": 233,
      "jmpAddrLabel": "chainId0",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x81                        :JMPN(chainId0)"
     },
     {
      "inA": "1",
      "CONST": "-137",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 254,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 234,
      "jmpAddrLabel": "shortChainId",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x89                        :JMPN(shortChainId, invalidTxRLP)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 258,
      "line": 237,
      "jmpAddrLabel": "endChainId",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        0 => A                          :JMP(endChainId)"
     },
     {
      "inA": "1",
      "CONST": "-128",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 241,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A - 0x80 => D                   :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 242,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 118,
      "call": 1,
      "line": 243,
      "jmpAddrLabel": "checkShortRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkShortRLP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 127,
      "call": 1,
      "line": 244,
      "jmpAddrLabel": "checkNonLeadingZeros",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(checkNonLeadingZeros)"
     },
     {
      "inA": "1",
      "offset": 6,
      "mOp": 1,
      "mWR": 1,
      "line": 247,
      "offsetLabel": "txChainId",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txChainId)"
     },
     {
      "CONST": "2",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 110,
      "call": 1,
      "line": 250,
      "jmpAddrLabel": "addHashTx",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        2 => D                          :CALL(addHashTx)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 251,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "                                        :CALL(addBatchHashData)"
     },
     {
      "CONST": "32896",
      "setB": 1,
      "line": 252,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        0x8080 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 264,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 253,
      "jmpAddrLabel": "sizeVerification",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $                               :EQ,JMPC(sizeVerification, invalidTxRLP)"
     },
     {
      "CONST": "1",
      "offset": 40,
      "mOp": 1,
      "mWR": 1,
      "line": 256,
      "offsetLabel": "isPreEIP155",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1                               :MSTORE(isPreEIP155)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 260,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 40,
      "mOp": 1,
      "mWR": 0,
      "line": 261,
      "offsetLabel": "txRLPLength",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txRLPLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 267,
      "useElseAddr": 1,
      "elseAddr": 287,
      "line": 262,
      "jmpAddrLabel": "sizeVerificationSuccess",
      "elseAddrLabel": "invalidTxRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $                               :EQ,JMPC(sizeVerificationSuccess, invalidTxRLP)"
     },
     {
      "inHASHPOS": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 264,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        HASHPOS                         :HASHKLEN(E)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 105,
      "call": 1,
      "line": 272,
      "jmpAddrLabel": "getTxBytes",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        32 => D                         :CALL(getTxBytes)"
     },
     {
      "inA": "1",
      "offset": 8,
      "mOp": 1,
      "mWR": 1,
      "line": 273,
      "offsetLabel": "txR",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txR)"
     },
     {
      "inC": "1",
      "inD": "1",
      "setC": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 274,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        C + D => C                      :CALL(addBatchHashData)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 105,
      "call": 1,
      "line": 278,
      "jmpAddrLabel": "getTxBytes",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        32 => D                         :CALL(getTxBytes)"
     },
     {
      "inA": "1",
      "offset": 7,
      "mOp": 1,
      "mWR": 1,
      "line": 279,
      "offsetLabel": "txS",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txS)"
     },
     {
      "inC": "1",
      "inD": "1",
      "setC": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 280,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        C + D => C                      :CALL(addBatchHashData)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 105,
      "call": 1,
      "line": 284,
      "jmpAddrLabel": "getTxBytes",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        1 => D                          :CALL(getTxBytes)"
     },
     {
      "inA": "1",
      "offset": 9,
      "mOp": 1,
      "mWR": 1,
      "line": 285,
      "offsetLabel": "txV",
      "useCTX": 1,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txV)"
     },
     {
      "inC": "1",
      "inD": "1",
      "setC": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 286,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        C + D => C                      :CALL(addBatchHashData)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 292,
      "offsetLabel": "batchL2DataParsed",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => A                          :MLOAD(batchL2DataParsed)"
     },
     {
      "inA": "1",
      "inC": "1",
      "setA": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "line": 293,
      "offsetLabel": "batchL2DataParsed",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A + C => A                      :MSTORE(batchL2DataParsed)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "line": 295,
      "offsetLabel": "pendingTxs",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => A                          :MLOAD(pendingTxs)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 1,
      "line": 296,
      "offsetLabel": "pendingTxs",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A + 1 => A                      :MSTORE(pendingTxs)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "line": 298,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => A                          :HASHKDIGEST(E)"
     },
     {
      "inA": "1",
      "offset": 11,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 47,
      "line": 299,
      "offsetLabel": "txHash",
      "useCTX": 1,
      "jmpAddrLabel": "txLoopRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :MSTORE(txHash), JMP(txLoopRLP)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 286,
      "line": 305,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCB"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleOOCatRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $${eventLog(onError, OOCB)}      :JMP(handleOOCatRLP)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 286,
      "line": 307,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCK"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleOOCatRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $${eventLog(onError, OOCK)}      :JMP(handleOOCatRLP)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 286,
      "line": 309,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCS"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleOOCatRLP",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $${eventLog(onError, OOCS)}      :JMP(handleOOCatRLP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 34,
      "mOp": 1,
      "mWR": 0,
      "line": 311,
      "offsetLabel": "batchSR",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => SR                          :MLOAD(batchSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 18,
      "mOp": 1,
      "mWR": 0,
      "line": 315,
      "offsetLabel": "batchL2DataLength",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => B                          :MLOAD(batchL2DataLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 20,
      "mOp": 1,
      "mWR": 0,
      "line": 316,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => C                          :MLOAD(batchHashPos)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setHASHPOS": 1,
      "offset": 20,
      "mOp": 1,
      "mWR": 0,
      "line": 317,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => HASHPOS                    :MLOAD(batchHashPos)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 318,
      "offsetLabel": "batchHashDataId",
      "useCTX": 0,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
     },
     {
      "inB": "1",
      "inC": "-1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 296,
      "useElseAddr": 1,
      "elseAddr": 292,
      "line": 321,
      "jmpAddrLabel": "finalAppendTxs",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        B - C - 32                      :JMPN(finalAppendTxs)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 322,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        32 => D"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "getTxs",
       "params": [
        {
         "op": "getVar",
         "varName": "p"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      },
      "inFREE": "1",
      "setA": 1,
      "line": 323,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "getVar",
          "varName": "p"
         },
         {
          "op": "add",
          "values": [
           {
            "op": "getVar",
            "varName": "p"
           },
           {
            "op": "getReg",
            "regName": "D"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        ${getTxs(p,D)} => A"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 325,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :HASHK(E)"
     },
     {
      "inC": "1",
      "inD": "1",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 291,
      "line": 326,
      "jmpAddrLabel": "appendTxs",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        C + D => C                      :JMP(appendTxs)"
     },
     {
      "inB": "1",
      "inC": "-1",
      "setD": 1,
      "line": 329,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        B - C => D"
     },
     {
      "inD": "1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 301,
      "useElseAddr": 1,
      "elseAddr": 298,
      "line": 330,
      "jmpAddrLabel": "endAppendTxs",
      "elseAddrLabel": "next",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        D - 1                           :JMPN(endAppendTxs)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "getTxs",
       "params": [
        {
         "op": "getVar",
         "varName": "p"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      },
      "inFREE": "1",
      "setA": 1,
      "line": 331,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "getVar",
          "varName": "p"
         },
         {
          "op": "add",
          "values": [
           {
            "op": "getVar",
            "varName": "p"
           },
           {
            "op": "getReg",
            "regName": "D"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        ${getTxs(p,D)} => A"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 333,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        A                               :HASHK(E)"
     },
     {
      "inC": "1",
      "inD": "1",
      "setC": 1,
      "line": 334,
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        C + D => C"
     },
     {
      "inHASHPOS": "1",
      "offset": 20,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 59,
      "line": 337,
      "offsetLabel": "batchHashPos",
      "useCTX": 0,
      "jmpAddrLabel": "processTxsEnd",
      "fileName": "load-tx-rlp.zkasm",
      "lineStr": "        HASHPOS                         :MSTORE(batchHashPos),JMP(processTxsEnd)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 303,
      "line": 13,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 304,
      "line": 14,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 305,
      "line": 17,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 306,
      "line": 20,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 23,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 24,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 25,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 0,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 28,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $               :ADD, MSTORE(SP++), JMP(readCode)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 311,
      "line": 40,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 312,
      "line": 43,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-5",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 313,
      "line": 46,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 48,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 49,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 50,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP); [b => B]"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 52,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A               :MSTORE(arithA)"
     },
     {
      "inB": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 53,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    B               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 54,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => E          :MLOAD(arithRes1)"
     },
     {
      "inE": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 55,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    E               :MSTORE(SP++), JMP(readCode); [a * b(E) => SP]"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 321,
      "line": 68,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 322,
      "line": 69,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 323,
      "line": 71,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 324,
      "line": 73,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 74,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 75,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 76,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP); [b => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "bin": 1,
      "binOpcode": 1,
      "line": 77,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => E          :SUB"
     },
     {
      "inE": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 78,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    E               :MSTORE(SP++), JMP(readCode); [a - b(E) => SP]"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 330,
      "line": 90,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 331,
      "line": 93,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-5",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 332,
      "line": 95,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 97,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 98,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP--); [a => E]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 99,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP); [b => A]"
     },
     {
      "inE": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 101,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    E               :MSTORE(arithA)"
     },
     {
      "inA": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 102,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 103,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(arithRes1)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 104,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    B               :MSTORE(SP++), JMP(readCode); [a / b(B) => SP]"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 340,
      "line": 117,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 341,
      "line": 118,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 342,
      "line": 120,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-5",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 343,
      "line": 122,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 124,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4208,
      "call": 1,
      "line": 125,
      "jmpAddrLabel": "abs",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--), CALL(abs); [a => A]; in: [A: number] out: [A: |A|, B: Sign of A [1 if negative, 0 positive]]"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 126,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A => E"
     },
     {
      "inB": "1",
      "setC": 1,
      "line": 127,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    B => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4208,
      "call": 1,
      "line": 128,
      "jmpAddrLabel": "abs",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP), CALL(abs); [b => A]; in: [A: number] out: [A: |A|, B: Sign of A [1 if negative, 0 positive]]"
     },
     {
      "inC": "1",
      "inB": "-1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 349,
      "useElseAddr": 1,
      "elseAddr": 353,
      "line": 130,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "SDIVNeg",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    C - B           :JMPNZ(SDIVNeg)"
     },
     {
      "inE": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 131,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    E               :MSTORE(arithA)"
     },
     {
      "inA": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 132,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 133,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(arithRes1)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 134,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    B               :MSTORE(SP++), JMP(readCode); [a / b(B) => SP]"
     },
     {
      "inE": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 137,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    E               :MSTORE(arithA)"
     },
     {
      "inA": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 138,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 139,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(arithRes1)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 140,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 1,
      "line": 141,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :SUB; A - B => A"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 142,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [a / b(A) => SP]"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 360,
      "line": 154,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 361,
      "line": 156,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-5",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 362,
      "line": 158,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 159,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 160,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP--); [a => E]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 161,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP); [b => A]"
     },
     {
      "inE": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 163,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    E               :MSTORE(arithA)"
     },
     {
      "inA": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 164,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 139,
      "mOp": 1,
      "mWR": 0,
      "line": 165,
      "offsetLabel": "arithRes2",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => C          :MLOAD(arithRes2)"
     },
     {
      "inC": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 166,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    C               :MSTORE(SP++), JMP(readCode); [a % b(C) => SP]"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 370,
      "line": 179,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 371,
      "line": 180,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 372,
      "line": 182,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-5",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 373,
      "line": 184,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 185,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4208,
      "call": 1,
      "line": 186,
      "jmpAddrLabel": "abs",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--), CALL(abs); [a => A]; in: [A: number] out: [A: |A|, B: Sign of A [1 if negative, 0 positive]]"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 187,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A => E"
     },
     {
      "inB": "1",
      "setC": 1,
      "line": 188,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    B => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4208,
      "call": 1,
      "line": 189,
      "jmpAddrLabel": "abs",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP), CALL(abs); [b => A]; in: [A: number] out: [A: |A|, B: Sign of A [1 if negative, 0 positive]]"
     },
     {
      "inE": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 191,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    E               :MSTORE(arithA)"
     },
     {
      "inA": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 192,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 139,
      "mOp": 1,
      "mWR": 0,
      "line": 193,
      "offsetLabel": "arithRes2",
      "useCTX": 0,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(arithRes2)"
     },
     {
      "inC": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 383,
      "useElseAddr": 1,
      "elseAddr": 382,
      "line": 195,
      "jmpAddrLabel": "opSMODNeg",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    -C              :JMPN(opSMODNeg)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 196,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    B               :MSTORE(SP++), JMP(readCode); [a % b(C) => SP]"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 199,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 1,
      "line": 200,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :SUB; A - B => A"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 201,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [a % b(C) => SP]"
     },
     {
      "CONST": "7968908",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 387,
      "line": 215,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 80 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498071",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 388,
      "line": 216,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249036",
      "inCntArith": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4667,
      "useElseAddr": 1,
      "elseAddr": 389,
      "line": 217,
      "jmpAddrLabel": "outOfCountersArith",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1 :JMPN(outOfCountersArith)"
     },
     {
      "inGAS": "1",
      "CONST": "-8",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 390,
      "line": 219,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_MID_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-3",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 391,
      "line": 221,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 3          :JMPN(stackUnderflow)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 222,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 223,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 224,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_addMod"
         },
         {
          "op": "add",
          "values": [
           {
            "op": "getReg",
            "regName": "A"
           },
           {
            "op": "getReg",
            "regName": "B"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--); [b => B]"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 228,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    1 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 0,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 397,
      "useElseAddr": 1,
      "elseAddr": 396,
      "line": 229,
      "jmpAddrLabel": "AddModJumpCarry",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :ADD, JMPC(AddModJumpCarry) ; or arith"
     },
     {
      "CONST": "0",
      "setD": 1,
      "line": 230,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    0 => D"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 234,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 235,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP); [N => A]"
     },
     {
      "CONST": "2",
      "setB": 1,
      "line": 236,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    2 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 409,
      "useElseAddr": 1,
      "elseAddr": 401,
      "line": 237,
      "jmpAddrLabel": "zeroOneAddMod",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $               :LT, JMPC(zeroOneAddMod)"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getVar",
         "varName": "_addMod"
        },
        {
         "op": "getReg",
         "regName": "A"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 239,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    ${_addMod / A} => B"
     },
     {
      "freeInTag": {
       "op": "mod",
       "values": [
        {
         "op": "getVar",
         "varName": "_addMod"
        },
        {
         "op": "getReg",
         "regName": "A"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "line": 241,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    ${_addMod % A} => C"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 245,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    E               :ARITH"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 246,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A => B          ; modulus"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 247,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    C => A          ; addModResult"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 2,
      "line": 248,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :LT"
     },
     {
      "CONST": "1",
      "assert": 1,
      "line": 249,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    1               :ASSERT"
     },
     {
      "inC": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 250,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    C               :MSTORE(SP++), JMP(readCode); [(a + b) % N => SP]"
     },
     {
      "CONST": "0",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 253,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    0               :MSTORE(SP++), JMP(readCode); [0 => SP]"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 411,
      "line": 265,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-3",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 412,
      "line": 267,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 3          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-8",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 413,
      "line": 269,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_MID_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 270,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 272,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 273,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--); [b => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 274,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP); [N => C]"
     },
     {
      "CONST": "418",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4927,
      "line": 275,
      "jmpAddrLabel": "utilMULMOD",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(utilMULMOD); in: [A, B, C] out: [C: (A * B) % C]"
     },
     {
      "inC": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 276,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    C               :MSTORE(SP++), JMP(readCode); [C => SP]"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 420,
      "line": 289,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20         :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 421,
      "line": 292,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 293,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 296,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => C              :MLOAD(SP--); [a => C]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 297,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B              :MLOAD(SP); [exp => B]"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4238,
      "call": 1,
      "line": 300,
      "jmpAddrLabel": "getLenBytes",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "                                                    :CALL(getLenBytes) ; in: [B: number] out: [A: byte length of B]"
     },
     {
      "inGAS": "1",
      "CONST": "-10",
      "inA": "-50",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 426,
      "line": 301,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_SLOW_STEP - %EXP_BYTE_GAS * A => GAS :JMPN(outOfGas)"
     },
     {
      "inB": "1",
      "setD": 1,
      "line": 304,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    B => D"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 305,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    C => A"
     },
     {
      "CONST": "429",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4974,
      "line": 306,
      "jmpAddrLabel": "expAD",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    zkPC+1 => RR        :JMP(expAD) ; in: [A, D] out: [A: A ** D]"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 307,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    A                   :MSTORE(SP++), JMP(readCode) ; [a ** exp => SP]"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 431,
      "line": 320,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498068",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 432,
      "line": 321,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 6 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 433,
      "line": 323,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-5",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 434,
      "line": 325,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 326,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 327,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--); [b => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 328,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP); [x => D]"
     },
     {
      "CONST": "30",
      "setA": 1,
      "line": 329,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    30 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 457,
      "useElseAddr": 1,
      "elseAddr": 439,
      "line": 331,
      "jmpAddrLabel": "opSIGNEXTENDEnd",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $               :LT, JMPC(opSIGNEXTENDEnd)"
     },
     {
      "inB": "8",
      "CONST": "7",
      "setD": 1,
      "setRR": 1,
      "line": 332,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    B * 8  + 7 => D, RR; B is less than 31, no need for binary"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "offset": 3647,
      "ind": 0,
      "indRR": 1,
      "return": 0,
      "call": 1,
      "line": 333,
      "offsetLabel": "exp_num",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "                    :CALL(@exp_num + RR)"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 334,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    B => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 335,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP); [x => D]"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 337,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    1 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "bin": 1,
      "binOpcode": 1,
      "line": 338,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => C          :SUB ; mask"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 340,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    D => B               ; number to convert"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "bin": 1,
      "binOpcode": 5,
      "line": 341,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :AND ; check sign bit"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 342,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 454,
      "useElseAddr": 1,
      "elseAddr": 449,
      "line": 344,
      "jmpAddrLabel": "opSIGNEXTENDPositive",
      "elseAddrLabel": "next",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $               :EQ, JMPC(opSIGNEXTENDPositive)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 345,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    C => A ; mask"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "setB": 1,
      "line": 346,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    %MAX_UINT_256 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "bin": 1,
      "binOpcode": 7,
      "line": 347,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => B          :XOR ; not mask"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 348,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    D => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "bin": 1,
      "binOpcode": 6,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 457,
      "line": 349,
      "jmpAddrLabel": "opSIGNEXTENDEnd",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => D          :OR, JMP(opSIGNEXTENDEnd)"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 352,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    C => B"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 353,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    D => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "bin": 1,
      "binOpcode": 5,
      "line": 354,
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    $ => D          :AND"
     },
     {
      "inD": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 357,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/arithmetic.zkasm",
      "lineStr": "    D               :MSTORE(SP++), JMP(readCode); [D => SP]"
     },
     {
      "CONST": "265382",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 459,
      "line": 13,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE  :JMPN(outOfCountersPoseidon)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 14,
      "offsetLabel": "cntKeccakPreProcess",
      "useCTX": 0,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $ => A                                      :MLOAD(cntKeccakPreProcess)"
     },
     {
      "CONST": "2257",
      "inCntKeccakF": "-1",
      "inA": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4664,
      "useElseAddr": 1,
      "elseAddr": 461,
      "line": 15,
      "jmpAddrLabel": "outOfCountersKeccak",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1    :JMPN(outOfCountersKeccak)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 462,
      "line": 16,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100                 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 463,
      "line": 19,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    SP - 1 => SP     :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-20",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 464,
      "line": 22,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    GAS - %GAS_EXT_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 24,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP) ; [blockNumber => B]"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 29,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    32 => D"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 31,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    0 => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 32,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $ => E                              :MLOAD(lastHashKIdUsed)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 33,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    E+1 => E                            :MSTORE(lastHashKIdUsed)"
     },
     {
      "inB": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 34,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    B                                   :HASHK(E)"
     },
     {
      "CONST": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 35,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %STATE_ROOT_STORAGE_POS             :HASHK(E)"
     },
     {
      "inHASHPOS": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 36,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    HASHPOS                             :HASHKLEN(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "line": 38,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $ => C                              :HASHKDIGEST(E)"
     },
     {
      "CONSTL": "1554098974",
      "setA": 1,
      "line": 39,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %ADDRESS_SYSTEM => A"
     },
     {
      "CONST": "3",
      "setB": 1,
      "line": 41,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %SMT_KEY_SC_STORAGE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "sRD": 1,
      "line": 43,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $ => E                              :SLOAD"
     },
     {
      "inE": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 45,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    E               :MSTORE(SP++), JMP(readCode); [hash(E) => SP]"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 478,
      "line": 57,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 479,
      "line": 60,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 4,
      "mOp": 1,
      "mWR": 0,
      "line": 62,
      "offsetLabel": "sequencerAddr",
      "useCTX": 0,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $ => A          :MLOAD(sequencerAddr)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 63,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [coinbase address => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 65,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 483,
      "line": 77,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 484,
      "line": 80,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 6,
      "mOp": 1,
      "mWR": 0,
      "line": 81,
      "offsetLabel": "timestamp",
      "useCTX": 0,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $ => A          :MLOAD(timestamp)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 82,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [timestamp => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 84,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 488,
      "line": 96,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 489,
      "line": 97,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1   :JMPN(outOfCountersBinary)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 490,
      "line": 100,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 35,
      "mOp": 1,
      "mWR": 0,
      "line": 102,
      "offsetLabel": "txCount",
      "useCTX": 0,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $ => A          :MLOAD(txCount)"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 103,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    1 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 0,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 106,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $               :ADD, MSTORE(SP++); [blockNumber => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 108,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 495,
      "line": 120,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 496,
      "line": 123,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 125,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %BATCH_DIFFICULTY => A"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 126,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [difficulty => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 128,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 500,
      "line": 140,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 501,
      "line": 143,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "CONST": "30000000",
      "setA": 1,
      "line": 145,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %TX_GAS_LIMIT => A"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 146,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [gasLimit => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 148,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 505,
      "line": 160,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 506,
      "line": 163,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 7,
      "mOp": 1,
      "mWR": 0,
      "line": 164,
      "offsetLabel": "chainID",
      "useCTX": 0,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    $ => A          :MLOAD(chainID)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 165,
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [chainId => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 167,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/block.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 510,
      "line": 12,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 511,
      "line": 13,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 512,
      "line": 16,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 513,
      "line": 19,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 22,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 23,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 24,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP) ; [a => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 28,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :LT, MSTORE(SP++), JMP(readCode) ; [(a < b) => SP]"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 518,
      "line": 41,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 519,
      "line": 42,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP -       20 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 520,
      "line": 45,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 521,
      "line": 48,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 51,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 52,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--) ; [a => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 53,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP) ; [b => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 57,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :LT, MSTORE(SP++), JMP(readCode) ; [(b < a) => SP]"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 526,
      "line": 70,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 527,
      "line": 71,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 528,
      "line": 74,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 529,
      "line": 77,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 80,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 81,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 82,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 3,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 86,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :SLT, MSTORE(SP++), JMP(readCode) ; [signed(a < b) => SP]"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 534,
      "line": 99,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 535,
      "line": 100,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 536,
      "line": 103,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 537,
      "line": 106,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 109,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 110,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--) ; [a => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 111,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP) ; [b => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 3,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 115,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :SLT, MSTORE(SP++), JMP(readCode) ; [signed(b < a) => SP]"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 542,
      "line": 128,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 543,
      "line": 129,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 544,
      "line": 132,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 545,
      "line": 135,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 138,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 139,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 140,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 144,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :EQ, MSTORE(SP++), JMP(readCode) ; [(a == b) => SP]"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 550,
      "line": 157,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 551,
      "line": 158,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 552,
      "line": 161,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 553,
      "line": 164,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 167,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1) ; [a => B]"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 168,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 172,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :EQ, MSTORE(SP-1), JMP(readCode) ; [(a == 0) ==> SP]"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 557,
      "line": 185,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 558,
      "line": 186,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 559,
      "line": 189,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 560,
      "line": 192,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 195,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 196,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 197,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 5,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 201,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :AND, MSTORE(SP++), JMP(readCode) ; [ a & b => SP]"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 565,
      "line": 214,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 566,
      "line": 215,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 567,
      "line": 218,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 568,
      "line": 221,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 224,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 225,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 226,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 6,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 230,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :OR, MSTORE(SP++), JMP(readCode) ; [ a | b => SP]"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 573,
      "line": 243,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 574,
      "line": 244,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 575,
      "line": 247,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 576,
      "line": 250,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 253,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 254,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--) ; [a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 255,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP) ; [b => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 7,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 259,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :XOR,MSTORE(SP++), JMP(readCode) ; [ a ^ b => SP]"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 581,
      "line": 272,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 582,
      "line": 273,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 583,
      "line": 276,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 584,
      "line": 279,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 282,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "setB": 1,
      "line": 284,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn => B ; 2**256 - 1 =>"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 7,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 285,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :XOR,MSTORE(SP-1), JMP(readCode) ; [ NOT a => SP]"
     },
     {
      "CONST": "7968958",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 588,
      "line": 298,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 30 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 589,
      "line": 299,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 590,
      "line": 302,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 591,
      "line": 305,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 308,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 309,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--) ; [byte offset => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 310,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP) ; [32-byte value => C]"
     },
     {
      "CONST": "31",
      "setA": 1,
      "line": 313,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    31 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "bin": 1,
      "binOpcode": 1,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 600,
      "useElseAddr": 1,
      "elseAddr": 596,
      "line": 314,
      "jmpAddrLabel": "opBYTE0",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => D          :SUB, JMPC(opBYTE0)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 317,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    C => A"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 318,
      "jmpAddrLabel": "SHRarith",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "                    :CALL(SHRarith) ; in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "CONST": "255",
      "setB": 1,
      "line": 321,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    255 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 5,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 322,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :AND, MSTORE(SP++), JMP(readCode) ; [ A & 255 => SP]"
     },
     {
      "CONST": "0",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 325,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    0               :MSTORE(SP++), JMP(readCode) ; [ 0 => SP]"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 602,
      "line": 337,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20         :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 603,
      "line": 340,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 604,
      "line": 343,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS      :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 346,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 347,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP--) ; [shift => D]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4592,
      "call": 1,
      "line": 349,
      "jmpAddrLabel": "SHRarithBit",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP), CALL(SHRarithBit)   ; [value => A]; [ A >> D => A]"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 350,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    A               :MSTORE(SP++), JMP(readCode) ; [ A => SP]"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 609,
      "line": 362,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20         :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 610,
      "line": 365,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 611,
      "line": 368,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS      :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 371,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 372,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP--)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 373,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4631,
      "call": 1,
      "line": 376,
      "jmpAddrLabel": "SHLarithBit",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "                    :CALL(SHLarithBit)  ; [ A << D => A]"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 377,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    A               :MSTORE(SP++), JMP(readCode) ; [A => SP]"
     },
     {
      "CONST": "498069",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 617,
      "line": 390,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 5   :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 618,
      "line": 391,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100         :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 619,
      "line": 394,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 620,
      "line": 397,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS      :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 400,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 401,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP--) ; [shift (bits) => C]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 402,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP) ; [value => A]"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 405,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "bin": 1,
      "binOpcode": 3,
      "line": 406,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => E          :SLT ; [sign(A) => E]"
     },
     {
      "inA": "1",
      "setD": 1,
      "line": 409,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    A => D ; [value => D]"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 410,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    C => B ; [shift (bits) => B]"
     },
     {
      "CONST": "256",
      "setA": 1,
      "line": 411,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    256 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 641,
      "useElseAddr": 1,
      "elseAddr": 629,
      "line": 412,
      "jmpAddrLabel": "maxShiftSAR",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :LT, JMPC(maxShiftSAR)"
     },
     {
      "inE": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 630,
      "useElseAddr": 1,
      "elseAddr": 633,
      "line": 415,
      "jmpAddrLabel": "positiveValue",
      "elseAddrLabel": "negativeValue",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    E               :JMPZ(positiveValue, negativeValue)"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 419,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    D => A"
     },
     {
      "inC": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4592,
      "call": 1,
      "line": 420,
      "jmpAddrLabel": "SHRarithBit",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    C => D          :CALL(SHRarithBit) ; [shift (bits) => D]; [ A >> D => A]"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 638,
      "line": 421,
      "jmpAddrLabel": "endSAR",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "                    :JMP(endSAR)"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 424,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "setB": 1,
      "line": 425,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_UINT_256 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 7,
      "line": 426,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :XOR ; [~A => A]"
     },
     {
      "inC": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4592,
      "call": 1,
      "line": 427,
      "jmpAddrLabel": "SHRarithBit",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    C => D          :CALL(SHRarithBit) ; [shift (bits) => D]; [ A >> D => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 7,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 638,
      "line": 428,
      "jmpAddrLabel": "endSAR",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $ => A          :XOR, JMP(endSAR) ; [~A => A]"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 432,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 641,
      "useElseAddr": 1,
      "elseAddr": 640,
      "line": 433,
      "jmpAddrLabel": "maxShiftSAR",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    $               :EQ, JMPC(maxShiftSAR)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 434,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    A               :MSTORE(SP++), JMP(readCode)   ; [(value >> shift (signed)) => SP]"
     },
     {
      "CONST": "0",
      "setD": 1,
      "line": 439,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    0 => D ; [sign positive: 0 => D]"
     },
     {
      "inE": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 644,
      "useElseAddr": 1,
      "elseAddr": 643,
      "line": 442,
      "jmpAddrLabel": "endMaxShiftSAR",
      "elseAddrLabel": "next",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    E                      :JMPZ(endMaxShiftSAR)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "setD": 1,
      "line": 443,
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    %MAX_UINT_256 => D ; [sign negative: MAX_UINT_256 => D]"
     },
     {
      "inD": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 446,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/comparison.zkasm",
      "lineStr": "    D                       :MSTORE(SP++), JMP(readCode) ; [(value >> shift (signed)) => SP]"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 646,
      "line": 11,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 647,
      "line": 13,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 648,
      "useElseAddr": 1,
      "elseAddr": 649,
      "line": 15,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opADDRESSdeploy",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(opADDRESSdeploy)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 650,
      "line": 17,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "jmpAddrLabel": "opADDRESSend",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => A          :MLOAD(storageAddr), JMP(opADDRESSend)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 21,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => A          :MLOAD(createContractAddress)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 24,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [address(A) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 26,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "265382",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 653,
      "line": 39,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 654,
      "line": 40,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-5",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 655,
      "line": 42,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    GAS - %GAS_FAST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 44,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => A          :MLOAD(storageAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "setC": 1,
      "line": 46,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    0 => B,C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "sRD": 1,
      "line": 48,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => D          :SLOAD"
     },
     {
      "inD": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 49,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    D               :MSTORE(SP++); [balance(D) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 51,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "265382",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 661,
      "line": 64,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 662,
      "line": 65,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 663,
      "line": 67,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    SP - 1          :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 69,
      "jmpAddrLabel": "maskAddress",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
     },
     {
      "CONST": "0",
      "setB": 1,
      "setC": 1,
      "line": 71,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    0 => B,C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "sRD": 1,
      "line": 73,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => D          :SLOAD"
     },
     {
      "inD": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 74,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    D               :MSTORE(SP-1), CALL(isColdAddress); [balance(D) => SP]; in: [A: address] out: [D: 0 if warm, 1 if cold]"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "inD": "-2500",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 76,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_REDUCED => GAS    :JMPN(outOfGas, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 669,
      "line": 88,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 670,
      "line": 90,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 92,
      "offsetLabel": "txSrcOriginAddr",
      "useCTX": 0,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => A          :MLOAD(txSrcOriginAddr)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 93,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [address(A) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 95,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 674,
      "line": 107,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 675,
      "line": 109,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 10,
      "mOp": 1,
      "mWR": 0,
      "line": 111,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => A          :MLOAD(txSrcAddr)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 112,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [address(A) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 114,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 679,
      "line": 126,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 680,
      "line": 128,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 130,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => A          :MLOAD(txValue)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 131,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [value(A) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 133,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 684,
      "line": 145,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 685,
      "line": 147,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 29,
      "mOp": 1,
      "mWR": 0,
      "line": 149,
      "offsetLabel": "txGasPrice",
      "useCTX": 0,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    $ => A          :MLOAD(txGasPrice)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 150,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [price(A) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 152,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 689,
      "line": 164,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 690,
      "line": 166,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "inGAS": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 167,
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    GAS             :MSTORE(SP++); [gas(GAS) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 169,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/context-information.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 693,
      "line": 11,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 694,
      "line": 14,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(originCTX), JMPZ(handleGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 16,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(gasRefund)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 34,
      "mOp": 1,
      "mWR": 0,
      "line": 18,
      "offsetLabel": "isCreate",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(isCreate)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 20,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1 => D"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 699,
      "useElseAddr": 1,
      "elseAddr": 698,
      "line": 21,
      "jmpAddrLabel": "opSTOPend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :JMPZ(opSTOPend)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 23,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(createContractAddress)"
     },
     {
      "inB": "1",
      "setCTX": 1,
      "line": 27,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B => CTX"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 28,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "CONST": "0",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 30,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0               :MSTORE(retDataCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "line": 32,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(gasCTX)"
     },
     {
      "inA": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 33,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(gasRefund)"
     },
     {
      "inGAS": "1",
      "inB": "1",
      "setGAS": 1,
      "line": 34,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS + B => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 36,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SP         :MLOAD(lastSP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 37,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => PC         :MLOAD(lastPC)"
     },
     {
      "inD": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 39,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D               :MSTORE(SP++)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 41,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 42,
      "offsetLabel": "depth",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
     },
     {
      "CONST": "7968788",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 711,
      "line": 56,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498071",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 712,
      "line": 57,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3          :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "264868",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 713,
      "line": 58,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*3 :JMPN(outOfCountersPoseidon)"
     },
     {
      "inGAS": "1",
      "CONST": "-32000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 714,
      "line": 61,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %CREATE_GAS => GAS  :JMPN(outOfGas)"
     },
     {
      "inGAS": "1",
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 62,
      "offsetLabel": "gasCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS                 :MSTORE(gasCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 65,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 66,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A + 1               :MSTORE(depth)"
     },
     {
      "inSP": "1",
      "CONST": "-3",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 718,
      "line": 69,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 3              :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 719,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 71,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 72,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 73,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D              :MLOAD(SP--); [value => D]"
     },
     {
      "inD": "1",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 74,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D                   :MSTORE(valueCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 75,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E              :MLOAD(SP--); [offset => E]"
     },
     {
      "inE": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 76,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E                   :MSTORE(argsOffsetCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 77,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C              :MLOAD(SP); [size => C]"
     },
     {
      "inC": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 78,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C                   :MSTORE(argsLengthCall)"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 81,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E                   :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 84,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "inCTX": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 86,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX                 :MSTORE(originAuxCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 89,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(storageAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 91,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 93,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 95,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :SLOAD"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 96,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 773,
      "useElseAddr": 1,
      "elseAddr": 735,
      "line": 97,
      "jmpAddrLabel": "opCreateFail",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $                   :LT,JMPC(opCreateFail)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 100,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A             :MLOAD(storageAddr)"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 102,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_NONCE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "line": 104,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B              :SLOAD"
     },
     {
      "inA": "1",
      "setC": 1,
      "line": 105,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => C"
     },
     {
      "CONSTL": "18446744073709551615",
      "setA": 1,
      "line": 106,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_NONCE => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 773,
      "useElseAddr": 1,
      "elseAddr": 741,
      "line": 107,
      "jmpAddrLabel": "opCreateFail",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $                   :EQ,JMPC(opCreateFail)"
     },
     {
      "inSP": "1",
      "offset": 31,
      "mOp": 1,
      "mWR": 1,
      "line": 110,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP                  :MSTORE(lastSP)"
     },
     {
      "inPC": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "line": 111,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    PC                  :MSTORE(lastPC)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 113,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(lastCtxUsed)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setCTX": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 1,
      "line": 114,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A+1 => CTX          :MSTORE(lastCtxUsed)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 115,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX                 :MSTORE(currentCTX)"
     },
     {
      "CONST": "1",
      "offset": 13,
      "mOp": 1,
      "mWR": 1,
      "line": 116,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1                   :MSTORE(isCreateContract)"
     },
     {
      "CONST": "1",
      "offset": 34,
      "mOp": 1,
      "mWR": 1,
      "line": 117,
      "offsetLabel": "isCreate",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1                   :MSTORE(isCreate)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 119,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(originAuxCTX)"
     },
     {
      "inA": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 120,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(originCTX)"
     },
     {
      "inB": "1",
      "offset": 4,
      "mOp": 1,
      "mWR": 1,
      "line": 123,
      "offsetLabel": "txNonce",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B                   :MSTORE(txNonce)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4238,
      "call": 1,
      "line": 125,
      "jmpAddrLabel": "getLenBytes",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                        :CALL(getLenBytes); in: [B: value] out: [A: value bytes length]"
     },
     {
      "inA": "1",
      "offset": 15,
      "mOp": 1,
      "mWR": 1,
      "line": 126,
      "offsetLabel": "lengthNonce",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(lengthNonce)"
     },
     {
      "CONST": "1",
      "setA": 1,
      "line": 128,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "bin": 1,
      "binOpcode": 0,
      "line": 129,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D              :ADD"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 130,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C => A"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 132,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_NONCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 133,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 134,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SR             :SSTORE"
     },
     {
      "inSR": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4440,
      "call": 1,
      "line": 136,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "jmpAddrLabel": "computeGasSendCall",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SR                  :MSTORE(initSR), CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 138,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX            :MLOAD(originCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 139,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B              :MLOAD(storageAddr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 140,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C              :MLOAD(gasRefund)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "offset": 38,
      "mOp": 1,
      "mWR": 1,
      "line": 141,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - A             :MSTORE(gasCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 142,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX            :MLOAD(currentCTX)"
     },
     {
      "inA": "1",
      "setGAS": 1,
      "line": 144,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => GAS"
     },
     {
      "inB": "1",
      "offset": 10,
      "mOp": 1,
      "mWR": 1,
      "line": 145,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B                   :MSTORE(txSrcAddr)"
     },
     {
      "inC": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4217,
      "call": 1,
      "line": 147,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "jmpAddrLabel": "copySP",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C                   :MSTORE(gasRefund), CALL(copySP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 149,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(argsLengthCall)"
     },
     {
      "inA": "1",
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "line": 150,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(txCalldataLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "line": 151,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(valueCall)"
     },
     {
      "inA": "1",
      "offset": 3,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3598,
      "call": 1,
      "line": 153,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "jmpAddrLabel": "checkpointTouched",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(txValue), CALL(checkpointTouched)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3989,
      "line": 154,
      "jmpAddrLabel": "txType",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                        :JMP(txType)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 158,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A                          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 159,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A - 1                           :MSTORE(depth)"
     },
     {
      "CONST": "0",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 161,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0                   :MSTORE(retDataCTX)"
     },
     {
      "CONST": "0",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 162,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0                   :MSTORE(SP++), JMP(readCode); [0 => SP]"
     },
     {
      "CONST": "7968788",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 778,
      "line": 176,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498071",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 779,
      "line": 177,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3 :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 179,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 180,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A + 1           :MSTORE(depth)"
     },
     {
      "inSP": "1",
      "CONST": "-7",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 782,
      "line": 182,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 7          :JMPN(stackUnderflow)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 183,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "inCTX": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 185,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(originAuxCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 187,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [gas => A]"
     },
     {
      "inA": "1",
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 188,
      "offsetLabel": "gasCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(gasCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 189,
      "jmpAddrLabel": "maskAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
     },
     {
      "inA": "1",
      "offset": 25,
      "mOp": 1,
      "mWR": 1,
      "line": 192,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(addrCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 194,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [value => A]"
     },
     {
      "inA": "1",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 195,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(valueCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 793,
      "useElseAddr": 1,
      "elseAddr": 791,
      "line": 197,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "opCALL2",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(isStaticCall), JMPZ(opCALL2)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 198,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 793,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 199,
      "jmpAddrLabel": "opCALL2",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $               :EQ,JMPC(opCALL2, invalidStaticTx)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 204,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [argsOffset => A]"
     },
     {
      "inA": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 205,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(argsOffsetCall)"
     },
     {
      "inA": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 207,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 210,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP--); [argsSize => C]"
     },
     {
      "inC": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 211,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(argsLengthCall)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "line": 213,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(lastMemLength)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 215,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 218,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--); [retOffset => B]"
     },
     {
      "inB": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 219,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 222,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP); [retSize => D]"
     },
     {
      "inD": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 224,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 225,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 227,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(addrCall), CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "inD": "-2500",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 807,
      "line": 231,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_REDUCED => GAS :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "line": 233,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(valueCall)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 234,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 813,
      "useElseAddr": 1,
      "elseAddr": 810,
      "line": 235,
      "jmpAddrLabel": "opCALLend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $               :EQ,JMPC(opCALLend)"
     },
     {
      "inGAS": "1",
      "CONST": "-9000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 811,
      "line": 237,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %CALL_VALUE_TRANSFER_GAS => GAS :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4411,
      "call": 1,
      "line": 239,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "jmpAddrLabel": "isEmptyAccount",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E          :MLOAD(addrCall), CALL(isEmptyAccount); in: [E: address] out: [E: 0 if is not empty, 1 if is empty]"
     },
     {
      "inGAS": "1",
      "inE": "-25000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 813,
      "line": 240,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %CALL_NEW_ACCOUNT_GAS*E => GAS :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 244,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 245,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(lastMemLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 246,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(storageAddr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 247,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E          :MLOAD(gasRefund)"
     },
     {
      "inSP": "1",
      "offset": 31,
      "mOp": 1,
      "mWR": 1,
      "line": 248,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP              :MSTORE(lastSP)"
     },
     {
      "inPC": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "line": 249,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    PC              :MSTORE(lastPC)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 251,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(lastCtxUsed)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setCTX": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 1,
      "line": 252,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A+1 => CTX      :MSTORE(lastCtxUsed)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 253,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 254,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(originAuxCTX)"
     },
     {
      "inA": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 255,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(originCTX)"
     },
     {
      "inC": "1",
      "offset": 10,
      "mOp": 1,
      "mWR": 1,
      "line": 256,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(txSrcAddr)"
     },
     {
      "inE": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 257,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(gasRefund)"
     },
     {
      "inSR": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 258,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SR              :MSTORE(initSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "line": 259,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(addrCall)"
     },
     {
      "inA": "1",
      "offset": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 260,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(txDestAddr)"
     },
     {
      "inA": "1",
      "offset": 2,
      "mOp": 1,
      "mWR": 1,
      "line": 261,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(storageAddr)"
     },
     {
      "inB": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 262,
      "offsetLabel": "retCallOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(retCallOffset)"
     },
     {
      "inD": "1",
      "offset": 23,
      "mOp": 1,
      "mWR": 1,
      "line": 263,
      "offsetLabel": "retCallLength",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D               :MSTORE(retCallLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "line": 264,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(valueCall)"
     },
     {
      "inB": "1",
      "offset": 3,
      "mOp": 1,
      "mWR": 1,
      "line": 265,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(txValue)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 266,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "bin": 1,
      "binOpcode": 2,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4440,
      "call": 1,
      "line": 268,
      "jmpAddrLabel": "computeGasSendCall",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :LT, CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 269,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX            :MLOAD(originCTX)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "offset": 38,
      "mOp": 1,
      "mWR": 1,
      "line": 270,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - A             :MSTORE(gasCTX)"
     },
     {
      "inA": "1",
      "inC": "2300",
      "setA": 1,
      "line": 272,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A + %CALL_STIPEND*C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "line": 274,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D              :MLOAD(isStaticCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 275,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX            :MLOAD(currentCTX)"
     },
     {
      "inD": "1",
      "offset": 33,
      "mOp": 1,
      "mWR": 1,
      "line": 276,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D                   :MSTORE(isStaticCall)"
     },
     {
      "inA": "1",
      "setGAS": 1,
      "line": 278,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 279,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(argsLengthCall)"
     },
     {
      "inA": "1",
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4217,
      "call": 1,
      "line": 281,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "jmpAddrLabel": "copySP",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(txCalldataLen), CALL(copySP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3598,
      "call": 1,
      "line": 283,
      "jmpAddrLabel": "checkpointTouched",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                        :CALL(checkpointTouched)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3989,
      "line": 284,
      "jmpAddrLabel": "txType",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                        :JMP(txType)"
     },
     {
      "CONST": "7968788",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 848,
      "line": 297,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 849,
      "line": 298,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 300,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 301,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A + 1           :MSTORE(depth)"
     },
     {
      "inSP": "1",
      "CONST": "-7",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 852,
      "line": 303,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 7          :JMPN(stackUnderflow)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 304,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "inCTX": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 306,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(originAuxCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 308,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [gas => A]"
     },
     {
      "inA": "1",
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 309,
      "offsetLabel": "gasCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(gasCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 312,
      "jmpAddrLabel": "maskAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
     },
     {
      "inA": "1",
      "offset": 25,
      "mOp": 1,
      "mWR": 1,
      "line": 313,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(addrCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 315,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [value => A]"
     },
     {
      "inA": "1",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 316,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(valueCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 319,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [argsOffset => A]"
     },
     {
      "inA": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 320,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(argsOffsetCall)"
     },
     {
      "inA": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 322,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 324,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP--); [argsSize => C]"
     },
     {
      "inC": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 325,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(argsLengthCall)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 328,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 331,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--); [retOffset => B]"
     },
     {
      "inB": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 332,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 334,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP); [retSize => D]"
     },
     {
      "inD": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 336,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 338,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A                   :MLOAD(addrCall), CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "inD": "-2500",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 872,
      "line": 342,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_REDUCED => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "line": 344,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B                   :MLOAD(valueCall)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 345,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 876,
      "useElseAddr": 1,
      "elseAddr": 875,
      "line": 346,
      "jmpAddrLabel": "opCALLCODEend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $                        :EQ,JMPC(opCALLCODEend)"
     },
     {
      "inGAS": "1",
      "CONST": "-9000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 876,
      "line": 348,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %CALL_VALUE_TRANSFER_GAS => GAS        :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 352,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 353,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(lastMemLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 354,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E          :MLOAD(storageAddr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 355,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(gasRefund)"
     },
     {
      "inSP": "1",
      "offset": 31,
      "mOp": 1,
      "mWR": 1,
      "line": 356,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP              :MSTORE(lastSP)"
     },
     {
      "inPC": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "line": 357,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    PC              :MSTORE(lastPC)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 359,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(lastCtxUsed)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setCTX": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 1,
      "line": 360,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A+1 => CTX      :MSTORE(lastCtxUsed)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 361,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 362,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(originAuxCTX)"
     },
     {
      "inA": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 363,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(originCTX)"
     },
     {
      "inE": "1",
      "offset": 10,
      "mOp": 1,
      "mWR": 1,
      "line": 364,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(txSrcAddr)"
     },
     {
      "inE": "1",
      "offset": 2,
      "mOp": 1,
      "mWR": 1,
      "line": 365,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(storageAddr)"
     },
     {
      "inC": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 366,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(gasRefund)"
     },
     {
      "inSR": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 367,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SR              :MSTORE(initSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "line": 368,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(addrCall)"
     },
     {
      "inA": "1",
      "offset": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 369,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(txDestAddr)"
     },
     {
      "inB": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 370,
      "offsetLabel": "retCallOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(retCallOffset)"
     },
     {
      "inD": "1",
      "offset": 23,
      "mOp": 1,
      "mWR": 1,
      "line": 371,
      "offsetLabel": "retCallLength",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D               :MSTORE(retCallLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "line": 372,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(valueCall)"
     },
     {
      "inB": "1",
      "offset": 3,
      "mOp": 1,
      "mWR": 1,
      "line": 373,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(txValue)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 374,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "bin": 1,
      "binOpcode": 2,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4440,
      "call": 1,
      "line": 376,
      "jmpAddrLabel": "computeGasSendCall",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :LT, CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 377,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "offset": 38,
      "mOp": 1,
      "mWR": 1,
      "line": 378,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - A         :MSTORE(gasCTX)"
     },
     {
      "inA": "1",
      "inC": "2300",
      "setA": 1,
      "line": 380,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A + %CALL_STIPEND*C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "line": 382,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(isStaticCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 383,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "inA": "1",
      "setGAS": 1,
      "line": 385,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => GAS"
     },
     {
      "inD": "1",
      "offset": 33,
      "mOp": 1,
      "mWR": 1,
      "line": 386,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D               :MSTORE(isStaticCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 387,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(argsLengthCall)"
     },
     {
      "inA": "1",
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4217,
      "call": 1,
      "line": 389,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "jmpAddrLabel": "copySP",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(txCalldataLen), CALL(copySP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3598,
      "call": 1,
      "line": 391,
      "jmpAddrLabel": "checkpointTouched",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :CALL(checkpointTouched)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3989,
      "line": 392,
      "jmpAddrLabel": "txType",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :JMP(txType)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 911,
      "line": 404,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 912,
      "line": 405,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 913,
      "line": 407,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 2 => SP    :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 408,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP+1); [offset => E]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 409,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
     },
     {
      "inE": "1",
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 412,
      "offsetLabel": "retDataOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(retDataOffset)"
     },
     {
      "inC": "1",
      "offset": 25,
      "mOp": 1,
      "mWR": 1,
      "line": 413,
      "offsetLabel": "retDataLength",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(retDataLength)"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 415,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 418,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 920,
      "useElseAddr": 1,
      "elseAddr": 959,
      "line": 420,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opRETURNdeploy",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(isCreateContract), JMPNZ(opRETURNdeploy)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 921,
      "line": 423,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(originCTX), JMPZ(handleGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 425,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(gasRefund)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 426,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 427,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inA": "1",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 429,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(retDataCTX)"
     },
     {
      "inB": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 430,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(gasRefund)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "line": 431,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(gasCTX)"
     },
     {
      "inB": "1",
      "inGAS": "1",
      "setGAS": 1,
      "line": 432,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B + GAS => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 434,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 23,
      "mOp": 1,
      "mWR": 0,
      "line": 435,
      "offsetLabel": "retCallLength",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(retCallLength)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 436,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C => A"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 437,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 934,
      "useElseAddr": 1,
      "elseAddr": 933,
      "line": 439,
      "jmpAddrLabel": "preRETURN32",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $               :LT,JMPC(preRETURN32)"
     },
     {
      "inD": "1",
      "setC": 1,
      "line": 440,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 443,
      "offsetLabel": "retCallOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(retCallOffset)"
     },
     {
      "CONST": "7968788",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 936,
      "line": 448,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 952,
      "useElseAddr": 1,
      "elseAddr": 937,
      "line": 450,
      "jmpAddrLabel": "opRETURNend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :JMPZ(opRETURNend)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 947,
      "useElseAddr": 1,
      "elseAddr": 938,
      "line": 451,
      "jmpAddrLabel": "opRETURNfinal",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C - 32          :JMPN(opRETURNfinal)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "call": 1,
      "line": 453,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
     },
     {
      "inE": "1",
      "setD": 1,
      "line": 454,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 456,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 457,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B => E"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4283,
      "call": 1,
      "line": 460,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTORE32",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 461,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E => B"
     },
     {
      "inD": "1",
      "setE": 1,
      "line": 462,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D => E"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "line": 463,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C - 32 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 935,
      "line": 465,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "jmpAddrLabel": "opRETURNloop",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX), JMP(opRETURNloop)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 469,
      "jmpAddrLabel": "MLOADX",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 470,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 471,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B => E"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4278,
      "call": 1,
      "line": 473,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTOREX",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 474,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 478,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 479,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 481,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SP         :MLOAD(lastSP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 482,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => PC         :MLOAD(lastPC)"
     },
     {
      "CONST": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 483,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1               :MSTORE(SP++); [1 => SP]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 485,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 486,
      "offsetLabel": "depth",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
     },
     {
      "CONST": "24576",
      "inC": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4677,
      "useElseAddr": 1,
      "elseAddr": 960,
      "line": 490,
      "jmpAddrLabel": "invalidCodeSize",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %CODE_SIZE_LIMIT - C      :JMPN(invalidCodeSize)"
     },
     {
      "inGAS": "1",
      "inC": "-200",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 961,
      "line": 492,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %RETURN_GAS_COST * C => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4143,
      "useElseAddr": 1,
      "elseAddr": 962,
      "line": 494,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "jmpAddrLabel": "endDeploy",
      "elseAddrLabel": "opRETURNcreate",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(originCTX), JMPNZ(opRETURNcreate, endDeploy)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 963,
      "line": 498,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "265125",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 964,
      "line": 499,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*2 :JMPN(outOfCountersPoseidon)"
     },
     {
      "inE": "1",
      "offset": 171,
      "mOp": 1,
      "mWR": 1,
      "line": 502,
      "offsetLabel": "memOffsetLinearPoseidon",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(memOffsetLinearPoseidon)"
     },
     {
      "inC": "1",
      "offset": 172,
      "mOp": 1,
      "mWR": 1,
      "line": 503,
      "offsetLabel": "memSizeLinearPoseidon",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(memSizeLinearPoseidon)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 505,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 506,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(gasRefund)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 507,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inB": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 508,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(gasRefund)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "line": 509,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(gasCTX)"
     },
     {
      "inB": "1",
      "inGAS": "1",
      "setGAS": 1,
      "line": 510,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B + GAS => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 511,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 10,
      "mOp": 1,
      "mWR": 0,
      "line": 512,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(txSrcAddr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 4,
      "mOp": 1,
      "mWR": 0,
      "line": 513,
      "offsetLabel": "txNonce",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(txNonce)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4834,
      "call": 1,
      "line": 516,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "jmpAddrLabel": "checkBytecodeStartsEF",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(createContractAddress), CALL(checkBytecodeStartsEF) ; in: [memOffset], out: [startsWithEFn"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 159,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 977,
      "useElseAddr": 1,
      "elseAddr": 4678,
      "line": 519,
      "offsetLabel": "startsWithEF",
      "useCTX": 0,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidCodeStartsEF",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $               :MLOAD(startsWithEF), JMPNZ(invalidCodeStartsEF)"
     },
     {
      "CONST": "4",
      "setB": 1,
      "line": 522,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_SC_LENGTH => B"
     },
     {
      "inC": "1",
      "setD": 1,
      "line": 523,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C => D"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 524,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4854,
      "call": 1,
      "line": 526,
      "jmpAddrLabel": "hashPoseidonLinearFromMemory",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SR             :SSTORE, CALL(hashPoseidonLinearFromMemory); in: [memOffsetLinearPoseidon, memSizeLinearPoseidon], out: [D: resulting linear poseidon]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 527,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(createContractAddress)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 528,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "CONST": "2",
      "setB": 1,
      "line": 530,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_SC_CODE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 531,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SR                         :SSTORE"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 535,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(createContractAddress)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 536,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 537,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "CONST": "0",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 538,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0               :MSTORE(retDataCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 540,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SP         :MLOAD(lastSP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 541,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => PC         :MLOAD(lastPC)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 542,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [createContractAddress(A) => SP]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 544,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 545,
      "offsetLabel": "depth",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 995,
      "line": 557,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 559,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 560,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A + 1           :MSTORE(depth)"
     },
     {
      "inSP": "1",
      "CONST": "-6",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 998,
      "line": 562,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 6          :JMPN(stackUnderflow)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 563,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "inCTX": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 565,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(originAuxCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 567,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [gas => A]"
     },
     {
      "inA": "1",
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 568,
      "offsetLabel": "gasCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(gasCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 570,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [address => A]"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 572,
      "jmpAddrLabel": "maskAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :CALL(maskAddress); in: [A: address] out: [A: masked address]"
     },
     {
      "inA": "1",
      "offset": 25,
      "mOp": 1,
      "mWR": 1,
      "line": 573,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(addrCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 575,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--)"
     },
     {
      "inA": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 576,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(argsOffsetCall); [argsOffset => A]"
     },
     {
      "inA": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 578,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 581,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP--); [argsSize => C]"
     },
     {
      "inC": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 582,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(argsLengthCall)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 585,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 588,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--); [retOffset => B]"
     },
     {
      "inB": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 589,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 591,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP); [retSize => D]"
     },
     {
      "inE": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 593,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 594,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B                   :MLOAD(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "line": 596,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A                   :MLOAD(addrCall)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 597,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                             :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "inD": "-2500",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1019,
      "line": 599,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_REDUCED => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 10,
      "mOp": 1,
      "mWR": 0,
      "line": 602,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(txSrcAddr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 603,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(storageAddr)"
     },
     {
      "inSP": "1",
      "offset": 31,
      "mOp": 1,
      "mWR": 1,
      "line": 604,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP              :MSTORE(lastSP)"
     },
     {
      "inPC": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "line": 605,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    PC              :MSTORE(lastPC)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 607,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(lastCtxUsed)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setCTX": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 1,
      "line": 608,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A+1 => CTX      :MSTORE(lastCtxUsed)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 609,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 610,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(originAuxCTX)"
     },
     {
      "inA": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 611,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(originCTX)"
     },
     {
      "inC": "1",
      "offset": 10,
      "mOp": 1,
      "mWR": 1,
      "line": 613,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(txSrcAddr)"
     },
     {
      "inD": "1",
      "offset": 2,
      "mOp": 1,
      "mWR": 1,
      "line": 614,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D               :MSTORE(storageAddr)"
     },
     {
      "CONST": "1",
      "offset": 35,
      "mOp": 1,
      "mWR": 1,
      "line": 615,
      "offsetLabel": "isDelegateCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1               :MSTORE(isDelegateCall)"
     },
     {
      "inSR": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 616,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SR              :MSTORE(initSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "line": 617,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(addrCall)"
     },
     {
      "inA": "1",
      "offset": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 618,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(txDestAddr)"
     },
     {
      "inB": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 619,
      "offsetLabel": "retCallOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(retCallOffset)"
     },
     {
      "inE": "1",
      "offset": 23,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4440,
      "call": 1,
      "line": 621,
      "offsetLabel": "retCallLength",
      "useCTX": 1,
      "jmpAddrLabel": "computeGasSendCall",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(retCallLength), CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 622,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "offset": 38,
      "mOp": 1,
      "mWR": 1,
      "line": 623,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - A         :MSTORE(gasCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 624,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(txValue)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 625,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(gasRefund)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "line": 626,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(isStaticCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 627,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "inD": "1",
      "offset": 33,
      "mOp": 1,
      "mWR": 1,
      "line": 628,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D               :MSTORE(isStaticCall)"
     },
     {
      "inB": "1",
      "offset": 3,
      "mOp": 1,
      "mWR": 1,
      "line": 629,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(txValue)"
     },
     {
      "inC": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 630,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(gasRefund)"
     },
     {
      "inA": "1",
      "setGAS": 1,
      "line": 631,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 634,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(argsLengthCall)"
     },
     {
      "inA": "1",
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4217,
      "call": 1,
      "line": 636,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "jmpAddrLabel": "copySP",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(txCalldataLen), CALL(copySP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3598,
      "call": 1,
      "line": 638,
      "jmpAddrLabel": "checkpointTouched",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :CALL(checkpointTouched)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3989,
      "line": 639,
      "jmpAddrLabel": "txType",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :JMP(txType)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1051,
      "line": 653,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498070",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1052,
      "line": 654,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 4          :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "265125",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 1053,
      "line": 655,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*2 :JMPN(outOfCountersPoseidon)"
     },
     {
      "inGAS": "1",
      "CONST": "-32000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1054,
      "line": 657,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %CREATE_2_GAS => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 660,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 661,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A + 1               :MSTORE(depth)"
     },
     {
      "inSP": "1",
      "CONST": "-4",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1057,
      "line": 664,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 4              :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1058,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 666,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 667,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 668,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(SP--); [value => D]"
     },
     {
      "inA": "1",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 669,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(valueCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 670,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E              :MLOAD(SP--); [offset => E]"
     },
     {
      "inE": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 671,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E                   :MSTORE(argsOffsetCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 672,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C              :MLOAD(SP--); [size => C]"
     },
     {
      "inC": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 673,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C                   :MSTORE(argsLengthCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 674,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D              :MLOAD(SP); [salt => D]"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 678,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E                   :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 681,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "inCTX": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 683,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX                 :MSTORE(originAuxCTX)"
     },
     {
      "inC": "1",
      "CONST": "31",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 686,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C + 31              :MSTORE(arithA)"
     },
     {
      "CONST": "32",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 687,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    32                  :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 688,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C              :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "setA": 1,
      "line": 689,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS => A"
     },
     {
      "inC": "6",
      "setB": 1,
      "line": 690,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    6 * C => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1075,
      "line": 691,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $                   :LT,JMPC(outOfGas)"
     },
     {
      "inA": "1",
      "inB": "-1",
      "setGAS": 1,
      "line": 692,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A - B => GAS"
     },
     {
      "inGAS": "1",
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 693,
      "offsetLabel": "gasCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS                 :MSTORE(gasCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 697,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(storageAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 699,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 701,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 703,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :SLOAD"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "line": 704,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B              :MLOAD(valueCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 773,
      "useElseAddr": 1,
      "elseAddr": 1083,
      "line": 705,
      "jmpAddrLabel": "opCreateFail",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $                   :LT,JMPC(opCreateFail)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 708,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(storageAddr)"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 710,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_NONCE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "line": 712,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B              :SLOAD"
     },
     {
      "inA": "1",
      "setC": 1,
      "line": 713,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => C"
     },
     {
      "CONSTL": "18446744073709551615",
      "setA": 1,
      "line": 714,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_NONCE => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 773,
      "useElseAddr": 1,
      "elseAddr": 1089,
      "line": 715,
      "jmpAddrLabel": "opCreateFail",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $                   :EQ,JMPC(opCreateFail)"
     },
     {
      "inSP": "1",
      "offset": 31,
      "mOp": 1,
      "mWR": 1,
      "line": 718,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP                  :MSTORE(lastSP)"
     },
     {
      "inPC": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "line": 719,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    PC                  :MSTORE(lastPC)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 721,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(lastCtxUsed)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setCTX": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 1,
      "line": 722,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A+1 => CTX          :MSTORE(lastCtxUsed)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 723,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX                 :MSTORE(currentCTX)"
     },
     {
      "CONST": "1",
      "offset": 13,
      "mOp": 1,
      "mWR": 1,
      "line": 724,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1                   :MSTORE(isCreateContract)"
     },
     {
      "CONST": "1",
      "offset": 34,
      "mOp": 1,
      "mWR": 1,
      "line": 725,
      "offsetLabel": "isCreate",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1                   :MSTORE(isCreate)"
     },
     {
      "CONST": "1",
      "offset": 36,
      "mOp": 1,
      "mWR": 1,
      "line": 726,
      "offsetLabel": "isCreate2",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1                   :MSTORE(isCreate2)"
     },
     {
      "inD": "1",
      "offset": 37,
      "mOp": 1,
      "mWR": 1,
      "line": 727,
      "offsetLabel": "salt",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D                   :MSTORE(salt)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 729,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(originAuxCTX)"
     },
     {
      "inA": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 730,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(originCTX)"
     },
     {
      "inB": "1",
      "offset": 4,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4238,
      "call": 1,
      "line": 734,
      "offsetLabel": "txNonce",
      "useCTX": 1,
      "jmpAddrLabel": "getLenBytes",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B                   :MSTORE(txNonce), CALL(getLenBytes); in: [B: value] out: [A: value bytes length]"
     },
     {
      "inA": "1",
      "offset": 15,
      "mOp": 1,
      "mWR": 1,
      "line": 735,
      "offsetLabel": "lengthNonce",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(lengthNonce)"
     },
     {
      "CONST": "1",
      "setA": 1,
      "line": 737,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "bin": 1,
      "binOpcode": 0,
      "line": 738,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D                    :ADD"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 740,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C => A"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 742,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_NONCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 743,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 744,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SR             :SSTORE"
     },
     {
      "inSR": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 745,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SR                  :MSTORE(initSR)"
     },
     {
      "inA": "1",
      "offset": 10,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4440,
      "call": 1,
      "line": 747,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "jmpAddrLabel": "computeGasSendCall",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(txSrcAddr), CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 748,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX            :MLOAD(originCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 749,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C              :MLOAD(gasRefund)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "offset": 38,
      "mOp": 1,
      "mWR": 1,
      "line": 750,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - A             :MSTORE(gasCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 751,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX            :MLOAD(currentCTX)"
     },
     {
      "inC": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 752,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C                   :MSTORE(gasRefund)"
     },
     {
      "inA": "1",
      "setGAS": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4217,
      "call": 1,
      "line": 755,
      "jmpAddrLabel": "copySP",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => GAS            :CALL(copySP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 757,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(argsLengthCall)"
     },
     {
      "inA": "1",
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "line": 758,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(txCalldataLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "line": 759,
      "offsetLabel": "valueCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(valueCall)"
     },
     {
      "inA": "1",
      "offset": 3,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3598,
      "call": 1,
      "line": 761,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "jmpAddrLabel": "checkpointTouched",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(txValue), CALL(checkpointTouched)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3989,
      "line": 762,
      "jmpAddrLabel": "txType",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                        :JMP(txType)"
     },
     {
      "CONST": "7968688",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1122,
      "line": 774,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 300 :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 776,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 777,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A + 1           :MSTORE(depth)"
     },
     {
      "inSP": "1",
      "CONST": "-6",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1125,
      "line": 779,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 6          :JMPN(stackUnderflow)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 780,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "inCTX": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 782,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(originAuxCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 784,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [gas => A]"
     },
     {
      "inA": "1",
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 785,
      "offsetLabel": "gasCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(gasCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 787,
      "jmpAddrLabel": "maskAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
     },
     {
      "inA": "1",
      "offset": 25,
      "mOp": 1,
      "mWR": 1,
      "line": 788,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(addrCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 790,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP--); [argsOffset => A]"
     },
     {
      "inA": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 791,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(argsOffsetCall)"
     },
     {
      "inA": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 793,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 795,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP--); [argsSize => B]"
     },
     {
      "inB": "1",
      "offset": 27,
      "mOp": 1,
      "mWR": 1,
      "line": 796,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(argsLengthCall)"
     },
     {
      "inB": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 799,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 801,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP--); [retOffset => C]"
     },
     {
      "inC": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 802,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 804,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP); [retSize => E]"
     },
     {
      "inE": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 806,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 808,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(addrCall), CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "inD": "-2500",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1143,
      "line": 810,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_REDUCED => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 813,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(storageAddr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 814,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(gasRefund)"
     },
     {
      "inSP": "1",
      "offset": 31,
      "mOp": 1,
      "mWR": 1,
      "line": 815,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP              :MSTORE(lastSP)"
     },
     {
      "inPC": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "line": 816,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    PC              :MSTORE(lastPC)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 818,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(lastCtxUsed)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setCTX": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 1,
      "line": 819,
      "offsetLabel": "lastCtxUsed",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A+1 => CTX      :MSTORE(lastCtxUsed)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 820,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 821,
      "offsetLabel": "originAuxCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(originAuxCTX)"
     },
     {
      "inA": "1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 822,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(originCTX)"
     },
     {
      "inB": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 823,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :MSTORE(gasRefund)"
     },
     {
      "CONST": "0",
      "offset": 3,
      "mOp": 1,
      "mWR": 1,
      "line": 824,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0               :MSTORE(txValue)"
     },
     {
      "CONST": "1",
      "offset": 33,
      "mOp": 1,
      "mWR": 1,
      "line": 825,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1               :MSTORE(isStaticCall)"
     },
     {
      "inD": "1",
      "offset": 10,
      "mOp": 1,
      "mWR": 1,
      "line": 826,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D               :MSTORE(txSrcAddr)"
     },
     {
      "inSR": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 827,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SR              :MSTORE(initSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "line": 828,
      "offsetLabel": "addrCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(addrCall)"
     },
     {
      "inA": "1",
      "offset": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 829,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(txDestAddr)"
     },
     {
      "inA": "1",
      "offset": 2,
      "mOp": 1,
      "mWR": 1,
      "line": 830,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(storageAddr)"
     },
     {
      "inC": "1",
      "offset": 22,
      "mOp": 1,
      "mWR": 1,
      "line": 831,
      "offsetLabel": "retCallOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(retCallOffset)"
     },
     {
      "inE": "1",
      "offset": 23,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4440,
      "call": 1,
      "line": 833,
      "offsetLabel": "retCallLength",
      "useCTX": 1,
      "jmpAddrLabel": "computeGasSendCall",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(retCallLength), CALL(computeGasSendCall); in: [gasCall: gas sent to call] out: [A: min( requested_gas , all_but_one_64th(63/64))]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 834,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "offset": 38,
      "mOp": 1,
      "mWR": 1,
      "line": 835,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - A         :MSTORE(gasCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 836,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "inA": "1",
      "setGAS": 1,
      "line": 838,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 839,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(argsLengthCall)"
     },
     {
      "inA": "1",
      "offset": 12,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4217,
      "call": 1,
      "line": 841,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "jmpAddrLabel": "copySP",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(txCalldataLen), CALL(copySP)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3598,
      "call": 1,
      "line": 843,
      "jmpAddrLabel": "checkpointTouched",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :CALL(checkpointTouched)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3989,
      "line": 844,
      "jmpAddrLabel": "txType",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :JMP(txType)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1171,
      "line": 855,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1172,
      "line": 857,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 2 => SP          :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 17,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3600,
      "call": 1,
      "line": 860,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "jmpAddrLabel": "revertTouched",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SR         :MLOAD(initSR), CALL(revertTouched)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 862,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP+1); [offset => E]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 863,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
     },
     {
      "inE": "1",
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 864,
      "offsetLabel": "retDataOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(retDataOffset)"
     },
     {
      "inC": "1",
      "offset": 25,
      "mOp": 1,
      "mWR": 1,
      "line": 865,
      "offsetLabel": "retDataLength",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(retDataLength)"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 867,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 870,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 872,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "revert"
         }
        ]
       }
      ],
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(originCTX)"
     },
     {
      "CONST": "0",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 874,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0               :MSTORE(gasRefund)"
     },
     {
      "inB": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 1182,
      "line": 876,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B               :JMPZ(handleGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 878,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(currentCTX)"
     },
     {
      "inB": "1",
      "setCTX": 1,
      "line": 879,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B => CTX"
     },
     {
      "inA": "1",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 881,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(retDataCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "line": 883,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(gasCTX)"
     },
     {
      "inGAS": "1",
      "inB": "1",
      "setGAS": 1,
      "line": 884,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS + B => GAS"
     },
     {
      "inA": "1",
      "setCTX": 1,
      "line": 886,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => CTX"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 23,
      "mOp": 1,
      "mWR": 0,
      "line": 887,
      "offsetLabel": "retCallLength",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(retCallLength)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 888,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C => A"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 889,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1193,
      "useElseAddr": 1,
      "elseAddr": 1192,
      "line": 890,
      "jmpAddrLabel": "preREVERT32",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $               :LT,JMPC(preREVERT32)"
     },
     {
      "inD": "1",
      "setC": 1,
      "line": 891,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 895,
      "offsetLabel": "retCallOffset",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B          :MLOAD(retCallOffset)"
     },
     {
      "CONST": "7968788",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1195,
      "line": 899,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1211,
      "useElseAddr": 1,
      "elseAddr": 1196,
      "line": 900,
      "jmpAddrLabel": "opREVERTend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C              :JMPZ(opREVERTend)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1206,
      "useElseAddr": 1,
      "elseAddr": 1197,
      "line": 902,
      "jmpAddrLabel": "opREVERTfinal",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C - 32          :JMPN(opREVERTfinal)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "call": 1,
      "line": 903,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
     },
     {
      "inE": "1",
      "setD": 1,
      "line": 904,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 905,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 906,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B => E"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4283,
      "call": 1,
      "line": 909,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTORE32",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 910,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E => B"
     },
     {
      "inD": "1",
      "setE": 1,
      "line": 911,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D => E"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "line": 912,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C - 32 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1194,
      "line": 914,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "jmpAddrLabel": "opREVERTloop",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX), JMP(opREVERTloop)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 918,
      "jmpAddrLabel": "MLOADX",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                    :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 919,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 920,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B => E"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4278,
      "call": 1,
      "line": 921,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTOREX",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 922,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 926,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 927,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 928,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SP         :MLOAD(lastSP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 929,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => PC         :MLOAD(lastPC)"
     },
     {
      "CONST": "0",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 930,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0               :MSTORE(SP++); [0 => SP]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 932,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 933,
      "offsetLabel": "depth",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1219,
      "line": 950,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1220,
      "line": 951,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "264611",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 1221,
      "line": 952,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*4 :JMPN(outOfCountersPoseidon)"
     },
     {
      "inGAS": "1",
      "CONST": "-5000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1222,
      "line": 954,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %SENDALL_GAS => GAS   :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1223,
      "line": 957,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    SP - 1 => SP        :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1224,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 960,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 961,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(storageAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 963,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 964,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "sRD": 1,
      "line": 966,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D              :SLOAD"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 969,
      "jmpAddrLabel": "maskAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A              :MLOAD(SP), CALL(maskAddress); in: [A: address] out: [A: masked address]"
     },
     {
      "inA": "1",
      "offset": 44,
      "mOp": 1,
      "mWR": 1,
      "line": 970,
      "offsetLabel": "sendAllAddress",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A                   :MSTORE(sendAllAddress)"
     },
     {
      "inA": "1",
      "setC": 1,
      "setE": 1,
      "line": 973,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => C, E"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 976,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 977,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1254,
      "useElseAddr": 1,
      "elseAddr": 1234,
      "line": 978,
      "jmpAddrLabel": "opSENDALLend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $                           :EQ,JMPC(opSENDALLend) ; no balance to move"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 981,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A                      :MLOAD(storageAddr)"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 982,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1254,
      "useElseAddr": 1,
      "elseAddr": 1237,
      "line": 983,
      "jmpAddrLabel": "opSENDALLend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $                           :EQ, JMPC(opSENDALLend)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4411,
      "call": 1,
      "line": 988,
      "jmpAddrLabel": "isEmptyAccount",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "                                                :CALL(isEmptyAccount); in: [E: address] out: [E: 0 if is not empty, 1 if is empty]"
     },
     {
      "inGAS": "1",
      "inE": "-25000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1239,
      "line": 989,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %CALL_NEW_ACCOUNT_GAS * E => GAS      :JMPN(outOfGas)"
     },
     {
      "inD": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 992,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D                           :MSTORE(arithA)"
     },
     {
      "inC": "1",
      "setA": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 994,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    C => A                      :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
     },
     {
      "inGAS": "1",
      "inD": "-2600",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1242,
      "line": 995,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS - %COLD_ACCOUNT_ACCESS_COST * D => GAS     :JMPN(outOfGas)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 998,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 999,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "sRD": 1,
      "line": 1001,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => E              :SLOAD"
     },
     {
      "inE": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4505,
      "call": 1,
      "line": 1005,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "addARITH",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    E               :MSTORE(arithB), CALL(addARITH); in: [arithA, arithB] out[arithRes1: arithA*arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 1006,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 44,
      "mOp": 1,
      "mWR": 0,
      "line": 1009,
      "offsetLabel": "sendAllAddress",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A                  :MLOAD(sendAllAddress); [address => A]"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 1010,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 1011,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 1012,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SR                 :SSTORE"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 1015,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A                  :MLOAD(storageAddr)"
     },
     {
      "CONST": "0",
      "setD": 1,
      "line": 1016,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 1017,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SR                 :SSTORE"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 1255,
      "line": 1021,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A                  :MLOAD(originCTX), JMPZ(handleGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 1024,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => B                  :MLOAD(gasRefund)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 1025,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    1 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 34,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1259,
      "useElseAddr": 1,
      "elseAddr": 1258,
      "line": 1026,
      "offsetLabel": "isCreate",
      "useCTX": 1,
      "jmpAddrLabel": "opSENDALLendContinue",
      "elseAddrLabel": "next",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C                  :MLOAD(isCreate), JMPZ(opSENDALLendContinue)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 1027,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => D                  :MLOAD(createContractAddress)"
     },
     {
      "inA": "1",
      "setCTX": 1,
      "line": 1030,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A => CTX"
     },
     {
      "CONST": "0",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 1031,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    0                       :MSTORE(retDataCTX)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 1032,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    CTX                     :MSTORE(currentCTX)"
     },
     {
      "inB": "1",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 1033,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    B                       :MSTORE(gasRefund)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "line": 1034,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => C                  :MLOAD(gasCTX)"
     },
     {
      "inGAS": "1",
      "inC": "1",
      "setGAS": 1,
      "line": 1035,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    GAS + C => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 1037,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => SP                 :MLOAD(lastSP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 1038,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => PC                 :MLOAD(lastPC)"
     },
     {
      "inD": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 1039,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    D                       :MSTORE(SP++); [output => SP]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 1041,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    $ => A                  :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 1042,
      "offsetLabel": "depth",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    A - 1                   :MSTORE(depth), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4672,
      "line": 1053,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "invalidOpcode",
      "fileName": "opcodes/create-terminate-context.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep, invalidOpcode)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1272,
      "line": 12,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1273,
      "line": 15,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-30",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1274,
      "line": 18,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    GAS - %KECCAK_GAS => GAS :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 19,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 20,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP--); [offset => E]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 21,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP) ; [size => C]"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 24,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    E               :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 27,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "inC": "1",
      "CONST": "31",
      "setA": 1,
      "line": 30,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    C+31 => A"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 32,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    A               :MSTORE(arithA)"
     },
     {
      "CONST": "32",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 33,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 34,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "CONST": "6",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 37,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    6               :MSTORE(arithA)"
     },
     {
      "inA": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 38,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    A               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 39,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1287,
      "line": 40,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    GAS - A => GAS  :JMPN(outOfGas)  ; dynamic_gas = 6 * minimum_word_size + memory_expansion_cost"
     },
     {
      "inC": "1",
      "CONST": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 43,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    C + 1           :MSTORE(arithA)"
     },
     {
      "CONST": "136",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 44,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    136             :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 45,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => B          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 46,
      "offsetLabel": "cntKeccakPreProcess",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => A          :MLOAD(cntKeccakPreProcess)"
     },
     {
      "CONST": "2257",
      "inCntKeccakF": "-1",
      "inA": "-1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4664,
      "useElseAddr": 1,
      "elseAddr": 1292,
      "line": 48,
      "jmpAddrLabel": "outOfCountersKeccak",
      "elseAddrLabel": "next",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1 - B :JMPN(outOfCountersKeccak)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 51,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => B           :MLOAD(lastHashKIdUsed)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "setB": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 52,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    B + 1 => B       :MSTORE(lastHashKIdUsed)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 54,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    32 => D"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 56,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    0 => HASHPOS"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1297,
      "line": 60,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1310,
      "useElseAddr": 1,
      "elseAddr": 1298,
      "line": 62,
      "jmpAddrLabel": "opSHA3End",
      "elseAddrLabel": "next",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    C               :JMPZ(opSHA3End)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1305,
      "useElseAddr": 1,
      "elseAddr": 1299,
      "line": 63,
      "jmpAddrLabel": "opSHA3Final",
      "elseAddrLabel": "next",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    C - 32          :JMPN(opSHA3Final)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "call": 1,
      "line": 65,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "                    :CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 67,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    E => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 69,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => E          :MLOAD(lastHashKIdUsed)"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 71,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    A               :HASHK(E)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 73,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    B => E"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1296,
      "line": 74,
      "jmpAddrLabel": "opSHA3Loop",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    C - 32 => C     :JMP(opSHA3Loop)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 78,
      "jmpAddrLabel": "MLOADX",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "                    :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 80,
      "jmpAddrLabel": "SHRarith",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    32 - C => D     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 82,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => E          :MLOAD(lastHashKIdUsed)"
     },
     {
      "inC": "1",
      "setD": 1,
      "line": 84,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    C => D"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 86,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    A               :HASHK(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 90,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => E          :MLOAD(lastHashKIdUsed)"
     },
     {
      "inHASHPOS": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 92,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    HASHPOS         :HASHKLEN(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "line": 94,
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    $ => A          :HASHKDIGEST(E)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 96,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/crypto.zkasm",
      "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [hash(A) => SP]"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1315,
      "line": 13,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1316,
      "line": 14,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1317,
      "line": 17,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    SP - 1 => SP                    :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-8",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1318,
      "line": 20,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    GAS - %GAS_MID_STEP => GAS      :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1327,
      "line": 23,
      "jmpAddrLabel": "checkJumpDest",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => A                         :MLOAD(SP), JMP(checkJumpDest); [counter => PC]"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1320,
      "line": 35,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1321,
      "line": 36,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "inGAS": "1",
      "CONST": "-10",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1322,
      "line": 38,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    GAS - %GAS_SLOW_STEP => GAS                 :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1323,
      "line": 39,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    SP - 2 => SP                    :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 40,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => B                          :MLOAD(SP); [value => B]"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 41,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "useElseAddr": 1,
      "elseAddr": 1326,
      "line": 42,
      "jmpAddrLabel": "readCode",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $                               :EQ, JMPC(readCode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1327,
      "line": 44,
      "jmpAddrLabel": "checkJumpDest",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP+1), JMP(checkJumpDest); [counter => PC]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1328,
      "useElseAddr": 1,
      "elseAddr": 1336,
      "line": 48,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "checkJumpDestDeployment",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(checkJumpDestDeployment)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 49,
      "offsetLabel": "bytecodeLength",
      "useCTX": 1,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => B                          :MLOAD(bytecodeLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1330,
      "useElseAddr": 1,
      "elseAddr": 4671,
      "line": 50,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidJump",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $                               :LT,JMPNC(invalidJump)"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 51,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    A => B"
     },
     {
      "inB": "1",
      "setPC": 1,
      "line": 52,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    B => PC"
     },
     {
      "inB": "1",
      "setHASHPOS": 1,
      "line": 53,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    B => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 29,
      "mOp": 1,
      "mWR": 0,
      "line": 55,
      "offsetLabel": "contractHashId",
      "useCTX": 1,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => E                          :MLOAD(contractHashId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP1": 1,
      "line": 56,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => A                          :HASHP1(E)"
     },
     {
      "inA": "1",
      "CONST": "-91",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "useElseAddr": 1,
      "elseAddr": 4671,
      "line": 58,
      "jmpAddrLabel": "readCode",
      "elseAddrLabel": "invalidJump",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    A - 0x5B                        :JMPZ(readCode, invalidJump)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 62,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => B                          :MLOAD(txCalldataLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1338,
      "useElseAddr": 1,
      "elseAddr": 4671,
      "line": 63,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidJump",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $                               :LT,JMPNC(invalidJump)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 34,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1339,
      "useElseAddr": 1,
      "elseAddr": 1345,
      "line": 65,
      "offsetLabel": "isCreate",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "checkJumpDestDeploymentCreate",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreate), JMPNZ(checkJumpDestDeploymentCreate)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setHASHPOS": 1,
      "offset": 39,
      "mOp": 1,
      "mWR": 0,
      "line": 67,
      "offsetLabel": "dataStarts",
      "useCTX": 1,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => HASHPOS                    :MLOAD(dataStarts)"
     },
     {
      "inA": "1",
      "setPC": 1,
      "line": 69,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    A => PC"
     },
     {
      "inHASHPOS": "1",
      "inPC": "1",
      "setHASHPOS": 1,
      "line": 70,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    HASHPOS + PC => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 72,
      "offsetLabel": "batchHashDataId",
      "useCTX": 0,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => E                          :MLOAD(batchHashDataId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 74,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => A                          :HASHK1(E)"
     },
     {
      "inA": "1",
      "CONST": "-91",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "useElseAddr": 1,
      "elseAddr": 4671,
      "line": 76,
      "jmpAddrLabel": "readCode",
      "elseAddrLabel": "invalidJump",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    A - 0x5B                        :JMPZ(readCode, invalidJump)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 80,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => CTX                        :MLOAD(originCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 82,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => E                          :MLOAD(argsOffsetCall)"
     },
     {
      "inA": "1",
      "setPC": 1,
      "line": 84,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    A => PC"
     },
     {
      "inE": "1",
      "inPC": "1",
      "setE": 1,
      "line": 85,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    E + PC => E"
     },
     {
      "CONST": "1",
      "setC": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 87,
      "jmpAddrLabel": "MLOADX",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    1 => C                          :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 88,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $ => CTX                        :MLOAD(currentCTX)"
     },
     {
      "CONSTL": "41160469221077241341972498577307029744717064861614419248400938065312870301696",
      "setB": 1,
      "line": 90,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    0x5b00000000000000000000000000000000000000000000000000000000000000n => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "useElseAddr": 1,
      "elseAddr": 4671,
      "line": 91,
      "jmpAddrLabel": "readCode",
      "elseAddrLabel": "invalidJump",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    $                               :EQ, JMPC(readCode, invalidJump)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1354,
      "line": 103,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1355,
      "line": 106,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS      :JMPN(outOfGas)"
     },
     {
      "inPC": "1",
      "CONST": "-1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 108,
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    PC - 1              :MSTORE(SP++); [PC => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 110,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1358,
      "line": 123,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-1",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 126,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/flow-control.zkasm",
      "lineStr": "    GAS - %JUMP_DEST_GAS => GAS  :JMPN(outOfGas, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1360,
      "line": 12,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1361,
      "line": 13,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1362,
      "line": 15,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 2              :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-375",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1363,
      "line": 19,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1364,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 22,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 24,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 25,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => E              :MLOAD(SP--) ; [offset => E]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 26,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => C              :MLOAD(SP)   ; [size => C]"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 28,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    E                   :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 30,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "CONST": "0",
      "offset": 37,
      "mOp": 1,
      "mWR": 1,
      "line": 32,
      "offsetLabel": "numTopics",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    0                   :MSTORE(numTopics)"
     },
     {
      "CONST": "8",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 34,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %LOG_DATA_GAS       :MSTORE(arithA)"
     },
     {
      "inC": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 35,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 36,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "setA": 1,
      "line": 37,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1375,
      "line": 39,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $                   :LT,JMPC(outOfGas)"
     },
     {
      "inGAS": "1",
      "inB": "-1",
      "setGAS": 1,
      "line": 40,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - B => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 41,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex) ; load logIndex"
     },
     {
      "inB": "1",
      "CONST": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1454,
      "line": 42,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "jmpAddrLabel": "opLOGLoop",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop) ; store next free log index"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1379,
      "line": 46,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1380,
      "line": 47,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-3",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1381,
      "line": 48,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 3              :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-375",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1382,
      "line": 49,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1383,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 50,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 51,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 52,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => E              :MLOAD(SP--)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 53,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => C              :MLOAD(SP)"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 54,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    E                   :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 55,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem)"
     },
     {
      "CONST": "1",
      "offset": 37,
      "mOp": 1,
      "mWR": 1,
      "line": 56,
      "offsetLabel": "numTopics",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    1                   :MSTORE(numTopics)"
     },
     {
      "CONST": "8",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 57,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    8                   :MSTORE(arithA)"
     },
     {
      "inC": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 58,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 59,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "setA": 1,
      "line": 60,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1394,
      "line": 62,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $                   :LT,JMPC(outOfGas)"
     },
     {
      "inGAS": "1",
      "inB": "-1",
      "setGAS": 1,
      "line": 63,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - B => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 64,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1454,
      "line": 65,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "jmpAddrLabel": "opLOGLoop",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1398,
      "line": 69,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1399,
      "line": 70,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-4",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1400,
      "line": 71,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 4              :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-375",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1401,
      "line": 72,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1402,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 73,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 74,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 75,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => E              :MLOAD(SP--)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 76,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => C              :MLOAD(SP)"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 77,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    E                   :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 78,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem)"
     },
     {
      "CONST": "2",
      "offset": 37,
      "mOp": 1,
      "mWR": 1,
      "line": 79,
      "offsetLabel": "numTopics",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    2                   :MSTORE(numTopics)"
     },
     {
      "CONST": "8",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 80,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    8                   :MSTORE(arithA)"
     },
     {
      "inC": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 81,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 82,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "setA": 1,
      "line": 83,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1413,
      "line": 85,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $                   :LT,JMPC(outOfGas)"
     },
     {
      "inGAS": "1",
      "inB": "-1",
      "setGAS": 1,
      "line": 86,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - B => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 87,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1454,
      "line": 88,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "jmpAddrLabel": "opLOGLoop",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1417,
      "line": 92,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1418,
      "line": 93,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-5",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1419,
      "line": 94,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 5              :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-375",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1420,
      "line": 95,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1421,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 96,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 97,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 98,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => E              :MLOAD(SP--)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 99,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => C              :MLOAD(SP)"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 100,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    E                   :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 101,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem)"
     },
     {
      "CONST": "3",
      "offset": 37,
      "mOp": 1,
      "mWR": 1,
      "line": 102,
      "offsetLabel": "numTopics",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    3                   :MSTORE(numTopics)"
     },
     {
      "CONST": "8",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 103,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    8                   :MSTORE(arithA)"
     },
     {
      "inC": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 104,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 105,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "setA": 1,
      "line": 106,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1432,
      "line": 108,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $                   :LT,JMPC(outOfGas)"
     },
     {
      "inGAS": "1",
      "inB": "-1",
      "setGAS": 1,
      "line": 109,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - B => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 110,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1454,
      "line": 111,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "jmpAddrLabel": "opLOGLoop",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1436,
      "line": 115,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1437,
      "line": 116,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-6",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1438,
      "line": 117,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 6              :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-375",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1439,
      "line": 118,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - %LOG_GAS => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1440,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 119,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => A              :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 120,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": -1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 121,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => E              :MLOAD(SP--)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 122,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => C              :MLOAD(SP)"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 123,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    E                   :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 124,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(lastMemLength), CALL(saveMem)"
     },
     {
      "CONST": "4",
      "offset": 37,
      "mOp": 1,
      "mWR": 1,
      "line": 125,
      "offsetLabel": "numTopics",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    4                   :MSTORE(numTopics)"
     },
     {
      "CONST": "8",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 126,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    8                   :MSTORE(arithA)"
     },
     {
      "inC": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 127,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C                   :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 128,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "setA": 1,
      "line": 129,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1451,
      "line": 131,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $                   :LT,JMPC(outOfGas)"
     },
     {
      "inGAS": "1",
      "inB": "-1",
      "setGAS": 1,
      "line": 132,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - B => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 133,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => B              :MLOAD(nextFreeLogIndex)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "offset": 32,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1454,
      "line": 134,
      "offsetLabel": "nextFreeLogIndex",
      "useCTX": 0,
      "jmpAddrLabel": "opLOGLoop",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    B + 1               :MSTORE(nextFreeLogIndex), JMP(opLOGLoop)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1455,
      "line": 138,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1461,
      "useElseAddr": 1,
      "elseAddr": 1456,
      "line": 139,
      "jmpAddrLabel": "opSaveTopicsInit",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C               :JMPZ(opSaveTopicsInit)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1459,
      "useElseAddr": 1,
      "elseAddr": 1457,
      "line": 141,
      "jmpAddrLabel": "opLOGFinal",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C - 32          :JMPN(opLOGFinal)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "call": 1,
      "line": 142,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "                    :CALL(MLOAD32); in: [E: offset] out: [A: value]"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1454,
      "line": 144,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "storeLog",
        "params": [
         {
          "op": "getReg",
          "regName": "B"
         },
         {
          "op": "number",
          "num": "0"
         },
         {
          "op": "getReg",
          "regName": "A"
         }
        ]
       }
      ],
      "jmpAddrLabel": "opLOGLoop",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    C - 32 => C     :JMP(opLOGLoop)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 148,
      "jmpAddrLabel": "MLOADX",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "                    :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1461,
      "line": 150,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "storeLog",
        "params": [
         {
          "op": "getReg",
          "regName": "B"
         },
         {
          "op": "number",
          "num": "0"
         },
         {
          "op": "getReg",
          "regName": "A"
         }
        ]
       }
      ],
      "jmpAddrLabel": "opSaveTopicsInit",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "                    :JMP(opSaveTopicsInit) ; instruction added to allow executing $$ function"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 37,
      "mOp": 1,
      "mWR": 0,
      "line": 154,
      "offsetLabel": "numTopics",
      "useCTX": 0,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => A          :MLOAD(numTopics)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1463,
      "line": 158,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inA": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "useElseAddr": 1,
      "elseAddr": 1464,
      "line": 160,
      "jmpAddrLabel": "readCode",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    A                   :JMPZ(readCode)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "line": 162,
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    SP - 1 => SP"
     },
     {
      "inGAS": "1",
      "CONST": "-375",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1466,
      "line": 164,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    GAS - %LOG_TOPIC_GAS => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 165,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "storeLog",
        "params": [
         {
          "op": "getReg",
          "regName": "B"
         },
         {
          "op": "number",
          "num": "1"
         },
         {
          "op": "getReg",
          "regName": "C"
         }
        ]
       }
      ],
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    $ => C              :MLOAD(SP)   ; [topic => C]"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1462,
      "line": 167,
      "jmpAddrLabel": "opSaveTopicsLoop",
      "fileName": "opcodes/logs.zkasm",
      "lineStr": "    A - 1 =>  A         :JMP(opSaveTopicsLoop)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 12,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    1 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 15,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "2",
      "setD": 1,
      "line": 18,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    2 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 19,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "3",
      "setD": 1,
      "line": 22,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    3 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 23,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "4",
      "setD": 1,
      "line": 26,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    4 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 27,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "5",
      "setD": 1,
      "line": 30,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    5 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 31,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "6",
      "setD": 1,
      "line": 34,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    6 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 35,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "7",
      "setD": 1,
      "line": 38,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    7 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 39,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "8",
      "setD": 1,
      "line": 42,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    8 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 43,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "9",
      "setD": 1,
      "line": 46,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    9 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 47,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "10",
      "setD": 1,
      "line": 50,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    10 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 51,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "11",
      "setD": 1,
      "line": 54,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    11 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 55,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "12",
      "setD": 1,
      "line": 58,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    12 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 59,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "13",
      "setD": 1,
      "line": 62,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    13 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 63,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "14",
      "setD": 1,
      "line": 66,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    14 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 67,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "15",
      "setD": 1,
      "line": 70,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    15 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 71,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "16",
      "setD": 1,
      "line": 74,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    16 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 75,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "17",
      "setD": 1,
      "line": 78,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    17 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 79,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "18",
      "setD": 1,
      "line": 82,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    18 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 83,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "19",
      "setD": 1,
      "line": 86,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    19 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 87,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "20",
      "setD": 1,
      "line": 90,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    20 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 91,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "21",
      "setD": 1,
      "line": 94,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    21 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 95,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "22",
      "setD": 1,
      "line": 98,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    22 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 99,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "23",
      "setD": 1,
      "line": 102,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    23 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 103,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "24",
      "setD": 1,
      "line": 106,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    24 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 107,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "25",
      "setD": 1,
      "line": 110,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    25 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 111,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "26",
      "setD": 1,
      "line": 114,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    26 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 115,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "27",
      "setD": 1,
      "line": 118,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    27 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 119,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "28",
      "setD": 1,
      "line": 122,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    28 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 123,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "29",
      "setD": 1,
      "line": 126,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    29 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 127,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "30",
      "setD": 1,
      "line": 130,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    30 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 131,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "31",
      "setD": 1,
      "line": 134,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    31 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 135,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 138,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    32 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1532,
      "useElseAddr": 1,
      "elseAddr": 1541,
      "line": 139,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "opAuxPUSHA",
      "elseAddrLabel": "opAuxPUSHB",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(isCreateContract), JMPNZ(opAuxPUSHB, opAuxPUSHA)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1533,
      "line": 143,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 145,
      "offsetLabel": "bytecodeLength",
      "useCTX": 1,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B              :MLOAD(bytecodeLength)"
     },
     {
      "inPC": "1",
      "inD": "1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1536,
      "useElseAddr": 1,
      "elseAddr": 1535,
      "line": 146,
      "jmpAddrLabel": "opAuxPUSHA2",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    PC + D - B          :JMPN(opAuxPUSHA2)"
     },
     {
      "inB": "1",
      "inPC": "-1",
      "setD": 1,
      "line": 147,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B - PC => D"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1537,
      "line": 151,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS      :JMPN(outOfGas)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4748,
      "call": 1,
      "line": 153,
      "jmpAddrLabel": "readPush",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "                        :CALL(readPush); in: [D: bytes to read] out: [E: value read]"
     },
     {
      "inE": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 155,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    E                   :MSTORE(SP++); [pushed_value(E) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 1540,
      "line": 157,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow)"
     },
     {
      "inPC": "1",
      "inD": "1",
      "setPC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 159,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    PC + D => PC                    :JMP(readCode)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1542,
      "line": 163,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 34,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1543,
      "useElseAddr": 1,
      "elseAddr": 1561,
      "line": 165,
      "offsetLabel": "isCreate",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opAuxPUSHBcreate",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(isCreate), JMPNZ(opAuxPUSHBcreate)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 166,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(txCalldataLen)"
     },
     {
      "inPC": "1",
      "inD": "1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1546,
      "useElseAddr": 1,
      "elseAddr": 1545,
      "line": 167,
      "jmpAddrLabel": "opAuxPUSHB2",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    PC + D - B                      :JMPN(opAuxPUSHB2)"
     },
     {
      "inB": "1",
      "inPC": "-1",
      "setD": 1,
      "line": 168,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B - PC => D"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 172,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inD": "1",
      "CONST": "-1",
      "setC": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1558,
      "useElseAddr": 1,
      "elseAddr": 1548,
      "line": 173,
      "jmpAddrLabel": "opAuxPUSHBend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    D - 1 => C                      :JMPN(opAuxPUSHBend)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1549,
      "line": 178,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setHASHPOS": 1,
      "offset": 39,
      "mOp": 1,
      "mWR": 0,
      "line": 180,
      "offsetLabel": "dataStarts",
      "useCTX": 1,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => HASHPOS                    :MLOAD(dataStarts)"
     },
     {
      "inHASHPOS": "1",
      "inPC": "1",
      "setHASHPOS": 1,
      "line": 182,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    HASHPOS + PC => HASHPOS"
     },
     {
      "inPC": "1",
      "CONST": "1",
      "setPC": 1,
      "line": 183,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    PC + 1 => PC"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 185,
      "offsetLabel": "batchHashDataId",
      "useCTX": 0,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => E                          :MLOAD(batchHashDataId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 186,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :HASHK1(E)"
     },
     {
      "inA": "1",
      "inB": "1",
      "setA": 1,
      "line": 188,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A + B => A"
     },
     {
      "inC": "1",
      "CONST": "-1",
      "setC": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1558,
      "useElseAddr": 1,
      "elseAddr": 1556,
      "line": 190,
      "jmpAddrLabel": "opAuxPUSHBend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    C - 1 => C                      :JMPN(opAuxPUSHBend)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "call": 1,
      "line": 191,
      "jmpAddrLabel": "SHLarith",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    1 => D                          :CALL(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1548,
      "line": 192,
      "jmpAddrLabel": "opAuxPUSHBloop",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "                                    :JMP(opAuxPUSHBloop)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1559,
      "line": 196,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS                  :JMPN(outOfGas)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 198,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++); [pushed_value(E) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 200,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP                       :JMPN(stackOverflow, readCode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 204,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B                          :MLOAD(txCalldataLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 207,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => CTX                        :MLOAD(originCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 209,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => E                          :MLOAD(argsOffsetCall)"
     },
     {
      "inE": "1",
      "inPC": "1",
      "setE": 1,
      "line": 211,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    E + PC => E"
     },
     {
      "inD": "1",
      "setC": 1,
      "line": 212,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    D => C"
     },
     {
      "inC": "1",
      "inB": "-1",
      "inPC": "1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1569,
      "useElseAddr": 1,
      "elseAddr": 1567,
      "line": 213,
      "jmpAddrLabel": "opAuxPUSHBcreate2",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    C - B + PC                      :JMPN(opAuxPUSHBcreate2)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 214,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inB": "1",
      "inPC": "-1",
      "setC": 1,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1572,
      "useElseAddr": 1,
      "elseAddr": 1569,
      "line": 215,
      "jmpAddrLabel": "opfinalPUSHBcreate",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B - PC => C                     :JMPZ(opfinalPUSHBcreate)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 219,
      "jmpAddrLabel": "MLOADX",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "                                    :CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
     },
     {
      "inPC": "1",
      "inD": "1",
      "setPC": 1,
      "line": 221,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    PC + D => PC"
     },
     {
      "CONST": "32",
      "inD": "-1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 223,
      "jmpAddrLabel": "SHRarith",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    32 - D => D                     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1558,
      "line": 227,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "jmpAddrLabel": "opAuxPUSHBend",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => CTX                        :MLOAD(currentCTX), JMP(opAuxPUSHBend)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1574,
      "line": 239,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1575,
      "line": 242,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 1                      :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1576,
      "line": 245,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 247,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1); [value => A]"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 250,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [duplicated_value(A) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 253,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1580,
      "line": 257,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1581,
      "line": 259,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 2                          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1582,
      "line": 261,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -2,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 263,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-2)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 264,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 265,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1586,
      "line": 269,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-3",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1587,
      "line": 271,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 3                          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1588,
      "line": 273,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -3,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 275,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-3)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 276,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 277,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1592,
      "line": 281,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-4",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1593,
      "line": 283,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 4                          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1594,
      "line": 285,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -4,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 287,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-4)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 288,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 289,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1598,
      "line": 293,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-5",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1599,
      "line": 295,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 5                          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1600,
      "line": 297,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -5,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 299,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-5)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 300,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 301,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1604,
      "line": 305,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-6",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1605,
      "line": 307,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 6                          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1606,
      "line": 309,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -6,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 311,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-6)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 312,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 313,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1610,
      "line": 317,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-7",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1611,
      "line": 319,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 7                          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1612,
      "line": 321,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -7,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 323,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-7)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 324,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 325,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1616,
      "line": 329,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-8",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1617,
      "line": 331,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 8                          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1618,
      "line": 333,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -8,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 335,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-8)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 336,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 337,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1622,
      "line": 341,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-9",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1623,
      "line": 343,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 9                          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1624,
      "line": 345,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -9,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 347,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-9)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 348,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 349,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1628,
      "line": 353,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-10",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1629,
      "line": 355,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 10                         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1630,
      "line": 357,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -10,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 359,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-10)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 360,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 361,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1634,
      "line": 365,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-11",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1635,
      "line": 367,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 11                         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1636,
      "line": 369,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -11,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 371,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-11)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 372,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 373,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1640,
      "line": 377,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-12",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1641,
      "line": 379,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 12                         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1642,
      "line": 381,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -12,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 383,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-12)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 384,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 385,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1646,
      "line": 389,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-13",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1647,
      "line": 391,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 13                         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1648,
      "line": 393,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -13,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 395,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-13)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 396,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 397,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1652,
      "line": 401,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-14",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1653,
      "line": 403,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 14                         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1654,
      "line": 405,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -14,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 407,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-14)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 408,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 409,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1658,
      "line": 413,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-15",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1659,
      "line": 415,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 15                         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1660,
      "line": 417,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -15,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 419,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-15)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 420,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 421,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1664,
      "line": 425,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100     :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-16",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1665,
      "line": 427,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 16                         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1666,
      "line": 429,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -16,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 431,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A                          :MLOAD(SP-16)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 432,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A                               :MSTORE(SP++)"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 433,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP           :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1670,
      "line": 445,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1671,
      "line": 448,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 2          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1672,
      "line": 451,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 454,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1); [value_to_swap_a => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -2,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 455,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-2); [value_to_swap_b => B]"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -2,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 457,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-2); [swapped_value_a => SP]"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 459,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode); [swapped_value_b => SP]"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1677,
      "line": 463,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-3",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1678,
      "line": 465,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 3          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1679,
      "line": 467,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 469,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -3,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 470,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-3)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -3,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 471,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-3)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 472,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1684,
      "line": 476,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-4",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1685,
      "line": 478,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 4          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1686,
      "line": 480,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 482,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -4,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 483,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-4)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -4,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 484,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-4)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 485,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1691,
      "line": 489,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-5",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1692,
      "line": 491,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 5          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1693,
      "line": 493,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 495,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -5,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 496,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-5)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -5,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 497,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-5)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 498,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1698,
      "line": 502,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-6",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1699,
      "line": 504,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 6          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1700,
      "line": 506,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 508,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -6,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 509,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-6)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -6,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 510,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-6)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 511,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1705,
      "line": 515,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-7",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1706,
      "line": 517,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 7          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1707,
      "line": 519,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 521,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -7,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 522,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-7)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -7,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 523,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-7)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 524,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1712,
      "line": 528,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-8",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1713,
      "line": 530,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 8          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1714,
      "line": 532,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 534,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -8,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 535,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-8)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -8,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 536,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-8)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 537,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1719,
      "line": 541,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-9",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1720,
      "line": 543,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 9          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1721,
      "line": 545,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 547,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -9,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 548,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-9)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -9,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 549,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-9)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 550,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1726,
      "line": 554,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-10",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1727,
      "line": 556,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 10         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1728,
      "line": 558,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 560,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -10,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 561,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-10)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -10,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 562,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-10)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 563,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1733,
      "line": 567,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-11",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1734,
      "line": 569,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 11         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1735,
      "line": 571,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 573,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -11,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 574,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-11)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -11,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 575,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-11)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 576,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1740,
      "line": 580,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-12",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1741,
      "line": 582,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 12         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1742,
      "line": 584,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 586,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -12,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 587,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-12)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -12,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 588,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-12)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 589,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1747,
      "line": 593,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-13",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1748,
      "line": 595,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 13         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1749,
      "line": 597,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 599,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -13,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 600,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-13)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -13,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 601,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-13)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 602,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1754,
      "line": 606,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-14",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1755,
      "line": 608,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 14         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1756,
      "line": 610,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 612,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -14,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 613,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-14)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -14,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 614,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-14)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 615,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1761,
      "line": 619,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-15",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1762,
      "line": 621,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 15         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1763,
      "line": 623,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 625,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -15,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 626,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-15)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -15,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 627,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-15)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 628,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1768,
      "line": 632,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-16",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1769,
      "line": 634,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 16         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1770,
      "line": 636,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 638,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -16,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 639,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-16)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -16,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 640,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-16)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 641,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1775,
      "line": 645,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-17",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1776,
      "line": 647,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 17         :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1777,
      "line": 649,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 651,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP-1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -17,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 652,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP-17)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -17,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 653,
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    A               :MSTORE(SP-17)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": -1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 654,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    B               :MSTORE(SP-1), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1782,
      "line": 666,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1783,
      "line": 669,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 672,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/stack-operations.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS    :JMPN(outOfGas, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1785,
      "line": 11,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1786,
      "line": 14,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1787,
      "line": 17,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 19,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP); [offset => E]"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 21,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E               :MSTORE(lastMemOffset)"
     },
     {
      "CONST": "32",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 24,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    32              :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "call": 1,
      "line": 26,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "                    :CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 27,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [value(A) => SP]"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1793,
      "line": 40,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "249036",
      "inCntMemAlign": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4666,
      "useElseAddr": 1,
      "elseAddr": 1794,
      "line": 41,
      "jmpAddrLabel": "outOfCountersMemalign",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1   :JMPN(outOfCountersMemalign)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1795,
      "line": 44,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    SP - 2 => SP          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1796,
      "line": 47,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 49,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP+1); [offset => E]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 50,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP); [value => B]"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 53,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E               :MSTORE(lastMemOffset)"
     },
     {
      "CONST": "32",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 55,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    32              :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "inB": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "line": 57,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    B               :MSTORE(bytesToStore)"
     },
     {
      "inE": "1",
      "setA": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "call": 1,
      "line": 58,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E => A          :CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "inE": "1",
      "offset": 45,
      "mOp": 1,
      "mWR": 1,
      "line": 60,
      "offsetLabel": "mstoreAux",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E               :MSTORE(mstoreAux)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 61,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 62,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => B          :MLOAD(MEM:E+1)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "memAlignWR_W0",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getMemValue",
         "module": "mem",
         "offset": 107,
         "offsetLabel": "bytesToStore"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 63,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    ${memAlignWR_W0(A,mem.bytesToStore,C)} => D                    ; no trust calculate W0"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "memAlignWR_W1",
       "params": [
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getMemValue",
         "module": "mem",
         "offset": 107,
         "offsetLabel": "bytesToStore"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "line": 64,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    ${memAlignWR_W1(B,mem.bytesToStore,C)} => E                    ; no trust calculate W1"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "memAlignRD": 0,
      "memAlignWR": 1,
      "memAlignWR8": 0,
      "offset": 107,
      "mOp": 1,
      "mWR": 0,
      "line": 65,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $               :MEM_ALIGN_WR,MLOAD(bytesToStore)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 66,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 45,
      "mOp": 1,
      "mWR": 0,
      "line": 67,
      "offsetLabel": "mstoreAux",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => E          :MLOAD(mstoreAux)"
     },
     {
      "inD": "1",
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 68,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    D               :MSTORE(MEM:E)          ; write W0"
     },
     {
      "inA": "1",
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 69,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    A               :MSTORE(MEM:E+1)        ; write W1"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 70,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "                    :JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1814,
      "line": 83,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "249036",
      "inCntMemAlign": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4666,
      "useElseAddr": 1,
      "elseAddr": 1815,
      "line": 84,
      "jmpAddrLabel": "outOfCountersMemalign",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN  - 1 :JMPN(outOfCountersMemalign)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1816,
      "line": 87,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    SP - 2 => SP          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1817,
      "line": 90,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 92,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP+1); [offset => B]"
     },
     {
      "inB": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 94,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    B               :MSTORE(lastMemOffset)"
     },
     {
      "CONST": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 96,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    1               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "inB": "1",
      "setA": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "call": 1,
      "line": 97,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    B => A          :CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 98,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP); [value => B]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 100,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "memAlignWR8_W0",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 101,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    ${memAlignWR8_W0(A,B,C)} => D  ; no trust calculate W0"
     },
     {
      "inB": "1",
      "memAlignRD": 0,
      "memAlignWR": 0,
      "memAlignWR8": 1,
      "line": 102,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    B               :MEM_ALIGN_WR8 ; only use LSB of B, rest of bytes could be non zero."
     },
     {
      "inD": "1",
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 104,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    D               :MSTORE(MEM:E), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1827,
      "line": 116,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1828,
      "line": 119,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS      :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 18,
      "mOp": 1,
      "mWR": 0,
      "line": 122,
      "offsetLabel": "memLength",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => E              :MLOAD(memLength)"
     },
     {
      "inE": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 125,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E               :MSTORE(arithA)"
     },
     {
      "CONST": "32",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "line": 126,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    32              :MSTORE(arithB)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 127,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "                    :CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 128,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => C          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 139,
      "mOp": 1,
      "mWR": 0,
      "line": 129,
      "offsetLabel": "arithRes2",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => B          :MLOAD(arithRes2)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 131,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1836,
      "line": 132,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1839,
      "useElseAddr": 1,
      "elseAddr": 1837,
      "line": 133,
      "jmpAddrLabel": "MSIZEend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $               :EQ, JMPC(MSIZEend)"
     },
     {
      "inC": "1",
      "CONST": "1",
      "setC": 1,
      "line": 135,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    C + 1 => C"
     },
     {
      "inC": "32",
      "setE": 1,
      "line": 136,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    C * 32 => E"
     },
     {
      "inE": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 139,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E               :MSTORE(SP++); [size(E) => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 141,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1842,
      "line": 153,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "265382",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 1843,
      "line": 154,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE :JMPN(outOfCountersPoseidon)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1844,
      "line": 157,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 159,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP); [key => C]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 161,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(storageAddr)"
     },
     {
      "CONST": "3",
      "setB": 1,
      "line": 163,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %SMT_KEY_SC_STORAGE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "sRD": 1,
      "line": 164,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "functionCall",
          "funcName": "onUpdateStorage",
          "params": [
           {
            "op": "getReg",
            "regName": "C"
           },
           {
            "op": "getReg",
            "regName": "E"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => E          :SLOAD"
     },
     {
      "inE": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3629,
      "call": 1,
      "line": 167,
      "jmpAddrLabel": "isColdSlot",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E               :MSTORE(SP++), CALL(isColdSlot); [value(E) => SP]"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "inA": "-2000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 169,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %SLOAD_GAS - A * %COLD_SLOAD_COST_REDUCED => GAS    :JMPN(outOfGas, readCode)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1851,
      "line": 184,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498064",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1852,
      "line": 185,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 10 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "264868",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 1853,
      "line": 186,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*3 :JMPN(outOfCountersPoseidon)"
     },
     {
      "inSP": "1",
      "CONST": "-2",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1854,
      "line": 189,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    SP - 2  => SP        :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-2301",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1855,
      "line": 191,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %SSTORE_ENTRY_EIP_2200_GAS - 1  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1856,
      "useElseAddr": 1,
      "elseAddr": 4676,
      "line": 193,
      "offsetLabel": "isStaticCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidStaticTx",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(isStaticCall), JMPNZ(invalidStaticTx)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 195,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP+1) ; [key => C]"
     },
     {
      "inC": "1",
      "offset": 46,
      "mOp": 1,
      "mWR": 1,
      "line": 196,
      "offsetLabel": "tmpVarCsstore",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    C               :MSTORE(tmpVarCsstore)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 197,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP) ; [value => D]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1860,
      "useElseAddr": 1,
      "elseAddr": 1861,
      "line": 199,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "deploymentSSTORE",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(deploymentSSTORE)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1862,
      "line": 201,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "jmpAddrLabel": "opSSTOREinit",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(storageAddr), JMP(opSSTOREinit)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 205,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(createContractAddress)"
     },
     {
      "CONST": "3",
      "setB": 1,
      "line": 209,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %SMT_KEY_SC_STORAGE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "sRD": 1,
      "line": 210,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => E          :SLOAD"
     },
     {
      "inSR": "1",
      "offset": 39,
      "mOp": 1,
      "mWR": 1,
      "line": 212,
      "offsetLabel": "auxSR",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    SR              :MSTORE(auxSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "line": 213,
      "offsetLabel": "originSR",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => SR         :MLOAD(originSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "line": 214,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => B          :SLOAD ; origin value"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 39,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3629,
      "call": 1,
      "line": 216,
      "offsetLabel": "auxSR",
      "useCTX": 0,
      "jmpAddrLabel": "isColdSlot",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => SR         :MLOAD(auxSR), CALL(isColdSlot)"
     },
     {
      "inB": "1",
      "setC": 1,
      "line": 217,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    B => C           ; origin value"
     },
     {
      "inGAS": "1",
      "inA": "-2100",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1870,
      "line": 219,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - A*%COLD_SLOAD_COST => GAS    :JMPN(outOfGas)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 220,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E => A"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 221,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    D => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1873,
      "useElseAddr": 1,
      "elseAddr": 1874,
      "line": 222,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opSSTOREdif",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdif)"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1911,
      "line": 225,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "opSSTOREend",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %SSTORE_DYNAMIC_GAS => GAS:JMPN(outOfGas, opSSTOREend)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 229,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    C => A"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 230,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1877,
      "useElseAddr": 1,
      "elseAddr": 1881,
      "line": 231,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opSSTOREdifA",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifA)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 233,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 234,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    C => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1880,
      "useElseAddr": 1,
      "elseAddr": 1904,
      "line": 235,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opSSTOREdifB",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifB)"
     },
     {
      "inGAS": "1",
      "CONST": "-20000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1911,
      "line": 238,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "opSSTOREend",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %SSTORE_SET_GAS => GAS    :JMPN(outOfGas, opSSTOREend)"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1882,
      "line": 242,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %SSTORE_DYNAMIC_GAS => GAS:JMPN(outOfGas)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 243,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 244,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    C => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1885,
      "useElseAddr": 1,
      "elseAddr": 1892,
      "line": 245,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opSSTOREdifA1",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifA1)"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 250,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    D => A"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 251,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    C => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1888,
      "useElseAddr": 1,
      "elseAddr": 1911,
      "line": 252,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opSSTOREend",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREend)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 254,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1890,
      "useElseAddr": 1,
      "elseAddr": 1902,
      "line": 255,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opSSTOREdifA2",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifA2)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 257,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(gasRefund)"
     },
     {
      "inA": "1",
      "CONST": "19900",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1911,
      "line": 258,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "jmpAddrLabel": "opSSTOREend",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    A + %SSTORE_SET_GAS_REDUCED => A  :MSTORE(gasRefund), JMP(opSSTOREend)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 262,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 263,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    E => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1895,
      "useElseAddr": 1,
      "elseAddr": 1897,
      "line": 264,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opSSTOREdifA12",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifA12)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 267,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(gasRefund)"
     },
     {
      "inA": "1",
      "CONST": "-15000",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1885,
      "line": 268,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "jmpAddrLabel": "opSSTOREdifAB",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    A - %SSTORE_CLEARS_SCHEDULE => A  :MSTORE(gasRefund), JMP(opSSTOREdifAB)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 271,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 272,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    D => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1900,
      "useElseAddr": 1,
      "elseAddr": 1885,
      "line": 273,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opSSTOREdifAB",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREdifAB)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 276,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(gasRefund)"
     },
     {
      "inA": "1",
      "CONST": "15000",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1885,
      "line": 277,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "jmpAddrLabel": "opSSTOREdifAB",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    A + %SSTORE_CLEARS_SCHEDULE => A  :MSTORE(gasRefund), JMP(opSSTOREdifAB)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 282,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(gasRefund)"
     },
     {
      "inA": "1",
      "CONST": "2800",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1911,
      "line": 283,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "jmpAddrLabel": "opSSTOREend",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    A + %SSTORE_RESET_GAS_REDUCED => A   :MSTORE(gasRefund), JMP(opSSTOREend)"
     },
     {
      "inGAS": "1",
      "CONST": "-2900",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1905,
      "line": 288,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    GAS - %SSTORE_RESET_GAS => GAS    :JMPN(outOfGas)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 289,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 290,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    D => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1908,
      "useElseAddr": 1,
      "elseAddr": 1911,
      "line": 291,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opSSTOREend",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :EQ, JMPNC(opSSTOREend)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 294,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(gasRefund)"
     },
     {
      "inA": "1",
      "CONST": "15000",
      "setA": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 295,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    A + %SSTORE_CLEARS_SCHEDULE => A  :MSTORE(gasRefund)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1911,
      "line": 296,
      "jmpAddrLabel": "opSSTOREend",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "                    :JMP(opSSTOREend)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1912,
      "useElseAddr": 1,
      "elseAddr": 1913,
      "line": 299,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "mloadContract",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(mloadContract)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1914,
      "line": 300,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "jmpAddrLabel": "opSSTOREsr",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(storageAddr), JMP(opSSTOREsr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 304,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => A          :MLOAD(createContractAddress)"
     },
     {
      "CONST": "3",
      "setB": 1,
      "line": 308,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    %SMT_KEY_SC_STORAGE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 46,
      "mOp": 1,
      "mWR": 0,
      "line": 309,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "functionCall",
          "funcName": "onUpdateStorage",
          "params": [
           {
            "op": "getReg",
            "regName": "C"
           },
           {
            "op": "getReg",
            "regName": "D"
           }
          ]
         }
        ]
       }
      ],
      "offsetLabel": "tmpVarCsstore",
      "useCTX": 0,
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCsstore); key => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 311,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/storage-memory.zkasm",
      "lineStr": "    $ => SR         :SSTORE, JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1918,
      "line": 13,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1919,
      "line": 14,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249036",
      "inCntMemAlign": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4666,
      "useElseAddr": 1,
      "elseAddr": 1920,
      "line": 15,
      "jmpAddrLabel": "outOfCountersMemalign",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1   :JMPN(outOfCountersMemalign)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1921,
      "line": 18,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1922,
      "line": 20,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 21,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP); [offset => A]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 22,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(txCalldataLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1925,
      "useElseAddr": 1,
      "elseAddr": 1937,
      "line": 24,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "CALLDATALOADreturn0",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :LT,JMPNC(CALLDATALOADreturn0)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "call": 1,
      "line": 25,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "inSP": "1",
      "setD": 1,
      "line": 27,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    SP => D"
     },
     {
      "CONST": "1024",
      "inE": "1",
      "setSP": 1,
      "line": 29,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %CALLDATA_OFFSET + E => SP"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1929,
      "useElseAddr": 1,
      "elseAddr": 1932,
      "line": 30,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opCALLDATALOAD2",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :JMPNZ(opCALLDATALOAD2) ; data not aligned"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 31,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP); [stack => B]"
     },
     {
      "inD": "1",
      "setSP": 1,
      "line": 33,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D => SP"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 34,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B               :MSTORE(SP++), JMP(readCode); [data(offset) => SP]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 37,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP++)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 41,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "memAlignRD": 1,
      "memAlignWR": 0,
      "memAlignWR8": 0,
      "line": 42,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MEM_ALIGN_RD"
     },
     {
      "inD": "1",
      "setSP": 1,
      "line": 44,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D => SP"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 45,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A           :MSTORE(SP++), JMP(readCode); [data(offset) => SP]"
     },
     {
      "CONST": "0",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 48,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0               :MSTORE(SP++), JMP(readCode); [0 => SP]"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1939,
      "line": 60,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1940,
      "line": 62,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1941,
      "useElseAddr": 1,
      "elseAddr": 1944,
      "line": 64,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opCALLDATASIZEdep",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(opCALLDATASIZEdep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 65,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(txCalldataLen)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 66,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B               :MSTORE(SP++); [size => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 68,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "0",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 71,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0               :MSTORE(SP++); [0 => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 73,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1947,
      "line": 90,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 1948,
      "line": 91,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249035",
      "inCntMemAlign": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4666,
      "useElseAddr": 1,
      "elseAddr": 1949,
      "line": 92,
      "jmpAddrLabel": "outOfCountersMemalign",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 2   :JMPN(outOfCountersMemalign)"
     },
     {
      "inSP": "1",
      "CONST": "-3",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 1950,
      "line": 94,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    SP - 3 => SP    :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 2,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 95,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP+2); [destOffset => E]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 96,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP+1); [offset => B]"
     },
     {
      "inB": "1",
      "offset": 49,
      "mOp": 1,
      "mWR": 1,
      "line": 97,
      "offsetLabel": "auxOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B               :MSTORE(auxOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 98,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
     },
     {
      "inC": "1",
      "offset": 50,
      "mOp": 1,
      "mWR": 1,
      "line": 99,
      "offsetLabel": "numLastBytes",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :MSTORE(numLastBytes)"
     },
     {
      "inE": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 101,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E               :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 103,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1958,
      "line": 105,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "inC": "1",
      "CONST": "31",
      "setA": 1,
      "line": 108,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C+31 => A"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "call": 1,
      "line": 109,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                        :CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "inGAS": "1",
      "inE": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 1961,
      "line": 110,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - 3*E => GAS    :JMPN(outOfGas)"
     },
     {
      "inSP": "1",
      "offset": 38,
      "mOp": 1,
      "mWR": 1,
      "line": 112,
      "offsetLabel": "SPw",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    SP              :MSTORE(SPw)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 114,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 116,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => C          :MLOAD(lastMemLength)"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 117,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 118,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(txCalldataLen); less than 2**32 bytes (calldata). Enforced by memory expansion gas cost & smart contract batchL2DataHash"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1967,
      "useElseAddr": 1,
      "elseAddr": 2022,
      "line": 120,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opCALLDATACOPY0",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :LT,JMPNC(opCALLDATACOPY0)"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 121,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 49,
      "mOp": 1,
      "mWR": 0,
      "line": 122,
      "offsetLabel": "auxOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(auxOffset)"
     },
     {
      "inB": "1",
      "inC": "1",
      "setB": 1,
      "line": 123,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B + C => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1972,
      "useElseAddr": 1,
      "elseAddr": 1971,
      "line": 125,
      "jmpAddrLabel": "opCALLDATACOPYX0",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :LT,JMPC(opCALLDATACOPYX0)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 49,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1975,
      "line": 126,
      "offsetLabel": "auxOffset",
      "useCTX": 0,
      "jmpAddrLabel": "opCALLDATACOPYloop",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(auxOffset),JMP(opCALLDATACOPYloop)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 129,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => C          :MLOAD(txCalldataLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 49,
      "mOp": 1,
      "mWR": 0,
      "line": 130,
      "offsetLabel": "auxOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(auxOffset)"
     },
     {
      "inC": "1",
      "inB": "-1",
      "setC": 1,
      "offset": 50,
      "mOp": 1,
      "mWR": 1,
      "line": 131,
      "offsetLabel": "numLastBytes",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C - B => C      :MSTORE(numLastBytes)"
     },
     {
      "CONST": "7968688",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 1976,
      "line": 135,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 300 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2031,
      "useElseAddr": 1,
      "elseAddr": 1977,
      "line": 137,
      "jmpAddrLabel": "opCALLDATACOPYcheckLen",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :JMPZ(opCALLDATACOPYcheckLen)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2004,
      "useElseAddr": 1,
      "elseAddr": 1978,
      "line": 139,
      "jmpAddrLabel": "opCALLDATACOPYfinal",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C - 32          :JMPN(opCALLDATACOPYfinal)"
     },
     {
      "inB": "1",
      "setA": 1,
      "offset": 48,
      "mOp": 1,
      "mWR": 1,
      "line": 140,
      "offsetLabel": "calldataOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => A          :MSTORE(calldataOffset)"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 141,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => B"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "call": 1,
      "line": 142,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "CONST": "1024",
      "inE": "1",
      "setSP": 1,
      "line": 145,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %CALLDATA_OFFSET + E => SP"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 146,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 147,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP++)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 148,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "memAlignRD": 1,
      "memAlignWR": 0,
      "memAlignWR8": 0,
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "line": 149,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MEM_ALIGN_RD, MSTORE(bytesToStore)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 150,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => A"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "call": 1,
      "line": 152,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "inE": "1",
      "offset": 47,
      "mOp": 1,
      "mWR": 1,
      "line": 153,
      "offsetLabel": "auxDestOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E               :MSTORE(auxDestOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 154,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 155,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(MEM:E+1)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "memAlignWR_W0",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getMemValue",
         "module": "mem",
         "offset": 107,
         "offsetLabel": "bytesToStore"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 156,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    ${memAlignWR_W0(A,mem.bytesToStore,C)} => D                    ; no trust calculate W0"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "memAlignWR_W1",
       "params": [
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getMemValue",
         "module": "mem",
         "offset": 107,
         "offsetLabel": "bytesToStore"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "line": 157,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    ${memAlignWR_W1(B,mem.bytesToStore,C)} => E                    ; no trust calculate W1"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "memAlignRD": 0,
      "memAlignWR": 1,
      "memAlignWR8": 0,
      "offset": 107,
      "mOp": 1,
      "mWR": 0,
      "line": 158,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :MEM_ALIGN_WR,MLOAD(bytesToStore)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 159,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 47,
      "mOp": 1,
      "mWR": 0,
      "line": 160,
      "offsetLabel": "auxDestOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(auxDestOffset)"
     },
     {
      "inD": "1",
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 161,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D               :MSTORE(MEM:E)          ; write W0"
     },
     {
      "inA": "1",
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 162,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(MEM:E+1)        ; write W1"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 50,
      "mOp": 1,
      "mWR": 0,
      "line": 164,
      "offsetLabel": "numLastBytes",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => C          :MLOAD(numLastBytes)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "offset": 50,
      "mOp": 1,
      "mWR": 1,
      "line": 165,
      "offsetLabel": "numLastBytes",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C - 32 => C     :MSTORE(numLastBytes)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 166,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(lastMemOffset)"
     },
     {
      "inE": "1",
      "CONST": "32",
      "setE": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 167,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E + 32 => E     :MSTORE(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 48,
      "mOp": 1,
      "mWR": 0,
      "line": 168,
      "offsetLabel": "calldataOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(calldataOffset)"
     },
     {
      "inB": "1",
      "CONST": "32",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1975,
      "line": 169,
      "jmpAddrLabel": "opCALLDATACOPYloop",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B + 32 => B     :JMP(opCALLDATACOPYloop)"
     },
     {
      "inC": "1",
      "offset": 50,
      "mOp": 1,
      "mWR": 1,
      "line": 173,
      "offsetLabel": "numLastBytes",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :MSTORE(numLastBytes)"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 174,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => A"
     },
     {
      "inE": "1",
      "setD": 1,
      "line": 175,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => D"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "call": 1,
      "line": 176,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "CONST": "1024",
      "inE": "1",
      "setSP": 1,
      "line": 179,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %CALLDATA_OFFSET + E => SP"
     },
     {
      "inD": "1",
      "setE": 1,
      "line": 180,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D => E"
     },
     {
      "inC": "1",
      "setD": 1,
      "line": 181,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "call": 1,
      "line": 182,
      "jmpAddrLabel": "SHLarith",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP++), CALL(SHLarith); [calldata => A]; in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 50,
      "mOp": 1,
      "mWR": 0,
      "line": 184,
      "offsetLabel": "numLastBytes",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => C          :MLOAD(numLastBytes); [size => C]"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "inD": "1",
      "setD": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2028,
      "useElseAddr": 1,
      "elseAddr": 2014,
      "line": 186,
      "jmpAddrLabel": "opCALLDATACOPYxor",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C - 32 + D => D :JMPN(opCALLDATACOPYxor)"
     },
     {
      "inD": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2028,
      "useElseAddr": 1,
      "elseAddr": 2015,
      "line": 187,
      "jmpAddrLabel": "opCALLDATACOPYxor",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D               :JMPZ(opCALLDATACOPYxor)"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 188,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 189,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP); [calldata => C]"
     },
     {
      "CONST": "32",
      "inD": "-1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 190,
      "jmpAddrLabel": "SHRarith",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    32 - D => D     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "call": 1,
      "line": 191,
      "jmpAddrLabel": "SHLarith",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    32 - C => D     :CALL(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "inB": "1",
      "inA": "1",
      "setA": 1,
      "line": 192,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B + A => A"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4278,
      "call": 1,
      "line": 194,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTOREX",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2031,
      "line": 195,
      "jmpAddrLabel": "opCALLDATACOPYcheckLen",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :JMP(opCALLDATACOPYcheckLen)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2035,
      "useElseAddr": 1,
      "elseAddr": 2023,
      "line": 198,
      "jmpAddrLabel": "opCALLDATACOPYend",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :JMPZ(opCALLDATACOPYend)"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2026,
      "useElseAddr": 1,
      "elseAddr": 2024,
      "line": 199,
      "jmpAddrLabel": "opCALLDATACOPY320",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    32 - C          :JMPN(opCALLDATACOPY320)"
     },
     {
      "CONST": "0",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4278,
      "call": 1,
      "line": 201,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTOREX",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2035,
      "line": 202,
      "jmpAddrLabel": "opCALLDATACOPYend",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :JMP(opCALLDATACOPYend)"
     },
     {
      "CONST": "0",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4283,
      "call": 1,
      "line": 206,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTORE32",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2022,
      "line": 207,
      "jmpAddrLabel": "opCALLDATACOPY0",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C - 32 => C     :JMP(opCALLDATACOPY0)"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 211,
      "jmpAddrLabel": "SHRarith",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    32 - C => D     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "call": 1,
      "line": 212,
      "jmpAddrLabel": "SHLarith",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4278,
      "call": 1,
      "line": 214,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTOREX",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 218,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => C          :MLOAD(lastMemLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 219,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(txCalldataLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 49,
      "mOp": 1,
      "mWR": 0,
      "line": 220,
      "offsetLabel": "auxOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(auxOffset)"
     },
     {
      "inC": "1",
      "inA": "-1",
      "inB": "1",
      "setC": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2035,
      "useElseAddr": 1,
      "elseAddr": 2022,
      "line": 221,
      "jmpAddrLabel": "opCALLDATACOPYend",
      "elseAddrLabel": "opCALLDATACOPY0",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C - A + B => C  :JMPN(opCALLDATACOPYend, opCALLDATACOPY0)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 226,
      "offsetLabel": "SPw",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => SP         :MLOAD(SPw), JMP(readCode)"
     },
     {
      "CONST": "265382",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 2037,
      "line": 239,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "7968958",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2038,
      "line": 240,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 30 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2039,
      "line": 242,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS-%GAS_QUICK_STEP => GAS    :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2040,
      "useElseAddr": 1,
      "elseAddr": 2046,
      "line": 244,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opCODESIZEdep",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(opCODESIZEdep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 246,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(txDestAddr)"
     },
     {
      "CONST": "4",
      "setB": 1,
      "line": 248,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %SMT_KEY_SC_LENGTH => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 249,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 250,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :SLOAD"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 251,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [size => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 253,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 256,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(txCalldataLen)"
     },
     {
      "inB": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 257,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B               :MSTORE(SP++); [size => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 259,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2050,
      "line": 280,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2051,
      "useElseAddr": 1,
      "elseAddr": 1946,
      "line": 282,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "opCALLDATACOPY",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(isCreateContract), JMPNZ(opCALLDATACOPY)"
     },
     {
      "inSP": "1",
      "CONST": "-3",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 2052,
      "line": 284,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    SP - 3 => SP          :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 2,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 285,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP+2); [destOffset => C]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 286,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP+1); [offset => D]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 287,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP); [size => E]"
     },
     {
      "inC": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 289,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :MSTORE(lastMemOffset)"
     },
     {
      "inE": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 292,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2058,
      "line": 294,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "inE": "1",
      "CONST": "31",
      "setA": 1,
      "line": 296,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E+31 => A"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 298,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(arithA)"
     },
     {
      "CONST": "32",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 299,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 300,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "CONST": "3",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 303,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    3               :MSTORE(arithA)"
     },
     {
      "inA": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 304,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 305,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2066,
      "line": 307,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - A => GAS  :JMPN(outOfGas)"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 311,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 312,
      "offsetLabel": "bytecodeLength",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(bytecodeLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2070,
      "useElseAddr": 1,
      "elseAddr": 2069,
      "line": 313,
      "jmpAddrLabel": "opCODECOPY2",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :LT, JMPC(opCODECOPY2)"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 314,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => A"
     },
     {
      "inA": "1",
      "setHASHPOS": 1,
      "line": 318,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 29,
      "mOp": 1,
      "mWR": 0,
      "line": 319,
      "offsetLabel": "contractHashId",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => D          :MLOAD(contractHashId)"
     },
     {
      "inD": "1",
      "offset": 54,
      "mOp": 1,
      "mWR": 1,
      "line": 321,
      "offsetLabel": "codecopyHashId",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D               :MSTORE(codecopyHashId)"
     },
     {
      "inB": "1",
      "offset": 55,
      "mOp": 1,
      "mWR": 1,
      "line": 323,
      "offsetLabel": "codecopyBytecodeLength",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B               :MSTORE(codecopyBytecodeLength)"
     },
     {
      "inC": "1",
      "offset": 51,
      "mOp": 1,
      "mWR": 1,
      "line": 324,
      "offsetLabel": "memOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :MSTORE(memOffset)"
     },
     {
      "inE": "1",
      "offset": 52,
      "mOp": 1,
      "mWR": 1,
      "line": 325,
      "offsetLabel": "remainingBytes",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E               :MSTORE(remainingBytes)"
     },
     {
      "CONST": "249037",
      "inCntMemAlign": "-1",
      "inE": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4666,
      "useElseAddr": 1,
      "elseAddr": 2077,
      "line": 329,
      "jmpAddrLabel": "outOfCountersMemalign",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN  - E     :JMPN(outOfCountersMemalign)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2078,
      "line": 332,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100                 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 2079,
      "line": 333,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2            :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 52,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "useElseAddr": 1,
      "elseAddr": 2080,
      "line": 335,
      "offsetLabel": "remainingBytes",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(remainingBytes), JMPZ(readCode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 51,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "call": 1,
      "line": 336,
      "offsetLabel": "memOffset",
      "useCTX": 0,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(memOffset), CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "inE": "1",
      "offset": 56,
      "mOp": 1,
      "mWR": 1,
      "line": 337,
      "offsetLabel": "memInteger",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E               :MSTORE(memInteger)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 339,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E)"
     },
     {
      "inA": "1",
      "offset": 53,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2095,
      "call": 1,
      "line": 340,
      "offsetLabel": "previousValue",
      "useCTX": 0,
      "jmpAddrLabel": "opCODECOPYLoadBytes",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(previousValue), CALL(opCODECOPYLoadBytes); in:[codecopyBytecodeLength, codecopyHashId] out: [B: readByte]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 53,
      "mOp": 1,
      "mWR": 0,
      "line": 341,
      "offsetLabel": "previousValue",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(previousValue)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "memAlignWR8_W0",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 342,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    ${memAlignWR8_W0(A,B,C)} => D  ; no trust calculate W0"
     },
     {
      "inB": "1",
      "memAlignRD": 0,
      "memAlignWR": 0,
      "memAlignWR8": 1,
      "line": 343,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B               :MEM_ALIGN_WR8 ; only use LSB of B, rest of bytes could be non zero"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 56,
      "mOp": 1,
      "mWR": 0,
      "line": 344,
      "offsetLabel": "memInteger",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(memInteger)"
     },
     {
      "inD": "1",
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 345,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D               :MSTORE(MEM:E) ; write W0"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 52,
      "mOp": 1,
      "mWR": 0,
      "line": 347,
      "offsetLabel": "remainingBytes",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(remainingBytes)"
     },
     {
      "inB": "1",
      "CONST": "-1",
      "setB": 1,
      "line": 348,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B - 1 => B  ; decrease 1 byte from length"
     },
     {
      "inB": "1",
      "offset": 52,
      "mOp": 1,
      "mWR": 1,
      "line": 349,
      "offsetLabel": "remainingBytes",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B               :MSTORE(remainingBytes)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 51,
      "mOp": 1,
      "mWR": 0,
      "line": 350,
      "offsetLabel": "memOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(memOffset)"
     },
     {
      "inA": "1",
      "CONST": "1",
      "setA": 1,
      "line": 351,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A + 1 => A  ; increment offset to write the next byte"
     },
     {
      "inA": "1",
      "offset": 51,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2077,
      "line": 352,
      "offsetLabel": "memOffset",
      "useCTX": 0,
      "jmpAddrLabel": "opCODECOPYloop",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(memOffset), JMP(opCODECOPYloop)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 357,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 55,
      "mOp": 1,
      "mWR": 0,
      "line": 358,
      "offsetLabel": "codecopyBytecodeLength",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(codecopyBytecodeLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2100,
      "useElseAddr": 1,
      "elseAddr": 2098,
      "line": 359,
      "jmpAddrLabel": "readZero",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :EQ, JMPC(readZero)"
     },
     {
      "inHASHPOS": "1",
      "setA": 1,
      "line": 360,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    HASHPOS => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2101,
      "useElseAddr": 1,
      "elseAddr": 2100,
      "line": 361,
      "jmpAddrLabel": "readValueBytecode",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :LT, JMPC(readValueBytecode)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 363,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => B          :RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 54,
      "mOp": 1,
      "mWR": 0,
      "line": 365,
      "offsetLabel": "codecopyHashId",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(codecopyHashId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP1": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 367,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :HASHP1(E), RETURN"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2104,
      "line": 380,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "265382",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 2105,
      "line": 381,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE :JMPN(outOfCountersPoseidon)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 2106,
      "line": 383,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 384,
      "jmpAddrLabel": "maskAddress",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 385,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "inD": "-2500",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2109,
      "line": 387,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_REDUCED => GAS    :JMPN(outOfGas)"
     },
     {
      "CONST": "4",
      "setB": 1,
      "line": 389,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %SMT_KEY_SC_LENGTH => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 390,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 391,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :SLOAD"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 392,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [size => SP]"
     },
     {
      "CONST": "7968688",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2114,
      "line": 413,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 300         :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 2115,
      "line": 414,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1    :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-4",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 2116,
      "line": 417,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    SP - 4 => SP    :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 3,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 418,
      "jmpAddrLabel": "maskAddress",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP+3), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 419,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "inD": "-2500",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2119,
      "line": 422,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_REDUCED => GAS            :JMPN(outOfGas)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2144,
      "call": 1,
      "line": 423,
      "jmpAddrLabel": "opEXTCODECOPYLoadBytecode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(opEXTCODECOPYLoadBytecode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 2,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 424,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP+2); [destOffset => C]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 425,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP+1); [offset => D]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 426,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP); [size => E]"
     },
     {
      "inC": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 429,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :MSTORE(lastMemOffset)"
     },
     {
      "inE": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 433,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "inE": "1",
      "CONST": "31",
      "setA": 1,
      "line": 437,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E+31 => A"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 439,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(arithA)"
     },
     {
      "CONST": "32",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "line": 440,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    32              :MSTORE(arithB)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 441,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 442,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "CONST": "3",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 445,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    3               :MSTORE(arithA)"
     },
     {
      "inA": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 446,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 447,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2134,
      "line": 449,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - A => GAS  :JMPN(outOfGas)"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 451,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 58,
      "mOp": 1,
      "mWR": 0,
      "line": 452,
      "offsetLabel": "tmpContractLength",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpContractLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2138,
      "useElseAddr": 1,
      "elseAddr": 2137,
      "line": 453,
      "jmpAddrLabel": "opEXTCODECOPY2",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :LT, JMPC(opEXTCODECOPY2)"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 454,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => A"
     },
     {
      "inA": "1",
      "setHASHPOS": 1,
      "line": 458,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 57,
      "mOp": 1,
      "mWR": 0,
      "line": 459,
      "offsetLabel": "tmpContractHashId",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpContractHashId)"
     },
     {
      "inD": "1",
      "offset": 54,
      "mOp": 1,
      "mWR": 1,
      "line": 460,
      "offsetLabel": "codecopyHashId",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D               :MSTORE(codecopyHashId) ; set hashId to get bytes from"
     },
     {
      "inB": "1",
      "offset": 55,
      "mOp": 1,
      "mWR": 1,
      "line": 461,
      "offsetLabel": "codecopyBytecodeLength",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B               :MSTORE(codecopyBytecodeLength) ; set contract bytecode length"
     },
     {
      "inC": "1",
      "offset": 51,
      "mOp": 1,
      "mWR": 1,
      "line": 462,
      "offsetLabel": "memOffset",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :MSTORE(memOffset)"
     },
     {
      "inE": "1",
      "offset": 52,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2076,
      "line": 463,
      "offsetLabel": "remainingBytes",
      "useCTX": 0,
      "jmpAddrLabel": "opCODECOPYloopInit",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E               :MSTORE(remainingBytes), JMP(opCODECOPYloopInit)"
     },
     {
      "CONST": "265382",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 2145,
      "line": 467,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "4",
      "setB": 1,
      "line": 469,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %SMT_KEY_SC_LENGTH => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 470,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "sRD": 1,
      "line": 471,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => D                          :SLOAD"
     },
     {
      "inD": "1",
      "offset": 58,
      "mOp": 1,
      "mWR": 1,
      "line": 472,
      "offsetLabel": "tmpContractLength",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D                               :MSTORE(tmpContractLength)"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 474,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A => E"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 475,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 476,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2168,
      "useElseAddr": 1,
      "elseAddr": 2153,
      "line": 477,
      "jmpAddrLabel": "opEXTCODECOPYCheckHashEnd",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $                               :EQ, JMPC(opEXTCODECOPYCheckHashEnd)"
     },
     {
      "inRR": "1",
      "offset": 59,
      "mOp": 1,
      "mWR": 1,
      "line": 481,
      "offsetLabel": "tmpZkPCext",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    RR                                                  :MSTORE(tmpZkPCext)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 482,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B + 1                                               :MSTORE(arithA)"
     },
     {
      "CONST": "56",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 483,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    56                                                  :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 59,
      "mOp": 1,
      "mWR": 0,
      "line": 484,
      "offsetLabel": "tmpZkPCext",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => RR                                             :MLOAD(tmpZkPCext)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 485,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B                                              :MLOAD(arithRes1)"
     },
     {
      "CONST": "265381",
      "inCntPoseidonG": "-1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 2159,
      "line": 486,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE - 1 - B  :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "149795",
      "inCntPaddingPG": "-1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4668,
      "useElseAddr": 1,
      "elseAddr": 2160,
      "line": 487,
      "jmpAddrLabel": "outOfCountersPadding",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_PADDING_PG_LIMIT - CNT_PADDING_PG - 1 - B  :JMPN(outOfCountersPadding)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 490,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => A"
     },
     {
      "CONST": "2",
      "setB": 1,
      "line": 491,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %SMT_KEY_SC_CODE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 492,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 493,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :SLOAD"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 17,
      "mOp": 1,
      "mWR": 0,
      "line": 496,
      "offsetLabel": "nextHashPId",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E                          :MLOAD(nextHashPId)"
     },
     {
      "inE": "1",
      "offset": 57,
      "mOp": 1,
      "mWR": 1,
      "line": 497,
      "offsetLabel": "tmpContractHashId",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E                               :MSTORE(tmpContractHashId)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 498,
      "offsetLabel": "nextHashPId",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E + 1                           :MSTORE(nextHashPId)"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashPDigest": 1,
      "line": 501,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A                               :HASHPDIGEST(E)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 503,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                                    :RETURN"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 2170,
      "line": 516,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2171,
      "line": 517,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inGAS": "1",
      "CONST": "-2",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2172,
      "line": 520,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - %GAS_QUICK_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "line": 522,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(retDataCTX)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 524,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2178,
      "useElseAddr": 1,
      "elseAddr": 2175,
      "line": 525,
      "jmpAddrLabel": "endOpRETURNDATASIZE",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :EQ, JMPC(endOpRETURNDATASIZE)"
     },
     {
      "inB": "1",
      "setCTX": 1,
      "line": 526,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => CTX"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "line": 527,
      "offsetLabel": "retDataLength",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(retDataLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 529,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 532,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(SP++); [size => SP]"
     },
     {
      "CONST": "1024",
      "inSP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4674,
      "useElseAddr": 1,
      "elseAddr": 4141,
      "line": 534,
      "jmpAddrLabel": "stackOverflow",
      "elseAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %CALLDATA_OFFSET - SP       :JMPN(stackOverflow, readCode)"
     },
     {
      "CONST": "7968588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2181,
      "line": 547,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 400 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 2182,
      "line": 548,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2          :JMPN(outOfCountersBinary)"
     },
     {
      "inSP": "1",
      "CONST": "-3",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 2183,
      "line": 550,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    SP - 3 => SP          :JMPN(stackUnderflow)"
     },
     {
      "inGAS": "1",
      "CONST": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2184,
      "line": 552,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - %GAS_FASTEST_STEP => GAS  :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 2,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 554,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => D          :MLOAD(SP+2); [destOffset => D]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 555,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(SP+1); [offset => E]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 556,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => C          :MLOAD(SP); [size => C]"
     },
     {
      "inD": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 558,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D               :MSTORE(lastMemOffset)"
     },
     {
      "inC": "1",
      "offset": 19,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4461,
      "call": 1,
      "line": 560,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "jmpAddrLabel": "saveMem",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :MSTORE(lastMemLength), CALL(saveMem); in: [lastMemOffset, lastMemLength]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "line": 562,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :MLOAD(retDataCTX)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 563,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2227,
      "useElseAddr": 1,
      "elseAddr": 2192,
      "line": 564,
      "jmpAddrLabel": "opRETURNDATACOPYEmpty",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :EQ, JMPC(opRETURNDATACOPYEmpty)"
     },
     {
      "inB": "1",
      "setCTX": 1,
      "line": 567,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => CTX"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 568,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "line": 570,
      "offsetLabel": "retDataLength",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(retDataLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 24,
      "mOp": 1,
      "mWR": 0,
      "line": 571,
      "offsetLabel": "retDataOffset",
      "useCTX": 1,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => E          :MLOAD(retDataOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 572,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2198,
      "line": 575,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :LT, JMPC(outOfGas)"
     },
     {
      "inA": "1",
      "inB": "-1",
      "inC": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2199,
      "line": 577,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A - B - C       :JMPN(outOfGas)"
     },
     {
      "inE": "1",
      "inB": "1",
      "setB": 1,
      "line": 580,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E + B => B ; memory pointer where start to copy memory"
     },
     {
      "inC": "1",
      "CONST": "31",
      "setA": 1,
      "line": 582,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C+31 => A"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 584,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(arithA)"
     },
     {
      "CONST": "32",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "line": 585,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    32              :MSTORE(arithB)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 586,
      "jmpAddrLabel": "divARITH",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 587,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "CONST": "3",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 590,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    3               :MSTORE(arithA)"
     },
     {
      "inA": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 591,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 592,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2209,
      "line": 594,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - A => GAS  :JMPN(outOfGas)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2210,
      "line": 597,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "useElseAddr": 1,
      "elseAddr": 2211,
      "line": 598,
      "jmpAddrLabel": "readCode",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C               :JMPZ(readCode)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2220,
      "useElseAddr": 1,
      "elseAddr": 2212,
      "line": 599,
      "jmpAddrLabel": "opRETURNDATACOPYfinal",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C - 32          :JMPN(opRETURNDATACOPYfinal)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 600,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "call": 1,
      "line": 602,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(retDataCTX), CALL(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 605,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 606,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => B"
     },
     {
      "inD": "1",
      "setE": 1,
      "line": 607,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D => E"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4283,
      "call": 1,
      "line": 609,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTORE32",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
     },
     {
      "inE": "1",
      "setD": 1,
      "line": 610,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => D"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2209,
      "line": 611,
      "jmpAddrLabel": "opRETURNDATACOPYloop",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C - 32 => C     :JMP(opRETURNDATACOPYloop)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 614,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    B => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 26,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 616,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "jmpAddrLabel": "MLOADX",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(retDataCTX), CALL(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 618,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 619,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => B ; offset retDataCTX"
     },
     {
      "inD": "1",
      "setE": 1,
      "line": 620,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    D => E ; offset current CTX"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4278,
      "call": 1,
      "line": 622,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTOREX",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 623,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :JMP(readCode)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 627,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    E => A"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 628,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    C => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "bin": 1,
      "binOpcode": 0,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2230,
      "line": 629,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => B          :ADD, JMPC(outOfGas)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 630,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "useElseAddr": 1,
      "elseAddr": 4670,
      "line": 631,
      "jmpAddrLabel": "readCode",
      "elseAddrLabel": "outOfGas",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $               :EQ, JMPC(readCode, outOfGas)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2233,
      "line": 644,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "265382",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 2234,
      "line": 645,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE :JMPN(outOfCountersPoseidon)"
     },
     {
      "inSP": "1",
      "CONST": "-1",
      "setSP": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4673,
      "useElseAddr": 1,
      "elseAddr": 2235,
      "line": 647,
      "jmpAddrLabel": "stackUnderflow",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    SP - 1 => SP    :JMPN(stackUnderflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 648,
      "jmpAddrLabel": "maskAddress",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP), CALL(maskAddress); [address => A]; in: [A: address] out: [A: masked address]"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 649,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "                    :CALL(isColdAddress); in: [A: address] out: [D: 0 if warm, 1 if cold]"
     },
     {
      "inGAS": "1",
      "CONST": "-100",
      "inD": "-2500",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2238,
      "line": 651,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    GAS - %WARM_STORGE_READ_GAS - D * %COLD_ACCOUNT_ACCESS_COST_REDUCED => GAS    :JMPN(outOfGas)"
     },
     {
      "CONST": "2",
      "setB": 1,
      "line": 653,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    %SMT_KEY_SC_CODE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 654,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 655,
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    $ => A          :SLOAD"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 656,
      "jmpAddrLabel": "readCode",
      "fileName": "opcodes/calldata-returndata-code.zkasm",
      "lineStr": "    A               :MSTORE(SP++), JMP(readCode); [hash => SP]"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 692,
      "line": 19,
      "jmpAddrLabel": "opSTOP",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSTOP)            ; 0x00"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 302,
      "line": 20,
      "jmpAddrLabel": "opADD",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opADD)             ; 0x01"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 310,
      "line": 21,
      "jmpAddrLabel": "opMUL",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opMUL)             ; 0x02"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 320,
      "line": 22,
      "jmpAddrLabel": "opSUB",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSUB)             ; 0x03"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 329,
      "line": 23,
      "jmpAddrLabel": "opDIV",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDIV)             ; 0x04"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 339,
      "line": 24,
      "jmpAddrLabel": "opSDIV",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSDIV)            ; 0x05"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 359,
      "line": 25,
      "jmpAddrLabel": "opMOD",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opMOD)             ; 0x06"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 369,
      "line": 26,
      "jmpAddrLabel": "opSMOD",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSMOD)            ; 0x07"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 386,
      "line": 27,
      "jmpAddrLabel": "opADDMOD",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opADDMOD)          ; 0x08"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 410,
      "line": 28,
      "jmpAddrLabel": "opMULMOD",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opMULMOD)          ; 0x09"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 419,
      "line": 29,
      "jmpAddrLabel": "opEXP",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opEXP)             ; 0x0a"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 430,
      "line": 30,
      "jmpAddrLabel": "opSIGNEXTEND",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSIGNEXTEND)      ; 0x0b"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 31,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x0c"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 32,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x0d"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 33,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x0e"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 34,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x0f"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 509,
      "line": 35,
      "jmpAddrLabel": "opLT",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opLT)              ; 0x10"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 517,
      "line": 36,
      "jmpAddrLabel": "opGT",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opGT)              ; 0x11"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 525,
      "line": 37,
      "jmpAddrLabel": "opSLT",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSLT)             ; 0x12"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 533,
      "line": 38,
      "jmpAddrLabel": "opSGT",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSGT)             ; 0x13"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 541,
      "line": 39,
      "jmpAddrLabel": "opEQ",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opEQ)              ; 0x14"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 549,
      "line": 40,
      "jmpAddrLabel": "opISZERO",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opISZERO)          ; 0x15"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 556,
      "line": 41,
      "jmpAddrLabel": "opAND",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opAND)             ; 0x16"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 564,
      "line": 42,
      "jmpAddrLabel": "opOR",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opOR)              ; 0x17"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 572,
      "line": 43,
      "jmpAddrLabel": "opXOR",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opXOR)             ; 0x18"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 580,
      "line": 44,
      "jmpAddrLabel": "opNOT",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opNOT)             ; 0x19"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 587,
      "line": 45,
      "jmpAddrLabel": "opBYTE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opBYTE)            ; 0x1a"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 608,
      "line": 46,
      "jmpAddrLabel": "opSHL",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSHL)             ; 0x1b"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 601,
      "line": 47,
      "jmpAddrLabel": "opSHR",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSHR)             ; 0x1c"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 616,
      "line": 48,
      "jmpAddrLabel": "opSAR",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSAR)             ; 0x1d"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 49,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x1e"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 50,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x1f"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1271,
      "line": 51,
      "jmpAddrLabel": "opSHA3",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSHA3)            ; 0x20"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 52,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x21"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 53,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x22"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 54,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x23"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 55,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x24"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 56,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x25"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 57,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x26"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 58,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x27"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 59,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x28"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 60,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x29"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 61,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x2a"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 62,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x2b"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 63,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x2c"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 64,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x2d"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 65,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x2e"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 66,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x2f"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 645,
      "line": 67,
      "jmpAddrLabel": "opADDRESS",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opADDRESS)         ; 0x30"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 660,
      "line": 68,
      "jmpAddrLabel": "opBALANCE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opBALANCE)         ; 0x31"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 668,
      "line": 69,
      "jmpAddrLabel": "opORIGIN",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opORIGIN)          ; 0x32"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 673,
      "line": 70,
      "jmpAddrLabel": "opCALLER",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCALLER)          ; 0x33"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 678,
      "line": 71,
      "jmpAddrLabel": "opCALLVALUE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCALLVALUE)       ; 0x34"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1917,
      "line": 72,
      "jmpAddrLabel": "opCALLDATALOAD",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCALLDATALOAD)    ; 0x35"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1938,
      "line": 73,
      "jmpAddrLabel": "opCALLDATASIZE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCALLDATASIZE)    ; 0x36"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1946,
      "line": 74,
      "jmpAddrLabel": "opCALLDATACOPY",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCALLDATACOPY)    ; 0x37"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2036,
      "line": 75,
      "jmpAddrLabel": "opCODESIZE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCODESIZE)        ; 0x38"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2049,
      "line": 76,
      "jmpAddrLabel": "opCODECOPY",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCODECOPY)        ; 0x39"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 683,
      "line": 77,
      "jmpAddrLabel": "opGASPRICE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opGASPRICE)        ; 0x3a"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2103,
      "line": 78,
      "jmpAddrLabel": "opEXTCODESIZE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opEXTCODESIZE)     ; 0x3b"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2113,
      "line": 79,
      "jmpAddrLabel": "opEXTCODECOPY",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opEXTCODECOPY)     ; 0x3c"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2169,
      "line": 80,
      "jmpAddrLabel": "opRETURNDATASIZE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opRETURNDATASIZE)  ; 0x3d"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2180,
      "line": 81,
      "jmpAddrLabel": "opRETURNDATACOPY",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opRETURNDATACOPY)  ; 0x3e"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2232,
      "line": 82,
      "jmpAddrLabel": "opEXTCODEHASH",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opEXTCODEHASH)     ; 0x3f"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 458,
      "line": 83,
      "jmpAddrLabel": "opBLOCKHASH",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opBLOCKHASH)       ; 0x40"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 477,
      "line": 84,
      "jmpAddrLabel": "opCOINBASE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCOINBASE)        ; 0x41"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 482,
      "line": 85,
      "jmpAddrLabel": "opTIMESTAMP",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opTIMESTAMP)       ; 0x42"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 487,
      "line": 86,
      "jmpAddrLabel": "opNUMBER",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opNUMBER)          ; 0x43"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 494,
      "line": 87,
      "jmpAddrLabel": "opDIFFICULTY",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDIFFICULTY)      ; 0x44"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 499,
      "line": 88,
      "jmpAddrLabel": "opGASLIMIT",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opGASLIMIT)        ; 0x45"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 504,
      "line": 89,
      "jmpAddrLabel": "opCHAINID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCHAINID)         ; 0x46"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 652,
      "line": 90,
      "jmpAddrLabel": "opSELFBALANCE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSELFBALANCE)     ; 0x47"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 91,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x48"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 92,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x49"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 93,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x4A"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 94,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x4B"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 95,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x4C"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 96,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x4D"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 97,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x4E"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 98,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x4F"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1781,
      "line": 99,
      "jmpAddrLabel": "opPOP",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPOP)             ; 0x50"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1784,
      "line": 100,
      "jmpAddrLabel": "opMLOAD",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opMLOAD)           ; 0x51"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1792,
      "line": 101,
      "jmpAddrLabel": "opMSTORE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opMSTORE)          ; 0x52"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1813,
      "line": 102,
      "jmpAddrLabel": "opMSTORE8",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opMSTORE8)         ; 0x53"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1841,
      "line": 103,
      "jmpAddrLabel": "opSLOAD",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSLOAD)           ; 0x54"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1850,
      "line": 104,
      "jmpAddrLabel": "opSSTORE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSSTORE)          ; 0x55"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1314,
      "line": 105,
      "jmpAddrLabel": "opJUMP",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opJUMP)            ; 0x56"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1319,
      "line": 106,
      "jmpAddrLabel": "opJUMPI",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opJUMPI)           ; 0x57"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1353,
      "line": 107,
      "jmpAddrLabel": "opPC",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPC)              ; 0x58"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1826,
      "line": 108,
      "jmpAddrLabel": "opMSIZE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opMSIZE)           ; 0x59"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 688,
      "line": 109,
      "jmpAddrLabel": "opGAS",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opGAS)             ; 0x5a"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1357,
      "line": 110,
      "jmpAddrLabel": "opJUMPDEST",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opJUMPDEST)        ; 0x5b"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 111,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x5C"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 112,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x5D"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 113,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x5E"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 114,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0x5F"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1468,
      "line": 115,
      "jmpAddrLabel": "opPUSH1",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH1)           ; 0x60"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1470,
      "line": 116,
      "jmpAddrLabel": "opPUSH2",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH2)           ; 0x61"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1472,
      "line": 117,
      "jmpAddrLabel": "opPUSH3",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH3)           ; 0x62"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1474,
      "line": 118,
      "jmpAddrLabel": "opPUSH4",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH4)           ; 0x63"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1476,
      "line": 119,
      "jmpAddrLabel": "opPUSH5",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH5)           ; 0x64"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1478,
      "line": 120,
      "jmpAddrLabel": "opPUSH6",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH6)           ; 0x65"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1480,
      "line": 121,
      "jmpAddrLabel": "opPUSH7",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH7)           ; 0x66"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1482,
      "line": 122,
      "jmpAddrLabel": "opPUSH8",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH8)           ; 0x67"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1484,
      "line": 123,
      "jmpAddrLabel": "opPUSH9",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH9)           ; 0x68"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1486,
      "line": 124,
      "jmpAddrLabel": "opPUSH10",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH10)          ; 0x69"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1488,
      "line": 125,
      "jmpAddrLabel": "opPUSH11",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH11)          ; 0x6a"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1490,
      "line": 126,
      "jmpAddrLabel": "opPUSH12",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH12)          ; 0x6b"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1492,
      "line": 127,
      "jmpAddrLabel": "opPUSH13",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH13)          ; 0x6c"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1494,
      "line": 128,
      "jmpAddrLabel": "opPUSH14",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH14)          ; 0x6d"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1496,
      "line": 129,
      "jmpAddrLabel": "opPUSH15",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH15)          ; 0x6e"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1498,
      "line": 130,
      "jmpAddrLabel": "opPUSH16",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH16)          ; 0x6f"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1500,
      "line": 131,
      "jmpAddrLabel": "opPUSH17",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH17)          ; 0x70"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1502,
      "line": 132,
      "jmpAddrLabel": "opPUSH18",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH18)          ; 0x71"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1504,
      "line": 133,
      "jmpAddrLabel": "opPUSH19",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH19)          ; 0x72"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1506,
      "line": 134,
      "jmpAddrLabel": "opPUSH20",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH20)          ; 0x73"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1508,
      "line": 135,
      "jmpAddrLabel": "opPUSH21",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH21)          ; 0x74"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1510,
      "line": 136,
      "jmpAddrLabel": "opPUSH22",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH22)          ; 0x75"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1512,
      "line": 137,
      "jmpAddrLabel": "opPUSH23",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH23)          ; 0x76"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1514,
      "line": 138,
      "jmpAddrLabel": "opPUSH24",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH24)          ; 0x77"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1516,
      "line": 139,
      "jmpAddrLabel": "opPUSH25",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH25)          ; 0x78"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1518,
      "line": 140,
      "jmpAddrLabel": "opPUSH26",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH26)          ; 0x79"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1520,
      "line": 141,
      "jmpAddrLabel": "opPUSH27",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH27)          ; 0x7a"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1522,
      "line": 142,
      "jmpAddrLabel": "opPUSH28",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH28)          ; 0x7b"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1524,
      "line": 143,
      "jmpAddrLabel": "opPUSH29",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH29)          ; 0x7c"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1526,
      "line": 144,
      "jmpAddrLabel": "opPUSH30",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH30)          ; 0x7d"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1528,
      "line": 145,
      "jmpAddrLabel": "opPUSH31",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH31)          ; 0x7e"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1530,
      "line": 146,
      "jmpAddrLabel": "opPUSH32",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opPUSH32)          ; 0x7f"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1573,
      "line": 147,
      "jmpAddrLabel": "opDUP1",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP1)            ; 0x80"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1579,
      "line": 148,
      "jmpAddrLabel": "opDUP2",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP2)            ; 0x81"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1585,
      "line": 149,
      "jmpAddrLabel": "opDUP3",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP3)            ; 0x82"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1591,
      "line": 150,
      "jmpAddrLabel": "opDUP4",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP4)            ; 0x83"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1597,
      "line": 151,
      "jmpAddrLabel": "opDUP5",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP5)            ; 0x84"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1603,
      "line": 152,
      "jmpAddrLabel": "opDUP6",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP6)            ; 0x85"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1609,
      "line": 153,
      "jmpAddrLabel": "opDUP7",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP7)            ; 0x86"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1615,
      "line": 154,
      "jmpAddrLabel": "opDUP8",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP8)            ; 0x87"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1621,
      "line": 155,
      "jmpAddrLabel": "opDUP9",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP9)            ; 0x88"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1627,
      "line": 156,
      "jmpAddrLabel": "opDUP10",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP10)           ; 0x89"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1633,
      "line": 157,
      "jmpAddrLabel": "opDUP11",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP11)           ; 0x8a"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1639,
      "line": 158,
      "jmpAddrLabel": "opDUP12",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP12)           ; 0x8b"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1645,
      "line": 159,
      "jmpAddrLabel": "opDUP13",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP13)           ; 0x8c"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1651,
      "line": 160,
      "jmpAddrLabel": "opDUP14",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP14)           ; 0x8d"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1657,
      "line": 161,
      "jmpAddrLabel": "opDUP15",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP15)           ; 0x8e"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1663,
      "line": 162,
      "jmpAddrLabel": "opDUP16",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDUP16)           ; 0x8f"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1669,
      "line": 163,
      "jmpAddrLabel": "opSWAP1",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP1)           ; 0x90"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1676,
      "line": 164,
      "jmpAddrLabel": "opSWAP2",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP2)           ; 0x91"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1683,
      "line": 165,
      "jmpAddrLabel": "opSWAP3",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP3)           ; 0x92"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1690,
      "line": 166,
      "jmpAddrLabel": "opSWAP4",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP4)           ; 0x93"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1697,
      "line": 167,
      "jmpAddrLabel": "opSWAP5",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP5)           ; 0x94"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1704,
      "line": 168,
      "jmpAddrLabel": "opSWAP6",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP6)           ; 0x95"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1711,
      "line": 169,
      "jmpAddrLabel": "opSWAP7",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP7)           ; 0x96"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1718,
      "line": 170,
      "jmpAddrLabel": "opSWAP8",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP8)           ; 0x97"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1725,
      "line": 171,
      "jmpAddrLabel": "opSWAP9",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP9)           ; 0x98"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1732,
      "line": 172,
      "jmpAddrLabel": "opSWAP10",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP10)          ; 0x99"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1739,
      "line": 173,
      "jmpAddrLabel": "opSWAP11",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP11)          ; 0x9a"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1746,
      "line": 174,
      "jmpAddrLabel": "opSWAP12",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP12)          ; 0x9b"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1753,
      "line": 175,
      "jmpAddrLabel": "opSWAP13",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP13)          ; 0x9c"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1760,
      "line": 176,
      "jmpAddrLabel": "opSWAP14",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP14)          ; 0x9d"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1767,
      "line": 177,
      "jmpAddrLabel": "opSWAP15",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP15)          ; 0x9e"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1774,
      "line": 178,
      "jmpAddrLabel": "opSWAP16",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSWAP16)          ; 0x9f"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1359,
      "line": 179,
      "jmpAddrLabel": "opLOG0",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opLOG0)            ; 0xa0"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1378,
      "line": 180,
      "jmpAddrLabel": "opLOG1",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opLOG1)            ; 0xa1"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1397,
      "line": 181,
      "jmpAddrLabel": "opLOG2",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opLOG2)            ; 0xa2"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1416,
      "line": 182,
      "jmpAddrLabel": "opLOG3",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opLOG3)            ; 0xa3"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1435,
      "line": 183,
      "jmpAddrLabel": "opLOG4",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opLOG4)            ; 0xa4"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 184,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xA5"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 185,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xA6"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 186,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xA7"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 187,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xA8"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 188,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xA9"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 189,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xAA"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 190,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xAB"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 191,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xAC"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 192,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xAD"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 193,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xAE"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 194,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xAF"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 195,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB0"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 196,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB1"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 197,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB2"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 198,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB3"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 199,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB4"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 200,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB5"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 201,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB6"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 202,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB7"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 203,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB8"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 204,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xB9"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 205,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xBA"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 206,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xBB"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 207,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xBC"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 208,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xBD"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 209,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xBE"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 210,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xBF"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 211,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC0"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 212,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC1"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 213,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC2"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 214,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC3"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 215,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC4"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 216,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC5"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 217,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC6"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 218,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC7"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 219,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC8"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 220,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xC9"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 221,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xCA"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 222,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xCB"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 223,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xCC"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 224,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xCD"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 225,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xCE"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 226,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xCF"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 227,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD0"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 228,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD1"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 229,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD2"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 230,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD3"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 231,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD4"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 232,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD5"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 233,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD6"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 234,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD7"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 235,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD8"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 236,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xD9"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 237,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xDA"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 238,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xDB"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 239,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xDC"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 240,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xDD"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 241,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xDE"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 242,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xDF"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 243,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE0"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 244,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE1"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 245,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE2"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 246,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE3"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 247,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE4"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 248,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE5"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 249,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE6"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 250,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE7"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 251,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE8"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 252,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xE9"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 253,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xEA"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 254,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xEB"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 255,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xEC"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 256,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xED"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 257,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xEE"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 258,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xEF"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 710,
      "line": 259,
      "jmpAddrLabel": "opCREATE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCREATE)          ; 0xf0"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 777,
      "line": 260,
      "jmpAddrLabel": "opCALL",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCALL)            ; 0xf1"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 847,
      "line": 261,
      "jmpAddrLabel": "opCALLCODE",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCALLCODE)        ; 0xf2"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 910,
      "line": 262,
      "jmpAddrLabel": "opRETURN",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opRETURN)          ; 0xf3"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 994,
      "line": 263,
      "jmpAddrLabel": "opDELEGATECALL",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opDELEGATECALL)    ; 0xf4"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1050,
      "line": 264,
      "jmpAddrLabel": "opCREATE2",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opCREATE2)         ; 0xf5"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 265,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xf6"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 266,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xf7"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 267,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xf8"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 268,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xf9"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1121,
      "line": 269,
      "jmpAddrLabel": "opSTATICCALL",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSTATICCALL)      ; 0xfa"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 270,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xfb"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 271,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xfc"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1170,
      "line": 272,
      "jmpAddrLabel": "opREVERT",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opREVERT)          ; 0xfd"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1270,
      "line": 273,
      "jmpAddrLabel": "opINVALID",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opINVALID)         ; 0xfe"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 1218,
      "line": 274,
      "jmpAddrLabel": "opSENDALL",
      "fileName": "map-opcodes.zkasm",
      "lineStr": "    :JMP(opSENDALL)         ; 0xff"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 3,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => B                          :MLOAD(txValue)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 4,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "CONST": "2502",
      "setRR": 1,
      "line": 5,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    zkPC+2 => RR"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4710,
      "useElseAddr": 1,
      "elseAddr": 2502,
      "line": 6,
      "jmpAddrLabel": "moveBalances",
      "elseAddrLabel": "next",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $                               :LT, JMPC(moveBalances)"
     },
     {
      "inGAS": "1",
      "CONST": "-3000",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2503,
      "line": 8,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    GAS - %ECRECOVER_GAS => GAS     :JMPN(outOfGas) ; gas static = 3000"
     },
     {
      "CONST": "1024",
      "setSP": 1,
      "line": 12,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    %CALLDATA_OFFSET => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 13,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => A                              :MLOAD(SP++) ; hash"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 14,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => D                              :MLOAD(SP++) ; v"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 15,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => B                              :MLOAD(SP++) ; r"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2614,
      "call": 1,
      "line": 16,
      "jmpAddrLabel": "ecrecover_precompiled",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => C                              :MLOAD(SP) ,CALL(ecrecover_precompiled) ; in: [A: hash, B: r, C: s, D: v], out: [A: result_ecrecover, B: result_code]"
     },
     {
      "inB": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2509,
      "useElseAddr": 1,
      "elseAddr": 2524,
      "line": 17,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "endECRECOVERFail",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    B                                   :JMPNZ(endECRECOVERFail)"
     },
     {
      "CONST": "0",
      "setE": 1,
      "line": 20,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    0 => E"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4283,
      "call": 1,
      "line": 21,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTORE32",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    A                                   :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
     },
     {
      "CONST": "0",
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 24,
      "offsetLabel": "retDataOffset",
      "useCTX": 1,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    0                                   :MSTORE(retDataOffset)"
     },
     {
      "CONST": "32",
      "offset": 25,
      "mOp": 1,
      "mWR": 1,
      "line": 25,
      "offsetLabel": "retDataLength",
      "useCTX": 1,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    32                                  :MSTORE(retDataLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 2514,
      "line": 26,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => A                              :MLOAD(originCTX), JMPZ(handleGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 28,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => B                              :MLOAD(currentCTX)"
     },
     {
      "inA": "1",
      "setCTX": 1,
      "line": 29,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    A => CTX"
     },
     {
      "inB": "1",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 30,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    B                                   :MSTORE(retDataCTX)"
     },
     {
      "inB": "1",
      "setCTX": 1,
      "line": 31,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    B => CTX"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 23,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2528,
      "useElseAddr": 1,
      "elseAddr": 2519,
      "line": 34,
      "offsetLabel": "retCallLength",
      "useCTX": 1,
      "jmpAddrLabel": "preEndECRECOVER",
      "elseAddrLabel": "next",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => C                              :MLOAD(retCallLength), JMPZ(preEndECRECOVER)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 35,
      "offsetLabel": "retCallOffset",
      "useCTX": 1,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => E                              :MLOAD(retCallOffset)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2522,
      "useElseAddr": 1,
      "elseAddr": 2521,
      "line": 38,
      "jmpAddrLabel": "continueEcrecover",
      "elseAddrLabel": "next",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    C - 32                              :JMPN(continueEcrecover)"
     },
     {
      "CONST": "32",
      "setC": 1,
      "line": 39,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    32 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4278,
      "call": 1,
      "line": 42,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "jmpAddrLabel": "MSTOREX",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => CTX                            :MLOAD(originCTX), CALL(MSTOREX)  ; in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2529,
      "line": 43,
      "jmpAddrLabel": "endECRECOVER",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "                                        :JMP(endECRECOVER)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 2525,
      "line": 46,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => A                              :MLOAD(originCTX), JMPZ(handleGas)"
     },
     {
      "inA": "1",
      "setCTX": 1,
      "line": 47,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    A => CTX"
     },
     {
      "CONST": "0",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 48,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    0                                   :MSTORE(retDataCTX)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2598,
      "line": 49,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "jmpAddrLabel": "preEnd",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    CTX                                 :MSTORE(currentCTX), JMP(preEnd)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 52,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    $ => CTX                            :MLOAD(originCTX)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2598,
      "line": 55,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "jmpAddrLabel": "preEnd",
      "fileName": "precompiled/pre-ecrecover.zkasm",
      "lineStr": "    CTX                                 :MSTORE(currentCTX), JMP(preEnd)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2531,
      "line": 2,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100         :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 17,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3600,
      "call": 1,
      "line": 6,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "jmpAddrLabel": "revertTouched",
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    $ => SR         :MLOAD(initSR), CALL(revertTouched)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 2533,
      "line": 10,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "revert"
         }
        ]
       }
      ],
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    $ => A          :MLOAD(originCTX), JMPZ(handleGas) ; first context"
     },
     {
      "inA": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 11,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    A => CTX        :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "line": 14,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    $ => B          :MLOAD(gasCTX)"
     },
     {
      "inGAS": "1",
      "inB": "1",
      "setGAS": 1,
      "line": 15,
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    GAS + B => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 18,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    $ => SP         :MLOAD(lastSP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 19,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    $ => PC         :MLOAD(lastPC)"
     },
     {
      "CONST": "0",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 22,
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    0               :MSTORE(SP++)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 25,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 26,
      "offsetLabel": "depth",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "fileName": "precompiled/revert-precompiled.zkasm",
      "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2542,
      "line": 2,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100         :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 2543,
      "line": 3,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1   :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 5,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => B          :MLOAD(txValue)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 6,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "CONST": "2547",
      "setRR": 1,
      "line": 7,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    zkPC+2 => RR"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4710,
      "useElseAddr": 1,
      "elseAddr": 2547,
      "line": 8,
      "jmpAddrLabel": "moveBalances",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $               :LT, JMPC(moveBalances)"
     },
     {
      "inGAS": "1",
      "CONST": "-15",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2548,
      "line": 10,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    GAS - %IDENTITY_GAS => GAS :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 11,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => C          :MLOAD(txCalldataLen)"
     },
     {
      "inC": "1",
      "CONST": "31",
      "setA": 1,
      "line": 13,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    C + 31 => A"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 14,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    A               :MSTORE(arithA)"
     },
     {
      "CONST": "32",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 15,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    32              :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 16,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "inGAS": "1",
      "inA": "-3",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 2554,
      "line": 18,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    GAS - %IDENTITY_WORD_GAS*A => GAS   :JMPN(outOfGas)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "setE": 1,
      "setA": 1,
      "offset": 24,
      "mOp": 1,
      "mWR": 1,
      "line": 19,
      "offsetLabel": "retDataOffset",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    0 => B, E, A    :MSTORE(retDataOffset)"
     },
     {
      "inC": "1",
      "offset": 25,
      "mOp": 1,
      "mWR": 1,
      "line": 20,
      "offsetLabel": "retDataLength",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    C               :MSTORE(retDataLength)"
     },
     {
      "CONST": "1024",
      "setSP": 1,
      "line": 21,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    %CALLDATA_OFFSET => SP"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2558,
      "line": 24,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100         :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2565,
      "useElseAddr": 1,
      "elseAddr": 2559,
      "line": 26,
      "jmpAddrLabel": "IDENTITYreturn",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    C               :JMPZ(IDENTITYreturn)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2563,
      "useElseAddr": 1,
      "elseAddr": 2560,
      "line": 27,
      "jmpAddrLabel": "IDENTITYfinal",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    C - 32          :JMPN(IDENTITYfinal)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 28,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => B          :MLOAD(SP++)"
     },
     {
      "inB": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4283,
      "call": 1,
      "line": 29,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTORE32",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    B               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2557,
      "line": 30,
      "jmpAddrLabel": "IDENTITYloop",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    C - 32 => C     :JMP(IDENTITYloop)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 33,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => A          :MLOAD(SP)"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4278,
      "call": 1,
      "line": 34,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTOREX",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX); in: [bytesToStore, E: offset, C: length] out: [E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 2566,
      "line": 38,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => A               :MLOAD(originCTX), JMPZ(handleGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 40,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => B               :MLOAD(currentCTX)"
     },
     {
      "inA": "1",
      "setCTX": 1,
      "line": 41,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    A => CTX"
     },
     {
      "inB": "1",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 42,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    B                    :MSTORE(retDataCTX)"
     },
     {
      "inB": "1",
      "setCTX": 1,
      "line": 43,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    B => CTX"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 2571,
      "line": 46,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1   :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "0",
      "setE": 1,
      "line": 49,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    0 => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 23,
      "mOp": 1,
      "mWR": 0,
      "line": 50,
      "offsetLabel": "retCallLength",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => B          :MLOAD(retCallLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 25,
      "mOp": 1,
      "mWR": 0,
      "line": 53,
      "offsetLabel": "retDataLength",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => A          :MLOAD(retDataLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2577,
      "useElseAddr": 1,
      "elseAddr": 2575,
      "line": 54,
      "jmpAddrLabel": "IDENTITYreturn2",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $               :LT, JMPC(IDENTITYreturn2)"
     },
     {
      "inB": "1",
      "setC": 1,
      "line": 55,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    B => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2579,
      "line": 56,
      "offsetLabel": "retCallOffset",
      "useCTX": 1,
      "jmpAddrLabel": "IDENTITYreturnLoop",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => B          :MLOAD(retCallOffset), JMP(IDENTITYreturnLoop)"
     },
     {
      "inA": "1",
      "setC": 1,
      "line": 59,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    A => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 22,
      "mOp": 1,
      "mWR": 0,
      "line": 60,
      "offsetLabel": "retCallOffset",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => B          :MLOAD(retCallOffset)"
     },
     {
      "CONST": "7968788",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2580,
      "line": 63,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2596,
      "useElseAddr": 1,
      "elseAddr": 2581,
      "line": 65,
      "jmpAddrLabel": "IDENTITYend",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    C               :JMPZ(IDENTITYend)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2591,
      "useElseAddr": 1,
      "elseAddr": 2582,
      "line": 66,
      "jmpAddrLabel": "IDENTITYreturnFinal",
      "elseAddrLabel": "next",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    C - 32          :JMPN(IDENTITYreturnFinal)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "call": 1,
      "line": 67,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "                    :CALL(MLOAD32)"
     },
     {
      "inE": "1",
      "setD": 1,
      "line": 68,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    E => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 69,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 70,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    B => E"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4283,
      "call": 1,
      "line": 71,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTORE32",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 72,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    E => B"
     },
     {
      "inD": "1",
      "setE": 1,
      "line": 73,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    D => E"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "line": 74,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    C - 32 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2579,
      "line": 75,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "jmpAddrLabel": "IDENTITYreturnLoop",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX), JMP(IDENTITYreturnLoop)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 78,
      "jmpAddrLabel": "MLOADX",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "                    :CALL(MLOADX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 79,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 80,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    B => E"
     },
     {
      "inA": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4278,
      "call": 1,
      "line": 81,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "jmpAddrLabel": "MSTOREX",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    A               :MSTORE(bytesToStore), CALL(MSTOREX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 82,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 85,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2598,
      "line": 86,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "jmpAddrLabel": "preEnd",
      "fileName": "precompiled/identity.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX), JMP(preEnd)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "line": 2,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "precompiled/end.zkasm",
      "lineStr": "    $ => B          :MLOAD(gasCTX)"
     },
     {
      "inB": "1",
      "inGAS": "1",
      "setGAS": 1,
      "line": 3,
      "fileName": "precompiled/end.zkasm",
      "lineStr": "    B + GAS => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 5,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "precompiled/end.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 6,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "precompiled/end.zkasm",
      "lineStr": "    A - 1           :MSTORE(depth)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 7,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "precompiled/end.zkasm",
      "lineStr": "    $ => SP         :MLOAD(lastSP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 8,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "precompiled/end.zkasm",
      "lineStr": "    $ => PC         :MLOAD(lastPC)"
     },
     {
      "CONST": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 9,
      "jmpAddrLabel": "readCode",
      "fileName": "precompiled/end.zkasm",
      "lineStr": "    1               :MSTORE(SP++), JMP(readCode)"
     },
     {
      "inA": "1",
      "CONST": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2498,
      "useElseAddr": 1,
      "elseAddr": 2606,
      "line": 15,
      "jmpAddrLabel": "funcECRECOVER",
      "elseAddrLabel": "next",
      "fileName": "precompiled/selector.zkasm",
      "lineStr": "    A - 2               :JMPN(funcECRECOVER)"
     },
     {
      "inA": "1",
      "CONST": "-3",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2530,
      "useElseAddr": 1,
      "elseAddr": 2607,
      "line": 16,
      "jmpAddrLabel": "revertPrecompiled",
      "elseAddrLabel": "next",
      "fileName": "precompiled/selector.zkasm",
      "lineStr": "    A - 3               :JMPN(revertPrecompiled)  ;:JMPN(SHA256)"
     },
     {
      "inA": "1",
      "CONST": "-4",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2530,
      "useElseAddr": 1,
      "elseAddr": 2608,
      "line": 17,
      "jmpAddrLabel": "revertPrecompiled",
      "elseAddrLabel": "next",
      "fileName": "precompiled/selector.zkasm",
      "lineStr": "    A - 4               :JMPN(revertPrecompiled)  ;:JMPN(RIPEMD160)"
     },
     {
      "inA": "1",
      "CONST": "-5",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2541,
      "useElseAddr": 1,
      "elseAddr": 2609,
      "line": 18,
      "jmpAddrLabel": "IDENTITY",
      "elseAddrLabel": "next",
      "fileName": "precompiled/selector.zkasm",
      "lineStr": "    A - 5               :JMPN(IDENTITY)"
     },
     {
      "inA": "1",
      "CONST": "-6",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2530,
      "useElseAddr": 1,
      "elseAddr": 2610,
      "line": 19,
      "jmpAddrLabel": "revertPrecompiled",
      "elseAddrLabel": "next",
      "fileName": "precompiled/selector.zkasm",
      "lineStr": "    A - 6               :JMPN(revertPrecompiled) ;:JMPN(MODEXP)"
     },
     {
      "inA": "1",
      "CONST": "-7",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2530,
      "useElseAddr": 1,
      "elseAddr": 2611,
      "line": 20,
      "jmpAddrLabel": "revertPrecompiled",
      "elseAddrLabel": "next",
      "fileName": "precompiled/selector.zkasm",
      "lineStr": "    A - 7               :JMPN(revertPrecompiled) ;:JMPN(ECADD)"
     },
     {
      "inA": "1",
      "CONST": "-8",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2530,
      "useElseAddr": 1,
      "elseAddr": 2612,
      "line": 21,
      "jmpAddrLabel": "revertPrecompiled",
      "elseAddrLabel": "next",
      "fileName": "precompiled/selector.zkasm",
      "lineStr": "    A - 8               :JMPN(revertPrecompiled) ;:JMPN(ECMUL)"
     },
     {
      "inA": "1",
      "CONST": "-9",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2530,
      "useElseAddr": 1,
      "elseAddr": 2613,
      "line": 22,
      "jmpAddrLabel": "revertPrecompiled",
      "elseAddrLabel": "next",
      "fileName": "precompiled/selector.zkasm",
      "lineStr": "    A - 9               :JMPN(revertPrecompiled) ;:JMPN(ECPAIRING)"
     },
     {
      "inA": "1",
      "CONST": "-10",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2530,
      "useElseAddr": 1,
      "elseAddr": 2614,
      "line": 23,
      "jmpAddrLabel": "revertPrecompiled",
      "elseAddrLabel": "next",
      "fileName": "precompiled/selector.zkasm",
      "lineStr": "    A - 10              :JMPN(revertPrecompiled) ;:JMPN(BLAKE2F)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494336",
      "offset": 71,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2616,
      "line": 34,
      "offsetLabel": "ecrecover_s_upperlimit",
      "useCTX": 0,
      "jmpAddrLabel": "ecrecover_store_args",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %FNEC_MINUS_ONE :MSTORE(ecrecover_s_upperlimit),JMP(ecrecover_store_args)"
     },
     {
      "CONSTL": "57896044618658097711785492504343953926418782139537452191302581570759080747168",
      "offset": 71,
      "mOp": 1,
      "mWR": 1,
      "line": 37,
      "offsetLabel": "ecrecover_s_upperlimit",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %FNEC_DIV_TWO   :MSTORE(ecrecover_s_upperlimit)"
     },
     {
      "inA": "1",
      "offset": 60,
      "mOp": 1,
      "mWR": 1,
      "line": 43,
      "offsetLabel": "ecrecover_hash",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        A           :MSTORE(ecrecover_hash)"
     },
     {
      "inB": "1",
      "offset": 61,
      "mOp": 1,
      "mWR": 1,
      "line": 44,
      "offsetLabel": "ecrecover_r",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        B           :MSTORE(ecrecover_r)"
     },
     {
      "inC": "1",
      "offset": 62,
      "mOp": 1,
      "mWR": 1,
      "line": 45,
      "offsetLabel": "ecrecover_s",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        C           :MSTORE(ecrecover_s)"
     },
     {
      "inD": "1",
      "offset": 63,
      "mOp": 1,
      "mWR": 1,
      "line": 46,
      "offsetLabel": "ecrecover_v",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        D           :MSTORE(ecrecover_v)"
     },
     {
      "CONST": "496474",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 2621,
      "line": 50,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %MAX_CNT_BINARY - CNT_BINARY - 1600   :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "247937",
      "inCntArith": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4667,
      "useElseAddr": 1,
      "elseAddr": 2622,
      "line": 51,
      "jmpAddrLabel": "outOfCountersArith",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %MAX_CNT_ARITH - CNT_ARITH - 1100     :JMPN(outOfCountersArith)"
     },
     {
      "CONST": "7962588",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 2623,
      "line": 52,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %MAX_CNT_STEPS - STEP - 6400     :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 54,
      "offsetLabel": "cntKeccakPreProcess",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A         :MLOAD(cntKeccakPreProcess)"
     },
     {
      "CONST": "2257",
      "inCntKeccakF": "-1",
      "inA": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4664,
      "useElseAddr": 1,
      "elseAddr": 2625,
      "line": 55,
      "jmpAddrLabel": "outOfCountersKeccak",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1 :JMPN(outOfCountersKeccak)"
     },
     {
      "inRR": "1",
      "offset": 69,
      "mOp": 1,
      "mWR": 1,
      "line": 58,
      "offsetLabel": "ecrecover_RR",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        RR          :MSTORE(ecrecover_RR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 61,
      "mOp": 1,
      "mWR": 0,
      "line": 61,
      "offsetLabel": "ecrecover_r",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => B      :MLOAD(ecrecover_r)"
     },
     {
      "CONSTL": "0",
      "setA": 1,
      "line": 62,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0n => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2696,
      "useElseAddr": 1,
      "elseAddr": 2629,
      "line": 63,
      "jmpAddrLabel": "ecrecover_r_is_zero",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $           :EQ,JMPC(ecrecover_r_is_zero)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494336",
      "setA": 1,
      "line": 64,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %FNEC_MINUS_ONE => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2697,
      "useElseAddr": 1,
      "elseAddr": 2631,
      "line": 66,
      "jmpAddrLabel": "ecrecover_r_is_too_big",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $           :LT,JMPC(ecrecover_r_is_too_big)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 71,
      "mOp": 1,
      "mWR": 0,
      "line": 69,
      "offsetLabel": "ecrecover_s_upperlimit",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A      :MLOAD(ecrecover_s_upperlimit)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 62,
      "mOp": 1,
      "mWR": 0,
      "line": 70,
      "offsetLabel": "ecrecover_s",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => B      :MLOAD(ecrecover_s)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2699,
      "useElseAddr": 1,
      "elseAddr": 2634,
      "line": 71,
      "jmpAddrLabel": "ecrecover_s_is_too_big",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $           :LT,JMPC(ecrecover_s_is_too_big)"
     },
     {
      "CONSTL": "0",
      "setA": 1,
      "line": 72,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0n => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2698,
      "useElseAddr": 1,
      "elseAddr": 2636,
      "line": 73,
      "jmpAddrLabel": "ecrecover_s_is_zero",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $           :EQ,JMPC(ecrecover_s_is_zero)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 61,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2746,
      "call": 1,
      "line": 76,
      "offsetLabel": "ecrecover_r",
      "useCTX": 0,
      "jmpAddrLabel": "invFnEc",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A      :MLOAD(ecrecover_r),CALL(invFnEc)"
     },
     {
      "inB": "1",
      "offset": 64,
      "mOp": 1,
      "mWR": 1,
      "line": 77,
      "offsetLabel": "ecrecover_r_inv",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        B           :MSTORE(ecrecover_r_inv)"
     },
     {
      "CONSTL": "27",
      "setB": 1,
      "line": 79,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0x1Bn => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 63,
      "mOp": 1,
      "mWR": 0,
      "line": 80,
      "offsetLabel": "ecrecover_v",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A      :MLOAD(ecrecover_v)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2641,
      "useElseAddr": 1,
      "elseAddr": 2642,
      "line": 81,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "ecrecover_v_not_eq_1b",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => E      :EQ,JMPNC(ecrecover_v_not_eq_1b)"
     },
     {
      "CONSTL": "0",
      "offset": 70,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2645,
      "line": 84,
      "offsetLabel": "ecrecover_v_parity",
      "useCTX": 0,
      "jmpAddrLabel": "ecrecover_v_ok",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0n          :MSTORE(ecrecover_v_parity),JMP(ecrecover_v_ok)"
     },
     {
      "CONSTL": "28",
      "setB": 1,
      "line": 87,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0x1Cn => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2644,
      "useElseAddr": 1,
      "elseAddr": 2700,
      "line": 88,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "ecrecover_v_not_eq_1b1c",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => E      :EQ,JMPNC(ecrecover_v_not_eq_1b1c)"
     },
     {
      "CONSTL": "1",
      "offset": 70,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2645,
      "line": 91,
      "offsetLabel": "ecrecover_v_parity",
      "useCTX": 0,
      "jmpAddrLabel": "ecrecover_v_ok",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        1n          :MSTORE(ecrecover_v_parity),JMP(ecrecover_v_ok)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "setB": 1,
      "offset": 61,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 98,
      "offsetLabel": "ecrecover_r",
      "useCTX": 0,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A,B    :MLOAD(ecrecover_r),CALL(mulFpEc)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 100,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 61,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 101,
      "offsetLabel": "ecrecover_r",
      "useCTX": 0,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => B      :MLOAD(ecrecover_r),CALL(mulFpEc)"
     },
     {
      "CONST": "7",
      "setA": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2705,
      "call": 1,
      "line": 103,
      "jmpAddrLabel": "addFpEc",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        7 => A      :CALL(addFpEc)"
     },
     {
      "inC": "1",
      "offset": 66,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2758,
      "call": 1,
      "line": 106,
      "offsetLabel": "ecrecover_y2",
      "useCTX": 0,
      "jmpAddrLabel": "sqrtFpEc",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        C           :MSTORE(ecrecover_y2),CALL(sqrtFpEc)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "setA": 1,
      "line": 110,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %FPEC_NON_SQRT => A"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 111,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        C => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2653,
      "useElseAddr": 1,
      "elseAddr": 2655,
      "line": 112,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "ecrecover_has_sqrt",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => E      :EQ,JMPNC(ecrecover_has_sqrt)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 66,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2772,
      "call": 1,
      "line": 116,
      "offsetLabel": "ecrecover_y2",
      "useCTX": 0,
      "jmpAddrLabel": "checkSqrtFpEc",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => C      :MLOAD(ecrecover_y2),CALL(checkSqrtFpEc)"
     },
     {
      "CONST": "1",
      "assert": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2701,
      "line": 118,
      "jmpAddrLabel": "ecrecover_not_exists_sqrt_of_y",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        1           :ASSERT,JMP(ecrecover_not_exists_sqrt_of_y)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671662",
      "setA": 1,
      "line": 127,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %FPEC_MINUS_ONE => A"
     },
     {
      "CONST": "0",
      "bin": 1,
      "binOpcode": 2,
      "line": 128,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0           :LT         ; assert to validate that B (y) isn't n alias."
     },
     {
      "CONSTL": "1",
      "setA": 1,
      "line": 132,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0x01n => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 5,
      "line": 133,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A      :AND"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 70,
      "mOp": 1,
      "mWR": 0,
      "line": 134,
      "offsetLabel": "ecrecover_v_parity",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => B      :MLOAD(ecrecover_v_parity)"
     },
     {
      "inA": "1",
      "inB": "1",
      "CONST": "-1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2661,
      "useElseAddr": 1,
      "elseAddr": 2664,
      "line": 144,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "ecrecover_v_y2_same_parity",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        A + B - 1   :JMPNZ(ecrecover_v_y2_same_parity)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "setA": 1,
      "line": 148,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %FPEC => A"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 149,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        C => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "bin": 1,
      "binOpcode": 1,
      "line": 150,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => C      :SUB"
     },
     {
      "inC": "1",
      "offset": 65,
      "mOp": 1,
      "mWR": 1,
      "line": 154,
      "offsetLabel": "ecrecover_y",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        C           :MSTORE(ecrecover_y)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 60,
      "mOp": 1,
      "mWR": 0,
      "line": 158,
      "offsetLabel": "ecrecover_hash",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A      :MLOAD(ecrecover_hash)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 64,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2727,
      "call": 1,
      "line": 159,
      "offsetLabel": "ecrecover_r_inv",
      "useCTX": 0,
      "jmpAddrLabel": "mulFnEc",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => B      :MLOAD(ecrecover_r_inv),CALL(mulFnEc)"
     },
     {
      "freeInTag": {
       "op": "sub",
       "values": [
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
         "offsetLabel": "FNEC"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 82,
      "mOp": 1,
      "mWR": 1,
      "line": 163,
      "offsetLabel": "mulPointEc_k1",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        ${const.FNEC - C}  => A :MSTORE(mulPointEc_k1)"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 164,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        1 => B"
     },
     {
      "CONST": "0",
      "setD": 1,
      "line": 165,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0 => D"
     },
     {
      "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 166,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %FNEC       :ARITH"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 62,
      "mOp": 1,
      "mWR": 0,
      "line": 168,
      "offsetLabel": "ecrecover_s",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A      :MLOAD(ecrecover_s)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 64,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2727,
      "call": 1,
      "line": 169,
      "offsetLabel": "ecrecover_r_inv",
      "useCTX": 0,
      "jmpAddrLabel": "mulFnEc",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => B      :MLOAD(ecrecover_r_inv),CALL(mulFnEc)"
     },
     {
      "inC": "1",
      "offset": 83,
      "mOp": 1,
      "mWR": 1,
      "line": 172,
      "offsetLabel": "mulPointEc_k2",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        C           :MSTORE(mulPointEc_k2)"
     },
     {
      "CONSTL": "55066263022277343669578718895168534326250603453777594175500187360389116729240",
      "offset": 78,
      "mOp": 1,
      "mWR": 1,
      "line": 174,
      "offsetLabel": "mulPointEc_p1_x",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %ECGX       :MSTORE(mulPointEc_p1_x)"
     },
     {
      "CONSTL": "32670510020758816978083085130507043184471273380659243275938904335757337482424",
      "offset": 79,
      "mOp": 1,
      "mWR": 1,
      "line": 175,
      "offsetLabel": "mulPointEc_p1_y",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %ECGY       :MSTORE(mulPointEc_p1_y)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 61,
      "mOp": 1,
      "mWR": 0,
      "line": 178,
      "offsetLabel": "ecrecover_r",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A      :MLOAD(ecrecover_r)"
     },
     {
      "inA": "1",
      "offset": 80,
      "mOp": 1,
      "mWR": 1,
      "line": 179,
      "offsetLabel": "mulPointEc_p2_x",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        A           :MSTORE(mulPointEc_p2_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 65,
      "mOp": 1,
      "mWR": 0,
      "line": 183,
      "offsetLabel": "ecrecover_y",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A      :MLOAD(ecrecover_y)"
     },
     {
      "inA": "1",
      "offset": 81,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3528,
      "call": 1,
      "line": 184,
      "offsetLabel": "mulPointEc_p2_y",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        A           :MSTORE(mulPointEc_p2_y),CALL(mulPointEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 188,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => E         :MLOAD(lastHashKIdUsed)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 189,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        E + 1 => E     :MSTORE(lastHashKIdUsed)"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 190,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0 => HASHPOS"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 191,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        32 => D"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "setB": 1,
      "line": 193,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        %FPEC => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 0,
      "line": 194,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A         :MLOAD(mulPointEc_p3_x)"
     },
     {
      "CONST": "1",
      "bin": 1,
      "binOpcode": 2,
      "line": 195,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        1              :LT                  ; alias assert, mulPointEc_p3_x must be in [0, FPEC - 1]"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 197,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        A              :HASHK(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 85,
      "mOp": 1,
      "mWR": 0,
      "line": 199,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A         :MLOAD(mulPointEc_p3_y)"
     },
     {
      "CONST": "1",
      "bin": 1,
      "binOpcode": 2,
      "line": 200,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        1              :LT                  ; alias assert, mulPointEc_p3_y must be in [0, FPEC - 1]"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 202,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        A              :HASHK(E)"
     },
     {
      "CONST": "64",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 204,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        64             :HASHKLEN(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "line": 205,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A         :HASHKDIGEST(E)"
     },
     {
      "CONSTL": "1461501637330902918203684832716283019655932542975",
      "setB": 1,
      "line": 208,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFn => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 5,
      "line": 209,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => A         :AND"
     },
     {
      "CONST": "0",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2703,
      "line": 210,
      "jmpAddrLabel": "ecrecover_end",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0 => B         :JMP(ecrecover_end)"
     },
     {
      "CONST": "1",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2702,
      "line": 214,
      "jmpAddrLabel": "ecrecover_error",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        1 => B      :JMP(ecrecover_error)"
     },
     {
      "CONST": "2",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2702,
      "line": 217,
      "jmpAddrLabel": "ecrecover_error",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        2 => B      :JMP(ecrecover_error)"
     },
     {
      "CONST": "3",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2702,
      "line": 220,
      "jmpAddrLabel": "ecrecover_error",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        3 => B      :JMP(ecrecover_error)"
     },
     {
      "CONST": "4",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2702,
      "line": 223,
      "jmpAddrLabel": "ecrecover_error",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        4 => B      :JMP(ecrecover_error)"
     },
     {
      "CONST": "5",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2702,
      "line": 226,
      "jmpAddrLabel": "ecrecover_error",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        5 => B      :JMP(ecrecover_error)"
     },
     {
      "CONST": "6",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2702,
      "line": 229,
      "jmpAddrLabel": "ecrecover_error",
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        6 => B      :JMP(ecrecover_error)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 232,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 69,
      "mOp": 1,
      "mWR": 0,
      "line": 235,
      "offsetLabel": "ecrecover_RR",
      "useCTX": 0,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        $ => RR     :MLOAD(ecrecover_RR)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 236,
      "fileName": "ecrecover/ecrecover.zkasm",
      "lineStr": "        :RETURN"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 8,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_addFpEc_AC"
         },
         {
          "op": "add",
          "values": [
           {
            "op": "getReg",
            "regName": "A"
           },
           {
            "op": "getReg",
            "regName": "C"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "ecrecover/addFpEc.zkasm",
      "lineStr": "        1 => B"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getVar",
         "varName": "_addFpEc_AC"
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 14,
      "fileName": "ecrecover/addFpEc.zkasm",
      "lineStr": "        ${_addFpEc_AC >> 256} => D"
     },
     {
      "freeInTag": {
       "op": "getVar",
       "varName": "_addFpEc_AC"
      },
      "inFREE": "1",
      "setE": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 15,
      "fileName": "ecrecover/addFpEc.zkasm",
      "lineStr": "        ${_addFpEc_AC} => E :ARITH"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getVar",
         "varName": "_addFpEc_AC"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
         "offsetLabel": "FPEC"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 22,
      "fileName": "ecrecover/addFpEc.zkasm",
      "lineStr": "        ${_addFpEc_AC / const.FPEC} => B        ; times p"
     },
     {
      "freeInTag": {
       "op": "mod",
       "values": [
        {
         "op": "getVar",
         "varName": "_addFpEc_AC"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
         "offsetLabel": "FPEC"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "line": 23,
      "fileName": "ecrecover/addFpEc.zkasm",
      "lineStr": "        ${_addFpEc_AC % const.FPEC} => C        ; A + C (256 bits)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "setA": 1,
      "line": 24,
      "fileName": "ecrecover/addFpEc.zkasm",
      "lineStr": "        %FPEC => A"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 26,
      "fileName": "ecrecover/addFpEc.zkasm",
      "lineStr": "        E :ARITH,RETURN"
     },
     {
      "inC": "1",
      "setA": 1,
      "setB": 1,
      "line": 8,
      "fileName": "ecrecover/sqFpEc.zkasm",
      "lineStr": "        C => A,B"
     },
     {
      "CONSTL": "0",
      "setC": 1,
      "line": 9,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_sqFpEc_AA"
         },
         {
          "op": "mul",
          "values": [
           {
            "op": "getReg",
            "regName": "A"
           },
           {
            "op": "getReg",
            "regName": "A"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "ecrecover/sqFpEc.zkasm",
      "lineStr": "        0n => C"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getVar",
         "varName": "_sqFpEc_AA"
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 15,
      "fileName": "ecrecover/sqFpEc.zkasm",
      "lineStr": "        ${_sqFpEc_AA >> 256} => D"
     },
     {
      "freeInTag": {
       "op": "getVar",
       "varName": "_sqFpEc_AA"
      },
      "inFREE": "1",
      "setE": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 21,
      "fileName": "ecrecover/sqFpEc.zkasm",
      "lineStr": "        ${_sqFpEc_AA} => E :ARITH"
     },
     {
      "freeInTag": {
       "op": "mod",
       "values": [
        {
         "op": "getVar",
         "varName": "_sqFpEc_AA"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
         "offsetLabel": "FPEC"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "line": 28,
      "fileName": "ecrecover/sqFpEc.zkasm",
      "lineStr": "        ${_sqFpEc_AA % const.FPEC} => C"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getVar",
         "varName": "_sqFpEc_AA"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
         "offsetLabel": "FPEC"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 29,
      "fileName": "ecrecover/sqFpEc.zkasm",
      "lineStr": "        ${_sqFpEc_AA / const.FPEC} => B"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "setA": 1,
      "line": 30,
      "fileName": "ecrecover/sqFpEc.zkasm",
      "lineStr": "        %FPEC => A"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 32,
      "fileName": "ecrecover/sqFpEc.zkasm",
      "lineStr": "        E :ARITH,RETURN"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 8,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_mulFpEc_AB"
         },
         {
          "op": "mul",
          "values": [
           {
            "op": "getReg",
            "regName": "A"
           },
           {
            "op": "getReg",
            "regName": "B"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "ecrecover/mulFpEc.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulFpEc_AB"
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 14,
      "fileName": "ecrecover/mulFpEc.zkasm",
      "lineStr": "        ${_mulFpEc_AB >> 256} => D"
     },
     {
      "freeInTag": {
       "op": "getVar",
       "varName": "_mulFpEc_AB"
      },
      "inFREE": "1",
      "setE": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 20,
      "fileName": "ecrecover/mulFpEc.zkasm",
      "lineStr": "        ${_mulFpEc_AB} => E:ARITH"
     },
     {
      "freeInTag": {
       "op": "mod",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulFpEc_AB"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
         "offsetLabel": "FPEC"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "line": 27,
      "fileName": "ecrecover/mulFpEc.zkasm",
      "lineStr": "        ${_mulFpEc_AB % const.FPEC} => C"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulFpEc_AB"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
         "offsetLabel": "FPEC"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 28,
      "fileName": "ecrecover/mulFpEc.zkasm",
      "lineStr": "        ${_mulFpEc_AB / const.FPEC} => B"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "setA": 1,
      "line": 29,
      "fileName": "ecrecover/mulFpEc.zkasm",
      "lineStr": "        %FPEC => A"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 31,
      "fileName": "ecrecover/mulFpEc.zkasm",
      "lineStr": "        E :ARITH,RETURN"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 8,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_mulFnEc_AB"
         },
         {
          "op": "mul",
          "values": [
           {
            "op": "getReg",
            "regName": "A"
           },
           {
            "op": "getReg",
            "regName": "B"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "ecrecover/mulFnEc.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulFnEc_AB"
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 14,
      "fileName": "ecrecover/mulFnEc.zkasm",
      "lineStr": "        ${_mulFnEc_AB >> 256} => D"
     },
     {
      "freeInTag": {
       "op": "getVar",
       "varName": "_mulFnEc_AB"
      },
      "inFREE": "1",
      "setE": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 20,
      "fileName": "ecrecover/mulFnEc.zkasm",
      "lineStr": "        ${_mulFnEc_AB} => E :ARITH"
     },
     {
      "freeInTag": {
       "op": "mod",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulFnEc_AB"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
         "offsetLabel": "FNEC"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "line": 27,
      "fileName": "ecrecover/mulFnEc.zkasm",
      "lineStr": "        ${_mulFnEc_AB % const.FNEC} => C"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulFnEc_AB"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
         "offsetLabel": "FNEC"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 28,
      "fileName": "ecrecover/mulFnEc.zkasm",
      "lineStr": "        ${_mulFnEc_AB / const.FNEC} => B"
     },
     {
      "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
      "setA": 1,
      "line": 29,
      "fileName": "ecrecover/mulFnEc.zkasm",
      "lineStr": "        %FNEC => A"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 31,
      "fileName": "ecrecover/mulFnEc.zkasm",
      "lineStr": "        E :ARITH,RETURN"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "setB": 1,
      "line": 11,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        %FPEC => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2737,
      "useElseAddr": 1,
      "elseAddr": 2736,
      "line": 12,
      "jmpAddrLabel": "invFpEc_normalized",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        $       :LT,JMPC(invFpEc_normalized)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 1,
      "line": 13,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        $ => A  :SUB"
     },
     {
      "CONSTL": "0",
      "setC": 1,
      "line": 16,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        0n => C"
     },
     {
      "freeInTag": {
       "op": "setVar",
       "values": [
        {
         "op": "declareVar",
         "varName": "_invFpEc_A"
        },
        {
         "op": "functionCall",
         "funcName": "inverseFpEc",
         "params": [
          {
           "op": "getReg",
           "regName": "A"
          }
         ]
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 72,
      "mOp": 1,
      "mWR": 1,
      "line": 19,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_invFpEc_AB"
         },
         {
          "op": "mul",
          "values": [
           {
            "op": "getReg",
            "regName": "A"
           },
           {
            "op": "getVar",
            "varName": "_invFpEc_A"
           }
          ]
         }
        ]
       }
      ],
      "offsetLabel": "invFpEc_tmp",
      "useCTX": 0,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        ${var _invFpEc_A = inverseFpEc(A)} => B :MSTORE(invFpEc_tmp);"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getVar",
         "varName": "_invFpEc_AB"
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 25,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        ${_invFpEc_AB >> 256} => D"
     },
     {
      "freeInTag": {
       "op": "getVar",
       "varName": "_invFpEc_AB"
      },
      "inFREE": "1",
      "setE": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 26,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        ${_invFpEc_AB} => E :ARITH"
     },
     {
      "CONSTL": "1",
      "setC": 1,
      "line": 33,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        1n => C"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getVar",
         "varName": "_invFpEc_AB"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
         "offsetLabel": "FPEC"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 34,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        ${_invFpEc_AB / const.FPEC} => B"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "setA": 1,
      "line": 35,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        %FPEC => A"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 37,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        E :ARITH"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 72,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 38,
      "offsetLabel": "invFpEc_tmp",
      "useCTX": 0,
      "fileName": "ecrecover/invFpEc.zkasm",
      "lineStr": "        $ => B   :MLOAD(invFpEc_tmp),RETURN"
     },
     {
      "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
      "setB": 1,
      "line": 11,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        %FNEC => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2749,
      "useElseAddr": 1,
      "elseAddr": 2748,
      "line": 12,
      "jmpAddrLabel": "invFnEc_normalized",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        $       :LT,JMPC(invFnEc_normalized)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 1,
      "line": 13,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        $ => A  :SUB"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 16,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "freeInTag": {
       "op": "setVar",
       "values": [
        {
         "op": "declareVar",
         "varName": "_invFnEc_A"
        },
        {
         "op": "functionCall",
         "funcName": "inverseFnEc",
         "params": [
          {
           "op": "getReg",
           "regName": "A"
          }
         ]
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 73,
      "mOp": 1,
      "mWR": 1,
      "line": 19,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_invFnEc_AB"
         },
         {
          "op": "mul",
          "values": [
           {
            "op": "getReg",
            "regName": "A"
           },
           {
            "op": "getReg",
            "regName": "B"
           }
          ]
         }
        ]
       }
      ],
      "offsetLabel": "invFnEc_tmp",
      "useCTX": 0,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        ${var _invFnEc_A = inverseFnEc(A)} => B :MSTORE(invFnEc_tmp)"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getVar",
         "varName": "_invFnEc_AB"
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 24,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        ${_invFnEc_AB >> 256} => D"
     },
     {
      "freeInTag": {
       "op": "getVar",
       "varName": "_invFnEc_AB"
      },
      "inFREE": "1",
      "setE": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 25,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        ${_invFnEc_AB} => E :ARITH"
     },
     {
      "CONST": "1",
      "setC": 1,
      "line": 32,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        1 => C"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getVar",
         "varName": "_invFnEc_AB"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
         "offsetLabel": "FNEC"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 33,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        ${_invFnEc_AB / const.FNEC} => B"
     },
     {
      "CONSTL": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
      "setA": 1,
      "line": 34,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        %FNEC => A"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 36,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        E :ARITH"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 73,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 37,
      "offsetLabel": "invFnEc_tmp",
      "useCTX": 0,
      "fileName": "ecrecover/invFnEc.zkasm",
      "lineStr": "        $ => B   :MLOAD(invFnEc_tmp), RETURN"
     },
     {
      "inC": "1",
      "offset": 74,
      "mOp": 1,
      "mWR": 1,
      "line": 12,
      "offsetLabel": "sqrtFpC_tmp",
      "useCTX": 0,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        C               :MSTORE(sqrtFpC_tmp)"
     },
     {
      "freeInTag": {
       "op": "setVar",
       "values": [
        {
         "op": "declareVar",
         "varName": "_sqrtFpEc_sqrt"
        },
        {
         "op": "functionCall",
         "funcName": "sqrtFpEc",
         "params": [
          {
           "op": "getReg",
           "regName": "C"
          }
         ]
        }
       ]
      },
      "inFREE": "1",
      "setA": 1,
      "setC": 1,
      "offset": 75,
      "mOp": 1,
      "mWR": 1,
      "line": 17,
      "offsetLabel": "sqrtFpC_res",
      "useCTX": 0,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        ${var _sqrtFpEc_sqrt = sqrtFpEc(C) } => A,C   :MSTORE(sqrtFpC_res)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "setB": 1,
      "line": 18,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        %FPEC_NON_SQRT => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2771,
      "useElseAddr": 1,
      "elseAddr": 2762,
      "line": 19,
      "jmpAddrLabel": "sqrtFpEc_End",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        $                                             :EQ,JMPC(sqrtFpEc_End)"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 21,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        A => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 22,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_sqrtFpEc_sq"
         },
         {
          "op": "mul",
          "values": [
           {
            "op": "getVar",
            "varName": "_sqrtFpEc_sqrt"
           },
           {
            "op": "getVar",
            "varName": "_sqrtFpEc_sqrt"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getVar",
         "varName": "_sqrtFpEc_sq"
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 26,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        ${_sqrtFpEc_sq >> 256} => D"
     },
     {
      "freeInTag": {
       "op": "getVar",
       "varName": "_sqrtFpEc_sq"
      },
      "inFREE": "1",
      "setE": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 27,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        ${_sqrtFpEc_sq} => E :ARITH"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 74,
      "mOp": 1,
      "mWR": 0,
      "line": 34,
      "offsetLabel": "sqrtFpC_tmp",
      "useCTX": 0,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        $ => C          :MLOAD(sqrtFpC_tmp)"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getVar",
         "varName": "_sqrtFpEc_sq"
        },
        {
         "op": "number",
         "module": "const",
         "num": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
         "offsetLabel": "FPEC"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 35,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        ${_sqrtFpEc_sq / const.FPEC} => B"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "setA": 1,
      "line": 36,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        %FPEC => A"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 37,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        E :ARITH"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 75,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 39,
      "offsetLabel": "sqrtFpC_res",
      "useCTX": 0,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        $ => C          :MLOAD(sqrtFpC_res),RETURN"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 42,
      "fileName": "ecrecover/sqrtFpEc.zkasm",
      "lineStr": "        :RETURN"
     },
     {
      "inRR": "1",
      "offset": 77,
      "mOp": 1,
      "mWR": 1,
      "line": 19,
      "offsetLabel": "checkSqrtFpEc_RR",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        RR          :MSTORE(checkSqrtFpEc_RR)"
     },
     {
      "inC": "1",
      "offset": 76,
      "mOp": 1,
      "mWR": 1,
      "line": 20,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C           :MSTORE(checkSqrtFpEc_base)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 24,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 25,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 26,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 30,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 31,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 32,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 36,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 37,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 38,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 42,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 43,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 44,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 48,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 49,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 50,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 54,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 55,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 56,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 60,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 61,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 62,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 66,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 67,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 68,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 72,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 73,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 74,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 78,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 79,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 80,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 84,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 85,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 86,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 90,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 91,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 92,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 96,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 97,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 98,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 102,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 103,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 104,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 108,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 109,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 110,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 114,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 115,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 116,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 120,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 121,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 122,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 126,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 127,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 128,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 132,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 133,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 134,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 138,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 139,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 140,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 144,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 145,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 146,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 150,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 151,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 152,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 156,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 157,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 158,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 162,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 163,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 164,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 168,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 169,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 170,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 174,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 175,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 176,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 180,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 181,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 182,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 186,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 187,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 188,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 192,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 193,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 194,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 198,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 199,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 200,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 204,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 205,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 206,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 210,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 211,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 212,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 216,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 217,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 218,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 222,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 223,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 224,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 228,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 229,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 230,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 234,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 235,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 236,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 240,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 241,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 242,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 246,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 247,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 248,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 252,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 253,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 254,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 258,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 259,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 260,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 264,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 265,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 266,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 270,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 271,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 272,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 276,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 277,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 278,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 282,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 283,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 284,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 288,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 289,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 290,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 294,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 295,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 296,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 300,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 301,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 302,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 306,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 307,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 308,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 312,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 313,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 314,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 318,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 319,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 320,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 324,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 325,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 326,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 330,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 331,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 332,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 336,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 337,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 338,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 342,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 343,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 344,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 348,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 349,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 350,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 354,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 355,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 356,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 360,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 361,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 362,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 366,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 367,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 368,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 372,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 373,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 374,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 378,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 379,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 380,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 384,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 385,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 386,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 390,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 391,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 392,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 396,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 397,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 398,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 402,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 403,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 404,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 408,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 409,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 410,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 414,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 415,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 416,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 420,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 421,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 422,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 426,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 427,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 428,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 432,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 433,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 434,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 438,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 439,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 440,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 444,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 445,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 446,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 450,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 451,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 452,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 456,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 457,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 458,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 462,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 463,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 464,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 468,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 469,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 470,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 474,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 475,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 476,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 480,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 481,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 482,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 486,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 487,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 488,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 492,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 493,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 494,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 498,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 499,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 500,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 504,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 505,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 506,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 510,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 511,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 512,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 516,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 517,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 518,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 522,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 523,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 524,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 528,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 529,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 530,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 534,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 535,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 536,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 540,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 541,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 542,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 546,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 547,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 548,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 552,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 553,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 554,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 558,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 559,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 560,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 564,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 565,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 566,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 570,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 571,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 572,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 576,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 577,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 578,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 582,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 583,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 584,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 588,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 589,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 590,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 594,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 595,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 596,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 600,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 601,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 602,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 606,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 607,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 608,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 612,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 613,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 614,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 618,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 619,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 620,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 624,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 625,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 626,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 630,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 631,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 632,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 636,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 637,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 638,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 642,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 643,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 644,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 648,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 649,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 650,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 654,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 655,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 656,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 660,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 661,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 662,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 666,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 667,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 668,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 672,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 673,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 674,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 678,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 679,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 680,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 684,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 685,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 686,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 690,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 691,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 692,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 696,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 697,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 698,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 702,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 703,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 704,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 708,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 709,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 710,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 714,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 715,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 716,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 720,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 721,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 722,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 726,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 727,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 728,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 732,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 733,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 734,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 738,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 739,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 740,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 744,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 745,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 746,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 750,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 751,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 752,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 756,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 757,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 758,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 762,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 763,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 764,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 768,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 769,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 770,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 774,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 775,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 776,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 780,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 781,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 782,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 786,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 787,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 788,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 792,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 793,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 794,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 798,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 799,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 800,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 804,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 805,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 806,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 810,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 811,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 812,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 816,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 817,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 818,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 822,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 823,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 824,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 828,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 829,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 830,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 834,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 835,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 836,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 840,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 841,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 842,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 846,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 847,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 848,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 852,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 853,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 854,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 858,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 859,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 860,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 864,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 865,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 866,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 870,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 871,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 872,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 876,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 877,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 878,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 882,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 883,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 884,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 888,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 889,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 890,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 894,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 895,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 896,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 900,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 901,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 902,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 906,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 907,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 908,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 912,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 913,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 914,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 918,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 919,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 920,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 924,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 925,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 926,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 930,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 931,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 932,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 936,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 937,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 938,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 942,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 943,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 944,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 948,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 949,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 950,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 954,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 955,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 956,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 960,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 961,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 962,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 966,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 967,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 968,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 972,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 973,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 974,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 978,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 979,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 980,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 984,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 985,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 986,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 990,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 991,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 992,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 996,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 997,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 998,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1002,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1003,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1004,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1008,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1009,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1010,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1014,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1015,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1016,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1020,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1021,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1022,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1026,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1027,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1028,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1032,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1033,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1034,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1038,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1039,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1040,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1044,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1045,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1046,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1050,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1051,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1052,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1056,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1057,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1058,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1062,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1063,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1064,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1068,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1069,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1070,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1074,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1075,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1076,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1080,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1081,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1082,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1086,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1087,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1088,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1092,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1093,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1094,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1098,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1099,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1100,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1104,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1105,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1106,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1110,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1111,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1112,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1116,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1117,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1118,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1122,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1123,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1124,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1128,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1129,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1130,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1134,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1135,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1136,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1140,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1141,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1142,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1146,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1147,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1148,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1152,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1153,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1154,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1158,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1159,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1160,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1164,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1165,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1166,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1170,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1171,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1172,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1176,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1177,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1178,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1182,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1183,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1184,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1188,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1189,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1190,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1194,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1195,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1196,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1200,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1201,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1202,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1206,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1207,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1208,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1212,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1213,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1214,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1218,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1219,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1220,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1224,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1225,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1226,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1230,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1231,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1232,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1236,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1237,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1238,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1242,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1243,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1244,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1248,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1249,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1250,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1254,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1255,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1256,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1260,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1261,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1262,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1266,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1267,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1268,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1272,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1273,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1274,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1278,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1279,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1280,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1284,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1285,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1286,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1290,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1291,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1292,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1296,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1297,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1298,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1302,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1303,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1304,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1308,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1309,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1310,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1314,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1315,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1316,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1320,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1321,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1322,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1326,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1327,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1328,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1332,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1333,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1334,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1338,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1339,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1340,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1344,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1345,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1346,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1350,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1351,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1352,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1358,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1364,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1365,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1366,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1370,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1371,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1372,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1376,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1377,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1378,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1382,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1383,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1384,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1388,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1389,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1390,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1394,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1395,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1396,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1400,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1401,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1402,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1406,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1407,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1408,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1412,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1413,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1414,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1418,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1419,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1420,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1424,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1425,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1426,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1430,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1431,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1432,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1436,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1437,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1438,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1442,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1443,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1444,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1448,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1449,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1450,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1454,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1455,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1456,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1460,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1461,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1462,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1466,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1467,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1468,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1472,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1473,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1474,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1478,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1479,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1480,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1484,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1485,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1486,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1490,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1491,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1492,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1497,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1501,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1505,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1509,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1514,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1515,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1516,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1521,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1525,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1526,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1527,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1531,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1532,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1533,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2712,
      "call": 1,
      "line": 1537,
      "jmpAddrLabel": "sqFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "                :CALL(sqFpEc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 76,
      "mOp": 1,
      "mWR": 0,
      "line": 1538,
      "offsetLabel": "checkSqrtFpEc_base",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A \t:MLOAD(checkSqrtFpEc_base)"
     },
     {
      "inC": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2720,
      "call": 1,
      "line": 1539,
      "jmpAddrLabel": "mulFpEc",
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B\t:CALL(mulFpEc)"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 1542,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        C => B"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671662",
      "setA": 1,
      "line": 1543,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        %FPEC_MINUS_ONE => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 77,
      "mOp": 1,
      "mWR": 0,
      "line": 1544,
      "offsetLabel": "checkSqrtFpEc_RR",
      "useCTX": 0,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => RR     :MLOAD(checkSqrtFpEc_RR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1545,
      "fileName": "ecrecover/checkSqrtFpEc.zkasm",
      "lineStr": "        $ => A      :EQ,RETURN"
     },
     {
      "inRR": "1",
      "offset": 86,
      "mOp": 1,
      "mWR": 1,
      "line": 25,
      "offsetLabel": "mulPointEc_RR",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        RR      :MSTORE(mulPointEc_RR)"
     },
     {
      "inHASHPOS": "1",
      "offset": 89,
      "mOp": 1,
      "mWR": 1,
      "line": 26,
      "offsetLabel": "mulPointEc_HASHPOS",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        HASHPOS :MSTORE(mulPointEc_HASHPOS)"
     },
     {
      "CONST": "256",
      "setRCX": 1,
      "line": 28,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        256 => RCX"
     },
     {
      "CONSTL": "0",
      "setHASHPOS": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 1,
      "line": 31,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        0n => HASHPOS :MSTORE(mulPointEc_p3_x)"
     },
     {
      "CONSTL": "0",
      "offset": 85,
      "mOp": 1,
      "mWR": 1,
      "line": 33,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        0n      :MSTORE(mulPointEc_p3_y)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 78,
      "mOp": 1,
      "mWR": 0,
      "line": 35,
      "offsetLabel": "mulPointEc_p1_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => A  :MLOAD(mulPointEc_p1_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 79,
      "mOp": 1,
      "mWR": 0,
      "line": 36,
      "offsetLabel": "mulPointEc_p1_y",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => B  :MLOAD(mulPointEc_p1_y)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 80,
      "mOp": 1,
      "mWR": 0,
      "line": 37,
      "offsetLabel": "mulPointEc_p2_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => C  :MLOAD(mulPointEc_p2_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 81,
      "mOp": 1,
      "mWR": 0,
      "line": 38,
      "offsetLabel": "mulPointEc_p2_y",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => D  :MLOAD(mulPointEc_p2_y)"
     },
     {
      "freeInTag": {
       "op": "eq",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3546,
      "useElseAddr": 1,
      "elseAddr": 3538,
      "line": 41,
      "jmpAddrLabel": "mulPointDiffInitalPoints",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${A == C}     :JMPZ(mulPointDiffInitalPoints)"
     },
     {
      "inC": "1",
      "assert": 1,
      "line": 42,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        C             :ASSERT"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 45,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        D => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3542,
      "useElseAddr": 1,
      "elseAddr": 3541,
      "line": 46,
      "jmpAddrLabel": "mulPointSameInitalPoints",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $             :EQ,JMPC(mulPointSameInitalPoints)"
     },
     {
      "CONSTL": "1",
      "offset": 90,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3549,
      "line": 50,
      "offsetLabel": "mulPointEc_p12_empty",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_loop",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        1n            :MSTORE(mulPointEc_p12_empty),JMP(mulPointEc_loop)"
     },
     {
      "CONSTL": "0",
      "offset": 90,
      "mOp": 1,
      "mWR": 1,
      "line": 54,
      "offsetLabel": "mulPointEc_p12_empty",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        0n                        :MSTORE(mulPointEc_p12_empty)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 78,
      "mOp": 1,
      "mWR": 0,
      "line": 55,
      "offsetLabel": "mulPointEc_p1_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => A                    :MLOAD(mulPointEc_p1_x)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "xDblPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 87,
      "mOp": 1,
      "mWR": 1,
      "line": 56,
      "offsetLabel": "mulPointEc_p12_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${xDblPointEc(A,B)} => E  :MSTORE(mulPointEc_p12_x)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "yDblPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "arithEq0": 0,
      "arithEq1": 0,
      "arithEq2": 1,
      "offset": 88,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3549,
      "line": 57,
      "offsetLabel": "mulPointEc_p12_y",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_loop",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${yDblPointEc(A,B)}       :ARITH_ECADD_SAME, MSTORE(mulPointEc_p12_y),JMP(mulPointEc_loop)"
     },
     {
      "CONSTL": "0",
      "offset": 90,
      "mOp": 1,
      "mWR": 1,
      "line": 61,
      "offsetLabel": "mulPointEc_p12_empty",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        0n                            :MSTORE(mulPointEc_p12_empty)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "xAddPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getReg",
         "regName": "C"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 87,
      "mOp": 1,
      "mWR": 1,
      "line": 62,
      "offsetLabel": "mulPointEc_p12_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${xAddPointEc(A,B,C,D)} => E  :MSTORE(mulPointEc_p12_x)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "yAddPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getReg",
         "regName": "C"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      },
      "inFREE": "1",
      "arithEq0": 0,
      "arithEq1": 1,
      "arithEq2": 0,
      "offset": 88,
      "mOp": 1,
      "mWR": 1,
      "line": 63,
      "offsetLabel": "mulPointEc_p12_y",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${yAddPointEc(A,B,C,D)}       :ARITH_ECADD_DIFFERENT, MSTORE(mulPointEc_p12_y)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "setB": 1,
      "offset": 82,
      "mOp": 1,
      "mWR": 0,
      "line": 87,
      "offsetLabel": "mulPointEc_k1",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => A,B  :MLOAD(mulPointEc_k1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "bin": 1,
      "binOpcode": 0,
      "offset": 82,
      "mOp": 1,
      "mWR": 1,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3555,
      "useElseAddr": 1,
      "elseAddr": 3551,
      "line": 89,
      "offsetLabel": "mulPointEc_k1",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_k11",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => E    :ADD,MSTORE(mulPointEc_k1),JMPC(mulPointEc_k11)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "setB": 1,
      "offset": 83,
      "mOp": 1,
      "mWR": 0,
      "line": 94,
      "offsetLabel": "mulPointEc_k2",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => A,B  :MLOAD(mulPointEc_k2)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "bin": 1,
      "binOpcode": 0,
      "offset": 83,
      "mOp": 1,
      "mWR": 1,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3562,
      "useElseAddr": 1,
      "elseAddr": 3553,
      "line": 96,
      "offsetLabel": "mulPointEc_k2",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_k10_k21",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => E    :ADD,MSTORE(mulPointEc_k2),JMPC(mulPointEc_k10_k21)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 0,
      "line": 100,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => A  :MLOAD(mulPointEc_p3_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 85,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3576,
      "line": 101,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_square",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => B  :MLOAD(mulPointEc_p3_y), JMP(mulPointEc_square)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "setB": 1,
      "offset": 83,
      "mOp": 1,
      "mWR": 0,
      "line": 105,
      "offsetLabel": "mulPointEc_k2",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => A,B  :MLOAD(mulPointEc_k2)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "bin": 1,
      "binOpcode": 0,
      "offset": 83,
      "mOp": 1,
      "mWR": 1,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3559,
      "useElseAddr": 1,
      "elseAddr": 3557,
      "line": 106,
      "offsetLabel": "mulPointEc_k2",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_k11_k21",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => E    :ADD,MSTORE(mulPointEc_k2),JMPC(mulPointEc_k11_k21)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 78,
      "mOp": 1,
      "mWR": 0,
      "line": 110,
      "offsetLabel": "mulPointEc_p1_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => C  :MLOAD(mulPointEc_p1_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 79,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3564,
      "line": 111,
      "offsetLabel": "mulPointEc_p1_y",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_p2_loaded",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => D  :MLOAD(mulPointEc_p1_y), JMP(mulPointEc_p2_loaded)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 90,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3560,
      "useElseAddr": 1,
      "elseAddr": 3553,
      "line": 116,
      "offsetLabel": "mulPointEc_p12_empty",
      "useCTX": 0,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "mulPointEc_k10_k20",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $       :MLOAD(mulPointEc_p12_empty),JMPNZ(mulPointEc_k10_k20)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 87,
      "mOp": 1,
      "mWR": 0,
      "line": 118,
      "offsetLabel": "mulPointEc_p12_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => C  :MLOAD(mulPointEc_p12_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 88,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3564,
      "line": 119,
      "offsetLabel": "mulPointEc_p12_y",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_p2_loaded",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => D  :MLOAD(mulPointEc_p12_y), JMP(mulPointEc_p2_loaded)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 80,
      "mOp": 1,
      "mWR": 0,
      "line": 123,
      "offsetLabel": "mulPointEc_p2_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => C  :MLOAD(mulPointEc_p2_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 81,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3564,
      "line": 124,
      "offsetLabel": "mulPointEc_p2_y",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_p2_loaded",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => D  :MLOAD(mulPointEc_p2_y), JMP(mulPointEc_p2_loaded)"
     },
     {
      "inHASHPOS": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3573,
      "useElseAddr": 1,
      "elseAddr": 3565,
      "line": 130,
      "jmpAddrLabel": "mulPointEc_p3_assignment",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        HASHPOS   :JMPZ(mulPointEc_p3_assignment)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 133,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        C => A  ; point_x"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 0,
      "line": 134,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => B  :MLOAD(mulPointEc_p3_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3582,
      "useElseAddr": 1,
      "elseAddr": 3568,
      "line": 135,
      "jmpAddrLabel": "mulPointEc_x_equals_before_add",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $        :EQ,JMPC(mulPointEc_x_equals_before_add)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 0,
      "line": 138,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => A  :MLOAD(mulPointEc_p3_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 85,
      "mOp": 1,
      "mWR": 0,
      "line": 139,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => B  :MLOAD(mulPointEc_p3_y)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "xAddPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getReg",
         "regName": "C"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 1,
      "line": 142,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${xAddPointEc(A,B,C,D)} => E :MSTORE(mulPointEc_p3_x)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "yAddPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getReg",
         "regName": "C"
        },
        {
         "op": "getReg",
         "regName": "D"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "arithEq0": 0,
      "arithEq1": 1,
      "arithEq2": 0,
      "offset": 85,
      "mOp": 1,
      "mWR": 1,
      "line": 143,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${yAddPointEc(A,B,C,D)} => B :ARITH_ECADD_DIFFERENT, MSTORE(mulPointEc_p3_y)"
     },
     {
      "inE": "1",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3576,
      "line": 147,
      "jmpAddrLabel": "mulPointEc_square",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        E => A  :JMP(mulPointEc_square)"
     },
     {
      "CONST": "1",
      "setHASHPOS": 1,
      "line": 152,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        1 => HASHPOS    ; flag, mulPointEc_p3 has a value, no-empty"
     },
     {
      "inC": "1",
      "setA": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 1,
      "line": 153,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        C => A   :MSTORE(mulPointEc_p3_x)"
     },
     {
      "inD": "1",
      "setB": 1,
      "offset": 85,
      "mOp": 1,
      "mWR": 1,
      "line": 154,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        D => B   :MSTORE(mulPointEc_p3_y)"
     },
     {
      "inRCX": "1",
      "CONST": "-1",
      "setRCX": 1,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3595,
      "useElseAddr": 1,
      "elseAddr": 3577,
      "line": 159,
      "jmpAddrLabel": "mulPointEc_end_loop",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        RCX - 1 => RCX    :JMPZ(mulPointEc_end_loop)"
     },
     {
      "inHASHPOS": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3549,
      "useElseAddr": 1,
      "elseAddr": 3578,
      "line": 162,
      "jmpAddrLabel": "mulPointEc_loop",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        HASHPOS           :JMPZ(mulPointEc_loop)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 0,
      "line": 164,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => A  :MLOAD(mulPointEc_p3_x)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 85,
      "mOp": 1,
      "mWR": 0,
      "line": 165,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => B  :MLOAD(mulPointEc_p3_y)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "xDblPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 1,
      "line": 167,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${xDblPointEc(A,B)} => E  :MSTORE(mulPointEc_p3_x)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "yDblPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "arithEq0": 0,
      "arithEq1": 0,
      "arithEq2": 1,
      "offset": 85,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3549,
      "line": 168,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_loop",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${yDblPointEc(A,B)} :ARITH_ECADD_SAME, MSTORE(mulPointEc_p3_y), JMP(mulPointEc_loop)"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 179,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        D => A ; D contains y of point to add (depends of bits k1,k2)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 85,
      "mOp": 1,
      "mWR": 0,
      "line": 180,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => B :MLOAD(mulPointEc_p3_y) ; point1.y"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3591,
      "useElseAddr": 1,
      "elseAddr": 3585,
      "line": 181,
      "jmpAddrLabel": "mulPointEc_same_point_to_add",
      "elseAddrLabel": "next",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $      :EQ,JMPC(mulPointEc_same_point_to_add)"
     },
     {
      "CONSTL": "115792089237316195423570985008687907853269984665640564039457584007908834671662",
      "setA": 1,
      "line": 192,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        %FPEC_MINUS_ONE => A"
     },
     {
      "CONST": "0",
      "bin": 1,
      "binOpcode": 2,
      "line": 193,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        0           :LT"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 196,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        D => B"
     },
     {
      "CONST": "0",
      "bin": 1,
      "binOpcode": 2,
      "line": 197,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        0           :LT"
     },
     {
      "CONSTL": "0",
      "setHASHPOS": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 1,
      "line": 200,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        0n => HASHPOS   :MSTORE(mulPointEc_p3_x)"
     },
     {
      "CONSTL": "0",
      "offset": 85,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3576,
      "line": 201,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_square",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        0n              :MSTORE(mulPointEc_p3_y), JMP(mulPointEc_square)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 204,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        C => A"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 205,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        D => B"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "xDblPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 84,
      "mOp": 1,
      "mWR": 1,
      "line": 207,
      "offsetLabel": "mulPointEc_p3_x",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${xDblPointEc(A,B)} => E  :MSTORE(mulPointEc_p3_x)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "yDblPointEc",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "arithEq0": 0,
      "arithEq1": 0,
      "arithEq2": 1,
      "offset": 85,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3572,
      "line": 208,
      "offsetLabel": "mulPointEc_p3_y",
      "useCTX": 0,
      "jmpAddrLabel": "mulPointEc_after_add",
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        ${yDblPointEc(A,B)} => B  :ARITH_ECADD_SAME, MSTORE(mulPointEc_p3_y), JMP(mulPointEc_after_add)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 86,
      "mOp": 1,
      "mWR": 0,
      "line": 212,
      "offsetLabel": "mulPointEc_RR",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => RR         :MLOAD(mulPointEc_RR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setHASHPOS": 1,
      "offset": 89,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 213,
      "offsetLabel": "mulPointEc_HASHPOS",
      "useCTX": 0,
      "fileName": "ecrecover/mulPointEc.zkasm",
      "lineStr": "        $ => HASHPOS    :MLOAD(mulPointEc_HASHPOS), RETURN"
     },
     {
      "CONST": "0",
      "offset": 36,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 8,
      "offsetLabel": "touchedSR",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    0               :MSTORE(touchedSR), RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 36,
      "mOp": 1,
      "mWR": 0,
      "line": 12,
      "offsetLabel": "touchedSR",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => A          :MLOAD(touchedSR)"
     },
     {
      "inA": "1",
      "offset": 41,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 13,
      "offsetLabel": "initTouchedSR",
      "useCTX": 1,
      "fileName": "touched.zkasm",
      "lineStr": "    A               :MSTORE(initTouchedSR), RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 41,
      "mOp": 1,
      "mWR": 0,
      "line": 17,
      "offsetLabel": "initTouchedSR",
      "useCTX": 1,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => A               :MLOAD(initTouchedSR)"
     },
     {
      "inA": "1",
      "offset": 36,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 18,
      "offsetLabel": "touchedSR",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    A                    :MSTORE(touchedSR), RETURN"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 3603,
      "line": 25,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "touched.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 3604,
      "line": 26,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "touched.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "265125",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 3605,
      "line": 27,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "touched.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*2 :JMPN(outOfCountersPoseidon)"
     },
     {
      "inB": "1",
      "offset": 91,
      "mOp": 1,
      "mWR": 1,
      "line": 29,
      "offsetLabel": "tmpB",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    B               :MSTORE(tmpB)"
     },
     {
      "inC": "1",
      "offset": 92,
      "mOp": 1,
      "mWR": 1,
      "line": 30,
      "offsetLabel": "tmpC",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    C               :MSTORE(tmpC)"
     },
     {
      "inE": "1",
      "offset": 94,
      "mOp": 1,
      "mWR": 1,
      "line": 31,
      "offsetLabel": "tmpE",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    E               :MSTORE(tmpE)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 34,
      "fileName": "touched.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3612,
      "useElseAddr": 1,
      "elseAddr": 3610,
      "line": 35,
      "jmpAddrLabel": "checkWarmed",
      "elseAddrLabel": "next",
      "fileName": "touched.zkasm",
      "lineStr": "    $                           :EQ, JMPC(checkWarmed)"
     },
     {
      "CONST": "10",
      "setB": 1,
      "line": 37,
      "fileName": "touched.zkasm",
      "lineStr": "    10 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3625,
      "useElseAddr": 1,
      "elseAddr": 3612,
      "line": 38,
      "jmpAddrLabel": "finishColdPrecompiled",
      "elseAddrLabel": "next",
      "fileName": "touched.zkasm",
      "lineStr": "    $                           :LT, JMPC(finishColdPrecompiled)"
     },
     {
      "inSR": "1",
      "offset": 95,
      "mOp": 1,
      "mWR": 1,
      "line": 42,
      "offsetLabel": "tmpStateRoot",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    SR              :MSTORE(tmpStateRoot)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 36,
      "mOp": 1,
      "mWR": 0,
      "line": 43,
      "offsetLabel": "touchedSR",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => SR         :MLOAD(touchedSR)"
     },
     {
      "CONST": "5",
      "setB": 1,
      "line": 47,
      "fileName": "touched.zkasm",
      "lineStr": "    %SMT_KEY_TOUCHED_ADDR => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 48,
      "fileName": "touched.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "sRD": 1,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3618,
      "useElseAddr": 1,
      "elseAddr": 3617,
      "line": 49,
      "jmpAddrLabel": "markWarmAddress",
      "elseAddrLabel": "next",
      "fileName": "touched.zkasm",
      "lineStr": "    $ => D          :SLOAD, JMPZ(markWarmAddress)"
     },
     {
      "CONST": "0",
      "setD": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3620,
      "line": 52,
      "jmpAddrLabel": "finishColdAddress",
      "fileName": "touched.zkasm",
      "lineStr": "    0 => D          :JMP(finishColdAddress)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 56,
      "fileName": "touched.zkasm",
      "lineStr": "    1 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 57,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => SR         :SSTORE"
     },
     {
      "inSR": "1",
      "offset": 36,
      "mOp": 1,
      "mWR": 1,
      "line": 62,
      "offsetLabel": "touchedSR",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    SR              :MSTORE(touchedSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 95,
      "mOp": 1,
      "mWR": 0,
      "line": 63,
      "offsetLabel": "tmpStateRoot",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => SR         :MLOAD(tmpStateRoot)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 91,
      "mOp": 1,
      "mWR": 0,
      "line": 66,
      "offsetLabel": "tmpB",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpB)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 92,
      "mOp": 1,
      "mWR": 0,
      "line": 67,
      "offsetLabel": "tmpC",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpC)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 94,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 68,
      "offsetLabel": "tmpE",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpE), RETURN"
     },
     {
      "CONST": "0",
      "setD": 1,
      "line": 71,
      "fileName": "touched.zkasm",
      "lineStr": "    0 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 91,
      "mOp": 1,
      "mWR": 0,
      "line": 73,
      "offsetLabel": "tmpB",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpB)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 92,
      "mOp": 1,
      "mWR": 0,
      "line": 74,
      "offsetLabel": "tmpC",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpC)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 94,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 75,
      "offsetLabel": "tmpE",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpE), RETURN"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 3630,
      "line": 83,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "touched.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "265125",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 3631,
      "line": 84,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "touched.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*2 :JMPN(outOfCountersPoseidon)"
     },
     {
      "inB": "1",
      "offset": 91,
      "mOp": 1,
      "mWR": 1,
      "line": 86,
      "offsetLabel": "tmpB",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    B               :MSTORE(tmpB)"
     },
     {
      "inD": "1",
      "offset": 93,
      "mOp": 1,
      "mWR": 1,
      "line": 87,
      "offsetLabel": "tmpD",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    D               :MSTORE(tmpD)"
     },
     {
      "inE": "1",
      "offset": 94,
      "mOp": 1,
      "mWR": 1,
      "line": 88,
      "offsetLabel": "tmpE",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    E               :MSTORE(tmpE)"
     },
     {
      "inSR": "1",
      "offset": 95,
      "mOp": 1,
      "mWR": 1,
      "line": 91,
      "offsetLabel": "tmpStateRoot",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    SR              :MSTORE(tmpStateRoot)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 36,
      "mOp": 1,
      "mWR": 0,
      "line": 92,
      "offsetLabel": "touchedSR",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => SR         :MLOAD(touchedSR)"
     },
     {
      "CONST": "6",
      "setB": 1,
      "line": 96,
      "fileName": "touched.zkasm",
      "lineStr": "    %SMT_KEY_TOUCHED_SLOTS => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "sRD": 1,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3639,
      "useElseAddr": 1,
      "elseAddr": 3638,
      "line": 97,
      "jmpAddrLabel": "markWarmSlot",
      "elseAddrLabel": "next",
      "fileName": "touched.zkasm",
      "lineStr": "    $ => D          :SLOAD, JMPZ(markWarmSlot)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3642,
      "line": 100,
      "jmpAddrLabel": "finishColdSlot",
      "fileName": "touched.zkasm",
      "lineStr": "    0 => A          :JMP(finishColdSlot)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 104,
      "fileName": "touched.zkasm",
      "lineStr": "    1 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 105,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => SR         :SSTORE"
     },
     {
      "CONST": "1",
      "setA": 1,
      "line": 107,
      "fileName": "touched.zkasm",
      "lineStr": "    1 => A"
     },
     {
      "inSR": "1",
      "offset": 36,
      "mOp": 1,
      "mWR": 1,
      "line": 111,
      "offsetLabel": "touchedSR",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    SR              :MSTORE(touchedSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 95,
      "mOp": 1,
      "mWR": 0,
      "line": 112,
      "offsetLabel": "tmpStateRoot",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => SR         :MLOAD(tmpStateRoot)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 91,
      "mOp": 1,
      "mWR": 0,
      "line": 115,
      "offsetLabel": "tmpB",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpB)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 93,
      "mOp": 1,
      "mWR": 0,
      "line": 116,
      "offsetLabel": "tmpD",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpD)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 94,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 117,
      "offsetLabel": "tmpE",
      "useCTX": 0,
      "fileName": "touched.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpE), RETURN"
     },
     {
      "CONSTL": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 5,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1n => B                                                                :RETURN ;2**0"
     },
     {
      "CONSTL": "2",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 6,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2n => B                                                                :RETURN ;2**1"
     },
     {
      "CONSTL": "4",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 7,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4n => B                                                                :RETURN ;2**2"
     },
     {
      "CONSTL": "8",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 8,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8n => B                                                                :RETURN ;2**3"
     },
     {
      "CONSTL": "16",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 9,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10n => B                                                               :RETURN ;2**4"
     },
     {
      "CONSTL": "32",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 10,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20n => B                                                               :RETURN ;2**5"
     },
     {
      "CONSTL": "64",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 11,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40n => B                                                               :RETURN ;2**6"
     },
     {
      "CONSTL": "128",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 12,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80n => B                                                               :RETURN ;2**7"
     },
     {
      "CONSTL": "256",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 13,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100n => B                                                              :RETURN ;2**8"
     },
     {
      "CONSTL": "512",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 14,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200n => B                                                              :RETURN ;2**9"
     },
     {
      "CONSTL": "1024",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 15,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400n => B                                                              :RETURN ;2**10"
     },
     {
      "CONSTL": "2048",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 16,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800n => B                                                              :RETURN ;2**11"
     },
     {
      "CONSTL": "4096",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 17,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000n => B                                                             :RETURN ;2**12"
     },
     {
      "CONSTL": "8192",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 18,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000n => B                                                             :RETURN ;2**13"
     },
     {
      "CONSTL": "16384",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 19,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000n => B                                                             :RETURN ;2**14"
     },
     {
      "CONSTL": "32768",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 20,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000n => B                                                             :RETURN ;2**15"
     },
     {
      "CONSTL": "65536",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 21,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000n => B                                                            :RETURN ;2**16"
     },
     {
      "CONSTL": "131072",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 22,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000n => B                                                            :RETURN ;2**17"
     },
     {
      "CONSTL": "262144",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 23,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000n => B                                                            :RETURN ;2**18"
     },
     {
      "CONSTL": "524288",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 24,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000n => B                                                            :RETURN ;2**19"
     },
     {
      "CONSTL": "1048576",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 25,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000n => B                                                           :RETURN ;2**20"
     },
     {
      "CONSTL": "2097152",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 26,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000n => B                                                           :RETURN ;2**21"
     },
     {
      "CONSTL": "4194304",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 27,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000n => B                                                           :RETURN ;2**22"
     },
     {
      "CONSTL": "8388608",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 28,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000n => B                                                           :RETURN ;2**23"
     },
     {
      "CONSTL": "16777216",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 29,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000n => B                                                          :RETURN ;2**24"
     },
     {
      "CONSTL": "33554432",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 30,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000n => B                                                          :RETURN ;2**25"
     },
     {
      "CONSTL": "67108864",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 31,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000n => B                                                          :RETURN ;2**26"
     },
     {
      "CONSTL": "134217728",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 32,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000n => B                                                          :RETURN ;2**27"
     },
     {
      "CONSTL": "268435456",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 33,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000n => B                                                         :RETURN ;2**28"
     },
     {
      "CONSTL": "536870912",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 34,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000n => B                                                         :RETURN ;2**29"
     },
     {
      "CONSTL": "1073741824",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 35,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000n => B                                                         :RETURN ;2**30"
     },
     {
      "CONSTL": "2147483648",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 36,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000n => B                                                         :RETURN ;2**31"
     },
     {
      "CONSTL": "4294967296",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 37,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000n => B                                                        :RETURN ;2**32"
     },
     {
      "CONSTL": "8589934592",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 38,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000n => B                                                        :RETURN ;2**33"
     },
     {
      "CONSTL": "17179869184",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 39,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000n => B                                                        :RETURN ;2**34"
     },
     {
      "CONSTL": "34359738368",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 40,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000n => B                                                        :RETURN ;2**35"
     },
     {
      "CONSTL": "68719476736",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 41,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000n => B                                                       :RETURN ;2**36"
     },
     {
      "CONSTL": "137438953472",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 42,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000n => B                                                       :RETURN ;2**37"
     },
     {
      "CONSTL": "274877906944",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 43,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000n => B                                                       :RETURN ;2**38"
     },
     {
      "CONSTL": "549755813888",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 44,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000n => B                                                       :RETURN ;2**39"
     },
     {
      "CONSTL": "1099511627776",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 45,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000n => B                                                      :RETURN ;2**40"
     },
     {
      "CONSTL": "2199023255552",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 46,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000n => B                                                      :RETURN ;2**41"
     },
     {
      "CONSTL": "4398046511104",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 47,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000n => B                                                      :RETURN ;2**42"
     },
     {
      "CONSTL": "8796093022208",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 48,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000n => B                                                      :RETURN ;2**43"
     },
     {
      "CONSTL": "17592186044416",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 49,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000n => B                                                     :RETURN ;2**44"
     },
     {
      "CONSTL": "35184372088832",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 50,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000n => B                                                     :RETURN ;2**45"
     },
     {
      "CONSTL": "70368744177664",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 51,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000n => B                                                     :RETURN ;2**46"
     },
     {
      "CONSTL": "140737488355328",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 52,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000n => B                                                     :RETURN ;2**47"
     },
     {
      "CONSTL": "281474976710656",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 53,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000n => B                                                    :RETURN ;2**48"
     },
     {
      "CONSTL": "562949953421312",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 54,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000n => B                                                    :RETURN ;2**49"
     },
     {
      "CONSTL": "1125899906842624",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 55,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000n => B                                                    :RETURN ;2**50"
     },
     {
      "CONSTL": "2251799813685248",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 56,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000n => B                                                    :RETURN ;2**51"
     },
     {
      "CONSTL": "4503599627370496",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 57,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000n => B                                                   :RETURN ;2**52"
     },
     {
      "CONSTL": "9007199254740992",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 58,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000n => B                                                   :RETURN ;2**53"
     },
     {
      "CONSTL": "18014398509481984",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 59,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000n => B                                                   :RETURN ;2**54"
     },
     {
      "CONSTL": "36028797018963968",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 60,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000n => B                                                   :RETURN ;2**55"
     },
     {
      "CONSTL": "72057594037927936",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 61,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000n => B                                                  :RETURN ;2**56"
     },
     {
      "CONSTL": "144115188075855872",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 62,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000n => B                                                  :RETURN ;2**57"
     },
     {
      "CONSTL": "288230376151711744",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 63,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000n => B                                                  :RETURN ;2**58"
     },
     {
      "CONSTL": "576460752303423488",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 64,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000n => B                                                  :RETURN ;2**59"
     },
     {
      "CONSTL": "1152921504606846976",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 65,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000n => B                                                 :RETURN ;2**60"
     },
     {
      "CONSTL": "2305843009213693952",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 66,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000n => B                                                 :RETURN ;2**61"
     },
     {
      "CONSTL": "4611686018427387904",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 67,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000n => B                                                 :RETURN ;2**62"
     },
     {
      "CONSTL": "9223372036854775808",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 68,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000n => B                                                 :RETURN ;2**63"
     },
     {
      "CONSTL": "18446744073709551616",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 69,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000n => B                                                :RETURN ;2**64"
     },
     {
      "CONSTL": "36893488147419103232",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 70,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000n => B                                                :RETURN ;2**65"
     },
     {
      "CONSTL": "73786976294838206464",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 71,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000n => B                                                :RETURN ;2**66"
     },
     {
      "CONSTL": "147573952589676412928",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 72,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000n => B                                                :RETURN ;2**67"
     },
     {
      "CONSTL": "295147905179352825856",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 73,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000n => B                                               :RETURN ;2**68"
     },
     {
      "CONSTL": "590295810358705651712",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 74,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000n => B                                               :RETURN ;2**69"
     },
     {
      "CONSTL": "1180591620717411303424",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 75,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000n => B                                               :RETURN ;2**70"
     },
     {
      "CONSTL": "2361183241434822606848",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 76,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000n => B                                               :RETURN ;2**71"
     },
     {
      "CONSTL": "4722366482869645213696",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 77,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000n => B                                              :RETURN ;2**72"
     },
     {
      "CONSTL": "9444732965739290427392",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 78,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000n => B                                              :RETURN ;2**73"
     },
     {
      "CONSTL": "18889465931478580854784",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 79,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000n => B                                              :RETURN ;2**74"
     },
     {
      "CONSTL": "37778931862957161709568",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 80,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000n => B                                              :RETURN ;2**75"
     },
     {
      "CONSTL": "75557863725914323419136",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 81,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000n => B                                             :RETURN ;2**76"
     },
     {
      "CONSTL": "151115727451828646838272",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 82,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000n => B                                             :RETURN ;2**77"
     },
     {
      "CONSTL": "302231454903657293676544",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 83,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000n => B                                             :RETURN ;2**78"
     },
     {
      "CONSTL": "604462909807314587353088",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 84,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000n => B                                             :RETURN ;2**79"
     },
     {
      "CONSTL": "1208925819614629174706176",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 85,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000n => B                                            :RETURN ;2**80"
     },
     {
      "CONSTL": "2417851639229258349412352",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 86,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000n => B                                            :RETURN ;2**81"
     },
     {
      "CONSTL": "4835703278458516698824704",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 87,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000n => B                                            :RETURN ;2**82"
     },
     {
      "CONSTL": "9671406556917033397649408",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 88,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000n => B                                            :RETURN ;2**83"
     },
     {
      "CONSTL": "19342813113834066795298816",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 89,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000n => B                                           :RETURN ;2**84"
     },
     {
      "CONSTL": "38685626227668133590597632",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 90,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000n => B                                           :RETURN ;2**85"
     },
     {
      "CONSTL": "77371252455336267181195264",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 91,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000n => B                                           :RETURN ;2**86"
     },
     {
      "CONSTL": "154742504910672534362390528",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 92,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000n => B                                           :RETURN ;2**87"
     },
     {
      "CONSTL": "309485009821345068724781056",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 93,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000n => B                                          :RETURN ;2**88"
     },
     {
      "CONSTL": "618970019642690137449562112",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 94,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000n => B                                          :RETURN ;2**89"
     },
     {
      "CONSTL": "1237940039285380274899124224",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 95,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000n => B                                          :RETURN ;2**90"
     },
     {
      "CONSTL": "2475880078570760549798248448",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 96,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000n => B                                          :RETURN ;2**91"
     },
     {
      "CONSTL": "4951760157141521099596496896",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 97,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000n => B                                         :RETURN ;2**92"
     },
     {
      "CONSTL": "9903520314283042199192993792",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 98,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000n => B                                         :RETURN ;2**93"
     },
     {
      "CONSTL": "19807040628566084398385987584",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 99,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000n => B                                         :RETURN ;2**94"
     },
     {
      "CONSTL": "39614081257132168796771975168",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 100,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000n => B                                         :RETURN ;2**95"
     },
     {
      "CONSTL": "79228162514264337593543950336",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 101,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000n => B                                        :RETURN ;2**96"
     },
     {
      "CONSTL": "158456325028528675187087900672",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 102,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000n => B                                        :RETURN ;2**97"
     },
     {
      "CONSTL": "316912650057057350374175801344",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 103,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000n => B                                        :RETURN ;2**98"
     },
     {
      "CONSTL": "633825300114114700748351602688",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 104,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000n => B                                        :RETURN ;2**99"
     },
     {
      "CONSTL": "1267650600228229401496703205376",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 105,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000n => B                                       :RETURN ;2**100"
     },
     {
      "CONSTL": "2535301200456458802993406410752",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 106,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000n => B                                       :RETURN ;2**101"
     },
     {
      "CONSTL": "5070602400912917605986812821504",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 107,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000n => B                                       :RETURN ;2**102"
     },
     {
      "CONSTL": "10141204801825835211973625643008",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 108,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000n => B                                       :RETURN ;2**103"
     },
     {
      "CONSTL": "20282409603651670423947251286016",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 109,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000n => B                                      :RETURN ;2**104"
     },
     {
      "CONSTL": "40564819207303340847894502572032",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 110,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000n => B                                      :RETURN ;2**105"
     },
     {
      "CONSTL": "81129638414606681695789005144064",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 111,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000n => B                                      :RETURN ;2**106"
     },
     {
      "CONSTL": "162259276829213363391578010288128",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 112,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000n => B                                      :RETURN ;2**107"
     },
     {
      "CONSTL": "324518553658426726783156020576256",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 113,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000n => B                                     :RETURN ;2**108"
     },
     {
      "CONSTL": "649037107316853453566312041152512",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 114,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000n => B                                     :RETURN ;2**109"
     },
     {
      "CONSTL": "1298074214633706907132624082305024",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 115,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000n => B                                     :RETURN ;2**110"
     },
     {
      "CONSTL": "2596148429267413814265248164610048",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 116,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000n => B                                     :RETURN ;2**111"
     },
     {
      "CONSTL": "5192296858534827628530496329220096",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 117,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000n => B                                    :RETURN ;2**112"
     },
     {
      "CONSTL": "10384593717069655257060992658440192",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 118,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000n => B                                    :RETURN ;2**113"
     },
     {
      "CONSTL": "20769187434139310514121985316880384",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 119,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000n => B                                    :RETURN ;2**114"
     },
     {
      "CONSTL": "41538374868278621028243970633760768",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 120,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000n => B                                    :RETURN ;2**115"
     },
     {
      "CONSTL": "83076749736557242056487941267521536",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 121,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000n => B                                   :RETURN ;2**116"
     },
     {
      "CONSTL": "166153499473114484112975882535043072",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 122,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000n => B                                   :RETURN ;2**117"
     },
     {
      "CONSTL": "332306998946228968225951765070086144",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 123,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000n => B                                   :RETURN ;2**118"
     },
     {
      "CONSTL": "664613997892457936451903530140172288",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 124,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000n => B                                   :RETURN ;2**119"
     },
     {
      "CONSTL": "1329227995784915872903807060280344576",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 125,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000n => B                                  :RETURN ;2**120"
     },
     {
      "CONSTL": "2658455991569831745807614120560689152",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 126,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000n => B                                  :RETURN ;2**121"
     },
     {
      "CONSTL": "5316911983139663491615228241121378304",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 127,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000n => B                                  :RETURN ;2**122"
     },
     {
      "CONSTL": "10633823966279326983230456482242756608",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 128,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000n => B                                  :RETURN ;2**123"
     },
     {
      "CONSTL": "21267647932558653966460912964485513216",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 129,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000n => B                                 :RETURN ;2**124"
     },
     {
      "CONSTL": "42535295865117307932921825928971026432",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 130,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000n => B                                 :RETURN ;2**125"
     },
     {
      "CONSTL": "85070591730234615865843651857942052864",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 131,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000n => B                                 :RETURN ;2**126"
     },
     {
      "CONSTL": "170141183460469231731687303715884105728",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 132,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000n => B                                 :RETURN ;2**127"
     },
     {
      "CONSTL": "340282366920938463463374607431768211456",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 133,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000n => B                                :RETURN ;2**128"
     },
     {
      "CONSTL": "680564733841876926926749214863536422912",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 134,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000n => B                                :RETURN ;2**129"
     },
     {
      "CONSTL": "1361129467683753853853498429727072845824",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 135,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000n => B                                :RETURN ;2**130"
     },
     {
      "CONSTL": "2722258935367507707706996859454145691648",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 136,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000n => B                                :RETURN ;2**131"
     },
     {
      "CONSTL": "5444517870735015415413993718908291383296",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 137,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000n => B                               :RETURN ;2**132"
     },
     {
      "CONSTL": "10889035741470030830827987437816582766592",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 138,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000n => B                               :RETURN ;2**133"
     },
     {
      "CONSTL": "21778071482940061661655974875633165533184",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 139,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000n => B                               :RETURN ;2**134"
     },
     {
      "CONSTL": "43556142965880123323311949751266331066368",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 140,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000n => B                               :RETURN ;2**135"
     },
     {
      "CONSTL": "87112285931760246646623899502532662132736",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 141,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000n => B                              :RETURN ;2**136"
     },
     {
      "CONSTL": "174224571863520493293247799005065324265472",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 142,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000n => B                              :RETURN ;2**137"
     },
     {
      "CONSTL": "348449143727040986586495598010130648530944",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 143,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000n => B                              :RETURN ;2**138"
     },
     {
      "CONSTL": "696898287454081973172991196020261297061888",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 144,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000n => B                              :RETURN ;2**139"
     },
     {
      "CONSTL": "1393796574908163946345982392040522594123776",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 145,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000n => B                             :RETURN ;2**140"
     },
     {
      "CONSTL": "2787593149816327892691964784081045188247552",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 146,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000n => B                             :RETURN ;2**141"
     },
     {
      "CONSTL": "5575186299632655785383929568162090376495104",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 147,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000n => B                             :RETURN ;2**142"
     },
     {
      "CONSTL": "11150372599265311570767859136324180752990208",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 148,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000n => B                             :RETURN ;2**143"
     },
     {
      "CONSTL": "22300745198530623141535718272648361505980416",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 149,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000n => B                            :RETURN ;2**144"
     },
     {
      "CONSTL": "44601490397061246283071436545296723011960832",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 150,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000n => B                            :RETURN ;2**145"
     },
     {
      "CONSTL": "89202980794122492566142873090593446023921664",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 151,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000n => B                            :RETURN ;2**146"
     },
     {
      "CONSTL": "178405961588244985132285746181186892047843328",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 152,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000n => B                            :RETURN ;2**147"
     },
     {
      "CONSTL": "356811923176489970264571492362373784095686656",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 153,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000000n => B                           :RETURN ;2**148"
     },
     {
      "CONSTL": "713623846352979940529142984724747568191373312",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 154,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000000n => B                           :RETURN ;2**149"
     },
     {
      "CONSTL": "1427247692705959881058285969449495136382746624",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 155,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000000n => B                           :RETURN ;2**150"
     },
     {
      "CONSTL": "2854495385411919762116571938898990272765493248",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 156,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000000n => B                           :RETURN ;2**151"
     },
     {
      "CONSTL": "5708990770823839524233143877797980545530986496",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 157,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000000n => B                          :RETURN ;2**152"
     },
     {
      "CONSTL": "11417981541647679048466287755595961091061972992",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 158,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000000n => B                          :RETURN ;2**153"
     },
     {
      "CONSTL": "22835963083295358096932575511191922182123945984",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 159,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000000n => B                          :RETURN ;2**154"
     },
     {
      "CONSTL": "45671926166590716193865151022383844364247891968",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 160,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000000n => B                          :RETURN ;2**155"
     },
     {
      "CONSTL": "91343852333181432387730302044767688728495783936",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 161,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000000n => B                         :RETURN ;2**156"
     },
     {
      "CONSTL": "182687704666362864775460604089535377456991567872",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 162,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000000n => B                         :RETURN ;2**157"
     },
     {
      "CONSTL": "365375409332725729550921208179070754913983135744",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 163,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000000n => B                         :RETURN ;2**158"
     },
     {
      "CONSTL": "730750818665451459101842416358141509827966271488",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 164,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000000n => B                         :RETURN ;2**159"
     },
     {
      "CONSTL": "1461501637330902918203684832716283019655932542976",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 165,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000000000n => B                        :RETURN ;2**160"
     },
     {
      "CONSTL": "2923003274661805836407369665432566039311865085952",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 166,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000000000n => B                        :RETURN ;2**161"
     },
     {
      "CONSTL": "5846006549323611672814739330865132078623730171904",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 167,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000000000n => B                        :RETURN ;2**162"
     },
     {
      "CONSTL": "11692013098647223345629478661730264157247460343808",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 168,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000000000n => B                        :RETURN ;2**163"
     },
     {
      "CONSTL": "23384026197294446691258957323460528314494920687616",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 169,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000000000n => B                       :RETURN ;2**164"
     },
     {
      "CONSTL": "46768052394588893382517914646921056628989841375232",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 170,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000000000n => B                       :RETURN ;2**165"
     },
     {
      "CONSTL": "93536104789177786765035829293842113257979682750464",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 171,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000000000n => B                       :RETURN ;2**166"
     },
     {
      "CONSTL": "187072209578355573530071658587684226515959365500928",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 172,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000000000n => B                       :RETURN ;2**167"
     },
     {
      "CONSTL": "374144419156711147060143317175368453031918731001856",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 173,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000000000n => B                      :RETURN ;2**168"
     },
     {
      "CONSTL": "748288838313422294120286634350736906063837462003712",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 174,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000000000n => B                      :RETURN ;2**169"
     },
     {
      "CONSTL": "1496577676626844588240573268701473812127674924007424",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 175,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000000000n => B                      :RETURN ;2**170"
     },
     {
      "CONSTL": "2993155353253689176481146537402947624255349848014848",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 176,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000000000n => B                      :RETURN ;2**171"
     },
     {
      "CONSTL": "5986310706507378352962293074805895248510699696029696",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 177,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000000000000n => B                     :RETURN ;2**172"
     },
     {
      "CONSTL": "11972621413014756705924586149611790497021399392059392",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 178,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000000000000n => B                     :RETURN ;2**173"
     },
     {
      "CONSTL": "23945242826029513411849172299223580994042798784118784",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 179,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000000000000n => B                     :RETURN ;2**174"
     },
     {
      "CONSTL": "47890485652059026823698344598447161988085597568237568",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 180,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000000000000n => B                     :RETURN ;2**175"
     },
     {
      "CONSTL": "95780971304118053647396689196894323976171195136475136",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 181,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000000000000n => B                    :RETURN ;2**176"
     },
     {
      "CONSTL": "191561942608236107294793378393788647952342390272950272",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 182,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000000000000n => B                    :RETURN ;2**177"
     },
     {
      "CONSTL": "383123885216472214589586756787577295904684780545900544",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 183,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000000000000n => B                    :RETURN ;2**178"
     },
     {
      "CONSTL": "766247770432944429179173513575154591809369561091801088",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 184,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000000000000n => B                    :RETURN ;2**179"
     },
     {
      "CONSTL": "1532495540865888858358347027150309183618739122183602176",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 185,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000000000000n => B                   :RETURN ;2**180"
     },
     {
      "CONSTL": "3064991081731777716716694054300618367237478244367204352",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 186,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000000000000n => B                   :RETURN ;2**181"
     },
     {
      "CONSTL": "6129982163463555433433388108601236734474956488734408704",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 187,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000000000000n => B                   :RETURN ;2**182"
     },
     {
      "CONSTL": "12259964326927110866866776217202473468949912977468817408",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 188,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000000000000n => B                   :RETURN ;2**183"
     },
     {
      "CONSTL": "24519928653854221733733552434404946937899825954937634816",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 189,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000000000000000n => B                  :RETURN ;2**184"
     },
     {
      "CONSTL": "49039857307708443467467104868809893875799651909875269632",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 190,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000000000000000n => B                  :RETURN ;2**185"
     },
     {
      "CONSTL": "98079714615416886934934209737619787751599303819750539264",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 191,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000000000000000n => B                  :RETURN ;2**186"
     },
     {
      "CONSTL": "196159429230833773869868419475239575503198607639501078528",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 192,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000000000000000n => B                  :RETURN ;2**187"
     },
     {
      "CONSTL": "392318858461667547739736838950479151006397215279002157056",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 193,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000000000000000n => B                 :RETURN ;2**188"
     },
     {
      "CONSTL": "784637716923335095479473677900958302012794430558004314112",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 194,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000000000000000n => B                 :RETURN ;2**189"
     },
     {
      "CONSTL": "1569275433846670190958947355801916604025588861116008628224",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 195,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000000000000000n => B                 :RETURN ;2**190"
     },
     {
      "CONSTL": "3138550867693340381917894711603833208051177722232017256448",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 196,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000000000000000n => B                 :RETURN ;2**191"
     },
     {
      "CONSTL": "6277101735386680763835789423207666416102355444464034512896",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 197,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000000000000000n => B                :RETURN ;2**192"
     },
     {
      "CONSTL": "12554203470773361527671578846415332832204710888928069025792",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 198,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000000000000000n => B                :RETURN ;2**193"
     },
     {
      "CONSTL": "25108406941546723055343157692830665664409421777856138051584",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 199,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000000000000000n => B                :RETURN ;2**194"
     },
     {
      "CONSTL": "50216813883093446110686315385661331328818843555712276103168",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 200,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000000000000000n => B                :RETURN ;2**195"
     },
     {
      "CONSTL": "100433627766186892221372630771322662657637687111424552206336",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 201,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000000000000000000n => B               :RETURN ;2**196"
     },
     {
      "CONSTL": "200867255532373784442745261542645325315275374222849104412672",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 202,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000000000000000000n => B               :RETURN ;2**197"
     },
     {
      "CONSTL": "401734511064747568885490523085290650630550748445698208825344",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 203,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000000000000000000n => B               :RETURN ;2**198"
     },
     {
      "CONSTL": "803469022129495137770981046170581301261101496891396417650688",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 204,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000000000000000000n => B               :RETURN ;2**199"
     },
     {
      "CONSTL": "1606938044258990275541962092341162602522202993782792835301376",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 205,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000000000000000000n => B              :RETURN ;2**200"
     },
     {
      "CONSTL": "3213876088517980551083924184682325205044405987565585670602752",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 206,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000000000000000000n => B              :RETURN ;2**201"
     },
     {
      "CONSTL": "6427752177035961102167848369364650410088811975131171341205504",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 207,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000000000000000000n => B              :RETURN ;2**202"
     },
     {
      "CONSTL": "12855504354071922204335696738729300820177623950262342682411008",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 208,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000000000000000000n => B              :RETURN ;2**203"
     },
     {
      "CONSTL": "25711008708143844408671393477458601640355247900524685364822016",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 209,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000000000000000000n => B             :RETURN ;2**204"
     },
     {
      "CONSTL": "51422017416287688817342786954917203280710495801049370729644032",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 210,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000000000000000000n => B             :RETURN ;2**205"
     },
     {
      "CONSTL": "102844034832575377634685573909834406561420991602098741459288064",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 211,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000000000000000000n => B             :RETURN ;2**206"
     },
     {
      "CONSTL": "205688069665150755269371147819668813122841983204197482918576128",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 212,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000000000000000000n => B             :RETURN ;2**207"
     },
     {
      "CONSTL": "411376139330301510538742295639337626245683966408394965837152256",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 213,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000000000000000000000n => B            :RETURN ;2**208"
     },
     {
      "CONSTL": "822752278660603021077484591278675252491367932816789931674304512",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 214,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000000000000000000000n => B            :RETURN ;2**209"
     },
     {
      "CONSTL": "1645504557321206042154969182557350504982735865633579863348609024",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 215,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000000000000000000000n => B            :RETURN ;2**210"
     },
     {
      "CONSTL": "3291009114642412084309938365114701009965471731267159726697218048",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 216,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000000000000000000000n => B            :RETURN ;2**211"
     },
     {
      "CONSTL": "6582018229284824168619876730229402019930943462534319453394436096",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 217,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000000000000000000000n => B           :RETURN ;2**212"
     },
     {
      "CONSTL": "13164036458569648337239753460458804039861886925068638906788872192",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 218,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000000000000000000000n => B           :RETURN ;2**213"
     },
     {
      "CONSTL": "26328072917139296674479506920917608079723773850137277813577744384",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 219,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000000000000000000000n => B           :RETURN ;2**214"
     },
     {
      "CONSTL": "52656145834278593348959013841835216159447547700274555627155488768",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 220,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000000000000000000000n => B           :RETURN ;2**215"
     },
     {
      "CONSTL": "105312291668557186697918027683670432318895095400549111254310977536",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 221,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000000000000000000000n => B          :RETURN ;2**216"
     },
     {
      "CONSTL": "210624583337114373395836055367340864637790190801098222508621955072",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 222,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000000000000000000000n => B          :RETURN ;2**217"
     },
     {
      "CONSTL": "421249166674228746791672110734681729275580381602196445017243910144",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 223,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000000000000000000000n => B          :RETURN ;2**218"
     },
     {
      "CONSTL": "842498333348457493583344221469363458551160763204392890034487820288",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 224,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000000000000000000000n => B          :RETURN ;2**219"
     },
     {
      "CONSTL": "1684996666696914987166688442938726917102321526408785780068975640576",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 225,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000000000000000000000000n => B         :RETURN ;2**220"
     },
     {
      "CONSTL": "3369993333393829974333376885877453834204643052817571560137951281152",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 226,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000000000000000000000000n => B         :RETURN ;2**221"
     },
     {
      "CONSTL": "6739986666787659948666753771754907668409286105635143120275902562304",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 227,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000000000000000000000000n => B         :RETURN ;2**222"
     },
     {
      "CONSTL": "13479973333575319897333507543509815336818572211270286240551805124608",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 228,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000000000000000000000000n => B         :RETURN ;2**223"
     },
     {
      "CONSTL": "26959946667150639794667015087019630673637144422540572481103610249216",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 229,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000000000000000000000000n => B        :RETURN ;2**224"
     },
     {
      "CONSTL": "53919893334301279589334030174039261347274288845081144962207220498432",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 230,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000000000000000000000000n => B        :RETURN ;2**225"
     },
     {
      "CONSTL": "107839786668602559178668060348078522694548577690162289924414440996864",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 231,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000000000000000000000000n => B        :RETURN ;2**226"
     },
     {
      "CONSTL": "215679573337205118357336120696157045389097155380324579848828881993728",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 232,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000000000000000000000000n => B        :RETURN ;2**227"
     },
     {
      "CONSTL": "431359146674410236714672241392314090778194310760649159697657763987456",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 233,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000000000000000000000000n => B       :RETURN ;2**228"
     },
     {
      "CONSTL": "862718293348820473429344482784628181556388621521298319395315527974912",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 234,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000000000000000000000000n => B       :RETURN ;2**229"
     },
     {
      "CONSTL": "1725436586697640946858688965569256363112777243042596638790631055949824",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 235,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000000000000000000000000n => B       :RETURN ;2**230"
     },
     {
      "CONSTL": "3450873173395281893717377931138512726225554486085193277581262111899648",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 236,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000000000000000000000000n => B       :RETURN ;2**231"
     },
     {
      "CONSTL": "6901746346790563787434755862277025452451108972170386555162524223799296",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 237,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000000000000000000000000000n => B      :RETURN ;2**232"
     },
     {
      "CONSTL": "13803492693581127574869511724554050904902217944340773110325048447598592",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 238,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000000000000000000000000000n => B      :RETURN ;2**233"
     },
     {
      "CONSTL": "27606985387162255149739023449108101809804435888681546220650096895197184",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 239,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000000000000000000000000000n => B      :RETURN ;2**234"
     },
     {
      "CONSTL": "55213970774324510299478046898216203619608871777363092441300193790394368",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 240,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000000000000000000000000000n => B      :RETURN ;2**235"
     },
     {
      "CONSTL": "110427941548649020598956093796432407239217743554726184882600387580788736",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 241,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000000000000000000000000000n => B     :RETURN ;2**236"
     },
     {
      "CONSTL": "220855883097298041197912187592864814478435487109452369765200775161577472",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 242,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000000000000000000000000000n => B     :RETURN ;2**237"
     },
     {
      "CONSTL": "441711766194596082395824375185729628956870974218904739530401550323154944",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 243,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000000000000000000000000000n => B     :RETURN ;2**238"
     },
     {
      "CONSTL": "883423532389192164791648750371459257913741948437809479060803100646309888",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 244,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000000000000000000000000000n => B     :RETURN ;2**239"
     },
     {
      "CONSTL": "1766847064778384329583297500742918515827483896875618958121606201292619776",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 245,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000000000000000000000000000n => B    :RETURN ;2**240"
     },
     {
      "CONSTL": "3533694129556768659166595001485837031654967793751237916243212402585239552",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 246,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000000000000000000000000000n => B    :RETURN ;2**241"
     },
     {
      "CONSTL": "7067388259113537318333190002971674063309935587502475832486424805170479104",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 247,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000000000000000000000000000n => B    :RETURN ;2**242"
     },
     {
      "CONSTL": "14134776518227074636666380005943348126619871175004951664972849610340958208",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 248,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000000000000000000000000000n => B    :RETURN ;2**243"
     },
     {
      "CONSTL": "28269553036454149273332760011886696253239742350009903329945699220681916416",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 249,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x10000000000000000000000000000000000000000000000000000000000000n => B   :RETURN ;2**244"
     },
     {
      "CONSTL": "56539106072908298546665520023773392506479484700019806659891398441363832832",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 250,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x20000000000000000000000000000000000000000000000000000000000000n => B   :RETURN ;2**245"
     },
     {
      "CONSTL": "113078212145816597093331040047546785012958969400039613319782796882727665664",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 251,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x40000000000000000000000000000000000000000000000000000000000000n => B   :RETURN ;2**246"
     },
     {
      "CONSTL": "226156424291633194186662080095093570025917938800079226639565593765455331328",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 252,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x80000000000000000000000000000000000000000000000000000000000000n => B   :RETURN ;2**247"
     },
     {
      "CONSTL": "452312848583266388373324160190187140051835877600158453279131187530910662656",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 253,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x100000000000000000000000000000000000000000000000000000000000000n => B  :RETURN ;2**248"
     },
     {
      "CONSTL": "904625697166532776746648320380374280103671755200316906558262375061821325312",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 254,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x200000000000000000000000000000000000000000000000000000000000000n => B  :RETURN ;2**249"
     },
     {
      "CONSTL": "1809251394333065553493296640760748560207343510400633813116524750123642650624",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 255,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x400000000000000000000000000000000000000000000000000000000000000n => B  :RETURN ;2**250"
     },
     {
      "CONSTL": "3618502788666131106986593281521497120414687020801267626233049500247285301248",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 256,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x800000000000000000000000000000000000000000000000000000000000000n => B  :RETURN ;2**251"
     },
     {
      "CONSTL": "7237005577332262213973186563042994240829374041602535252466099000494570602496",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 257,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x1000000000000000000000000000000000000000000000000000000000000000n => B :RETURN ;2**252"
     },
     {
      "CONSTL": "14474011154664524427946373126085988481658748083205070504932198000989141204992",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 258,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x2000000000000000000000000000000000000000000000000000000000000000n => B :RETURN ;2**253"
     },
     {
      "CONSTL": "28948022309329048855892746252171976963317496166410141009864396001978282409984",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 259,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x4000000000000000000000000000000000000000000000000000000000000000n => B :RETURN ;2**254"
     },
     {
      "CONSTL": "57896044618658097711785492504343953926634992332820282019728792003956564819968",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 260,
      "fileName": "2-exp.zkasm",
      "lineStr": "    0x8000000000000000000000000000000000000000000000000000000000000000n => B :RETURN ;2**255"
     },
     {
      "inSR": "1",
      "offset": 33,
      "mOp": 1,
      "mWR": 1,
      "line": 30,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onProcessTx"
         }
        ]
       }
      ],
      "offsetLabel": "originSR",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        SR                              :MSTORE(originSR)"
     },
     {
      "inSR": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 31,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        SR                              :MSTORE(initSR)"
     },
     {
      "CONST": "7868988",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 3906,
      "line": 33,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_STEPS - STEP - 100000 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "497974",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 3907,
      "line": 34,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_BINARY - CNT_BINARY - 100   :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 11,
      "mOp": 1,
      "mWR": 0,
      "line": 35,
      "offsetLabel": "txHash",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txHash)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 8,
      "mOp": 1,
      "mWR": 0,
      "line": 37,
      "offsetLabel": "txR",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 7,
      "mOp": 1,
      "mWR": 0,
      "line": 38,
      "offsetLabel": "txS",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => C                          :MLOAD(txS)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 9,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 2615,
      "call": 1,
      "line": 39,
      "offsetLabel": "txV",
      "useCTX": 1,
      "jmpAddrLabel": "ecrecover_tx",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => D                          :MLOAD(txV), CALL(ecrecover_tx)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 42,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => B"
     },
     {
      "inA": "1",
      "offset": 10,
      "mOp": 1,
      "mWR": 1,
      "line": 43,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(txSrcAddr)"
     },
     {
      "inA": "1",
      "offset": 28,
      "mOp": 1,
      "mWR": 1,
      "line": 44,
      "offsetLabel": "txSrcOriginAddr",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(txSrcOriginAddr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4198,
      "useElseAddr": 1,
      "elseAddr": 3915,
      "line": 45,
      "jmpAddrLabel": "invalidIntrinsicTxSignature",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :EQ,JMPC(invalidIntrinsicTxSignature)"
     },
     {
      "CONST": "4",
      "setB": 1,
      "line": 51,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_SC_LENGTH => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 52,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3918,
      "useElseAddr": 1,
      "elseAddr": 4205,
      "line": 53,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidIntrinsicTxSenderCode",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :SLOAD, JMPNZ(invalidIntrinsicTxSenderCode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 40,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3919,
      "useElseAddr": 1,
      "elseAddr": 3922,
      "line": 60,
      "offsetLabel": "isPreEIP155",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "endCheckChainId",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(isPreEIP155), JMPNZ(endCheckChainId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 6,
      "mOp": 1,
      "mWR": 0,
      "line": 61,
      "offsetLabel": "txChainId",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txChainId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 7,
      "mOp": 1,
      "mWR": 0,
      "line": 62,
      "offsetLabel": "chainID",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(chainID)                                       ; A: chainId tx"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3922,
      "useElseAddr": 1,
      "elseAddr": 4199,
      "line": 63,
      "jmpAddrLabel": "endCheckChainId",
      "elseAddrLabel": "invalidIntrinsicTxChainId",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :EQ,JMPC(endCheckChainId, invalidIntrinsicTxChainId)  ; If A == B --> endCheckChainId"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3597,
      "call": 1,
      "line": 67,
      "offsetLabel": "txSrcOriginAddr",
      "useCTX": 0,
      "jmpAddrLabel": "initTouchedTree",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr), CALL(initTouchedTree)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 68,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "process-tx.zkasm",
      "lineStr": "                                        :CALL(isColdAddress) ; add tx.origin to touched addresses"
     },
     {
      "CONST": "0",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "line": 69,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0                               :MSTORE(depth) ; Initial depth is 0"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 5,
      "mOp": 1,
      "mWR": 0,
      "line": 72,
      "offsetLabel": "txGasPriceRLP",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txGasPriceRLP)"
     },
     {
      "inA": "1",
      "offset": 29,
      "mOp": 1,
      "mWR": 1,
      "line": 73,
      "offsetLabel": "txGasPrice",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(txGasPrice)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "setE": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 78,
      "offsetLabel": "txSrcOriginAddr",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A, E                       :MLOAD(txSrcOriginAddr) ; Address of the origin to A and E"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 79,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_NONCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 80,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 81,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :SLOAD"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 4,
      "mOp": 1,
      "mWR": 0,
      "line": 82,
      "offsetLabel": "txNonce",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txNonce)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3933,
      "useElseAddr": 1,
      "elseAddr": 4200,
      "line": 83,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidIntrinsicTxNonce",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => C                          :EQ, JMPNC(invalidIntrinsicTxNonce) ; Compare nonce state tree with nonce transaction"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 85,
      "fileName": "process-tx.zkasm",
      "lineStr": "        1 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "bin": 1,
      "binOpcode": 0,
      "line": 86,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => D                          :ADD ; compute [nonce + 1 => D]"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 87,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E => A"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 88,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_NONCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 89,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 90,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => SR                         :SSTORE ; Store the nonce plus one"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 0,
      "mOp": 1,
      "mWR": 0,
      "line": 97,
      "offsetLabel": "txGasLimit",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txGasLimit)"
     },
     {
      "CONST": "30000000",
      "setA": 1,
      "line": 99,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %TX_GAS_LIMIT => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4204,
      "useElseAddr": 1,
      "elseAddr": 3942,
      "line": 100,
      "jmpAddrLabel": "invalidIntrinsicBatchGasLimit",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :LT,JMPC(invalidIntrinsicBatchGasLimit)"
     },
     {
      "CONST": "21000",
      "setE": 1,
      "line": 103,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %BASE_TX_GAS => E ; Store init intrinsic gas at E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3945,
      "useElseAddr": 1,
      "elseAddr": 3944,
      "line": 104,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "getCalldataGasCost",
      "elseAddrLabel": "addDeploymentGasCost",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(isCreateContract), JMPNZ(addDeploymentGasCost, getCalldataGasCost)"
     },
     {
      "CONST": "53000",
      "setE": 1,
      "line": 107,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %BASE_TX_DEPLOY_GAS => E ; 53000 gas if transaction is a create"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 110,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txCalldataLen)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 111,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3960,
      "useElseAddr": 1,
      "elseAddr": 3948,
      "line": 112,
      "jmpAddrLabel": "endCalldataIntrinsicGas",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :EQ,JMPC(endCalldataIntrinsicGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setHASHPOS": 1,
      "offset": 39,
      "mOp": 1,
      "mWR": 0,
      "line": 115,
      "offsetLabel": "dataStarts",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => HASHPOS                    :MLOAD(dataStarts)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3950,
      "line": 116,
      "jmpAddrLabel": "loopBytes",
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => C                          :JMP(loopBytes)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 3951,
      "line": 119,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inA": "1",
      "inC": "-1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3960,
      "useElseAddr": 1,
      "elseAddr": 3952,
      "line": 120,
      "jmpAddrLabel": "endCalldataIntrinsicGas",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        A - C - 1                       :JMPN(endCalldataIntrinsicGas)"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 121,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 122,
      "offsetLabel": "batchHashDataId",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 123,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => D                          :HASHK1(E)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 124,
      "fileName": "process-tx.zkasm",
      "lineStr": "        B => E"
     },
     {
      "inC": "1",
      "CONST": "1",
      "setC": 1,
      "line": 125,
      "fileName": "process-tx.zkasm",
      "lineStr": "        C + 1 => C"
     },
     {
      "inD": "1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3958,
      "useElseAddr": 1,
      "elseAddr": 3959,
      "line": 126,
      "jmpAddrLabel": "add4Gas",
      "elseAddrLabel": "add16Gas",
      "fileName": "process-tx.zkasm",
      "lineStr": "        D - 1                           :JMPN(add4Gas, add16Gas)"
     },
     {
      "inE": "1",
      "CONST": "4",
      "setE": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3950,
      "line": 129,
      "jmpAddrLabel": "loopBytes",
      "fileName": "process-tx.zkasm",
      "lineStr": "        E + 4 => E                      :JMP(loopBytes)"
     },
     {
      "inE": "1",
      "CONST": "16",
      "setE": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3950,
      "line": 132,
      "jmpAddrLabel": "loopBytes",
      "fileName": "process-tx.zkasm",
      "lineStr": "        E + 16 => E                     :JMP(loopBytes)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 0,
      "mOp": 1,
      "mWR": 0,
      "line": 136,
      "offsetLabel": "txGasLimit",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txGasLimit)"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 137,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4201,
      "useElseAddr": 1,
      "elseAddr": 3963,
      "line": 138,
      "jmpAddrLabel": "invalidIntrinsicTxGasLimit",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :LT, JMPC(invalidIntrinsicTxGasLimit)"
     },
     {
      "inE": "1",
      "offset": 23,
      "mOp": 1,
      "mWR": 1,
      "line": 140,
      "offsetLabel": "gasCalldata",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E                               :MSTORE(gasCalldata)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 29,
      "mOp": 1,
      "mWR": 0,
      "line": 144,
      "offsetLabel": "txGasPrice",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txGasPrice)"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 145,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(arithA)"
     },
     {
      "inB": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 146,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B                               :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 142,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3968,
      "useElseAddr": 1,
      "elseAddr": 4202,
      "line": 147,
      "offsetLabel": "mulArithOverflowFlag",
      "useCTX": 0,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidIntrinsicTxGasOverflow",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :MLOAD(mulArithOverflowFlag), JMPNZ(invalidIntrinsicTxGasOverflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 148,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => D                          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 150,
      "offsetLabel": "txSrcOriginAddr",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "setC": 1,
      "line": 151,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => B, C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "sRD": 1,
      "line": 152,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => C                          :SLOAD"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 154,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txValue)"
     },
     {
      "inD": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 155,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        D                               :MSTORE(arithA)"
     },
     {
      "inB": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4505,
      "call": 1,
      "line": 156,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "addARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B                               :MSTORE(arithB), CALL(addARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 140,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3976,
      "useElseAddr": 1,
      "elseAddr": 4203,
      "line": 157,
      "offsetLabel": "addArithOverflow",
      "useCTX": 0,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidIntrinsicTxBalance",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :MLOAD(addArithOverflow), JMPNZ(invalidIntrinsicTxBalance)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 158,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(arithRes1)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 160,
      "fileName": "process-tx.zkasm",
      "lineStr": "        C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4203,
      "useElseAddr": 1,
      "elseAddr": 3979,
      "line": 161,
      "jmpAddrLabel": "invalidIntrinsicTxBalance",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :LT, JMPC(invalidIntrinsicTxBalance)"
     },
     {
      "inC": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 164,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        C                               :MSTORE(arithA)"
     },
     {
      "inD": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4512,
      "call": 1,
      "line": 165,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "subARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        D                               :MSTORE(arithB), CALL(subARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 167,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => D                          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 168,
      "offsetLabel": "txSrcOriginAddr",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "setC": 1,
      "line": 169,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => B,C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 170,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => SR                         :SSTORE"
     },
     {
      "inSR": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 173,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        SR                              :MSTORE(initSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setGAS": 1,
      "offset": 0,
      "mOp": 1,
      "mWR": 0,
      "line": 176,
      "offsetLabel": "txGasLimit",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => GAS                        :MLOAD(txGasLimit)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 23,
      "mOp": 1,
      "mWR": 0,
      "line": 177,
      "offsetLabel": "gasCalldata",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(gasCalldata)"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "setGAS": 1,
      "line": 178,
      "fileName": "process-tx.zkasm",
      "lineStr": "        GAS - A => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 3990,
      "useElseAddr": 1,
      "elseAddr": 3996,
      "line": 186,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "getContractAddress",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(isCreateContract), JMPNZ(getContractAddress)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 187,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txDestAddr)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 188,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "process-tx.zkasm",
      "lineStr": "                                        :CALL(isColdAddress) ; Add 'to' to touched addresses"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 191,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4109,
      "useElseAddr": 1,
      "elseAddr": 3994,
      "line": 192,
      "jmpAddrLabel": "callContract",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :EQ, JMPC(callContract)"
     },
     {
      "CONST": "10",
      "setB": 1,
      "line": 193,
      "fileName": "process-tx.zkasm",
      "lineStr": "        10 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 2605,
      "useElseAddr": 1,
      "elseAddr": 4109,
      "line": 194,
      "jmpAddrLabel": "selectorPrecompiled",
      "elseAddrLabel": "callContract",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :LT,JMPC(selectorPrecompiled, callContract)"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 206,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 208,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 209,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E+1 => E                        :MSTORE(lastHashKIdUsed)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 36,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4000,
      "useElseAddr": 1,
      "elseAddr": 4023,
      "line": 211,
      "offsetLabel": "isCreate2",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "create2",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(isCreate2), JMPNZ(create2)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 213,
      "offsetLabel": "cntKeccakPreProcess",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(cntKeccakPreProcess)"
     },
     {
      "CONST": "2257",
      "inCntKeccakF": "-1",
      "inA": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4664,
      "useElseAddr": 1,
      "elseAddr": 4002,
      "line": 214,
      "jmpAddrLabel": "outOfCountersKeccak",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1:JMPN(outOfCountersKeccak)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 4,
      "mOp": 1,
      "mWR": 0,
      "line": 215,
      "offsetLabel": "txNonce",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txNonce)"
     },
     {
      "CONST": "128",
      "setB": 1,
      "line": 216,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0x80 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4014,
      "useElseAddr": 1,
      "elseAddr": 4005,
      "line": 217,
      "jmpAddrLabel": "nonce1byte",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :LT,JMPC(nonce1byte)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 15,
      "mOp": 1,
      "mWR": 0,
      "line": 218,
      "offsetLabel": "lengthNonce",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => C                          :MLOAD(lengthNonce)"
     },
     {
      "CONST": "214",
      "inC": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 225,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0xc0 + 22 + C                   :HASHK1(E)"
     },
     {
      "CONST": "148",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 226,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0x94                            :HASHK1(E)"
     },
     {
      "CONST": "20",
      "setD": 1,
      "line": 227,
      "fileName": "process-tx.zkasm",
      "lineStr": "        20 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 10,
      "mOp": 1,
      "mWR": 0,
      "line": 228,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txSrcAddr)"
     },
     {
      "inB": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 229,
      "fileName": "process-tx.zkasm",
      "lineStr": "        B                               :HASHK(E)"
     },
     {
      "CONST": "128",
      "inC": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 230,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0x80 + C                        :HASHK1(E)"
     },
     {
      "inC": "1",
      "setD": 1,
      "line": 231,
      "fileName": "process-tx.zkasm",
      "lineStr": "        C => D"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4060,
      "line": 232,
      "jmpAddrLabel": "endContractAddress",
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :HASHK(E), JMP(endContractAddress)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 10,
      "mOp": 1,
      "mWR": 0,
      "line": 235,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txSrcAddr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 4,
      "mOp": 1,
      "mWR": 0,
      "line": 236,
      "offsetLabel": "txNonce",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txNonce)"
     },
     {
      "CONST": "214",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 237,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0xc0 + 22                       :HASHK1(E)"
     },
     {
      "CONST": "148",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 238,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0x94                            :HASHK1(E)"
     },
     {
      "CONST": "20",
      "setD": 1,
      "line": 239,
      "fileName": "process-tx.zkasm",
      "lineStr": "        20 => D"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 240,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :HASHK(E)"
     },
     {
      "inB": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4022,
      "useElseAddr": 1,
      "elseAddr": 4021,
      "line": 241,
      "jmpAddrLabel": "nonceIs0",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B                               :JMPZ(nonceIs0)"
     },
     {
      "inB": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4060,
      "line": 242,
      "jmpAddrLabel": "endContractAddress",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B                               :HASHK1(E),JMP(endContractAddress)"
     },
     {
      "CONST": "128",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4060,
      "line": 245,
      "jmpAddrLabel": "endContractAddress",
      "fileName": "process-tx.zkasm",
      "lineStr": "        0x80                            :HASHK1(E),JMP(endContractAddress)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 249,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => C                          :MLOAD(txCalldataLen) ; less than 2**32 bytes. Enforced by memory expansion gas cost & smart contract batchL2DataHash"
     },
     {
      "inC": "1",
      "CONST": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 251,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        C + 1                           :MSTORE(arithA)"
     },
     {
      "CONST": "136",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 252,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        136                             :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 253,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 254,
      "offsetLabel": "cntKeccakPreProcess",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(cntKeccakPreProcess)"
     },
     {
      "CONST": "2256",
      "inCntKeccakF": "-1",
      "inA": "-1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4664,
      "useElseAddr": 1,
      "elseAddr": 4029,
      "line": 256,
      "jmpAddrLabel": "outOfCountersKeccak",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 2 - B :JMPN(outOfCountersKeccak)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 258,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => CTX                        :MLOAD(originCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 259,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(argsOffsetCall)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4032,
      "line": 263,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4045,
      "useElseAddr": 1,
      "elseAddr": 4033,
      "line": 265,
      "jmpAddrLabel": "create2end",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        C                               :JMPZ(create2end)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4040,
      "useElseAddr": 1,
      "elseAddr": 4034,
      "line": 266,
      "jmpAddrLabel": "endloopCreate2",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        C - 32                          :JMPN(endloopCreate2)"
     },
     {
      "inB": "1",
      "setE": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "call": 1,
      "line": 267,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B => E                          :CALL(MLOAD32)"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 268,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E => B"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 269,
      "fileName": "process-tx.zkasm",
      "lineStr": "        32 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 270,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 271,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :HASHK(E)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4031,
      "line": 272,
      "jmpAddrLabel": "loopCreate2",
      "fileName": "process-tx.zkasm",
      "lineStr": "        C - 32 => C                     :JMP(loopCreate2)"
     },
     {
      "inB": "1",
      "setE": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 275,
      "jmpAddrLabel": "MLOADX",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B => E                          :CALL(MLOADX)"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 276,
      "jmpAddrLabel": "SHRarith",
      "fileName": "process-tx.zkasm",
      "lineStr": "        32 - C => D                     :CALL(SHRarith)"
     },
     {
      "inC": "1",
      "setD": 1,
      "line": 277,
      "fileName": "process-tx.zkasm",
      "lineStr": "        C => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 278,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 279,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :HASHK(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 282,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => CTX                        :MLOAD(currentCTX)"
     },
     {
      "inHASHPOS": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 283,
      "fileName": "process-tx.zkasm",
      "lineStr": "        HASHPOS                         :HASHKLEN(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "line": 284,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => C                          :HASHKDIGEST(E)"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 287,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 288,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(lastHashKIdUsed)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 289,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E+1 => E                        :MSTORE(lastHashKIdUsed)"
     },
     {
      "CONST": "255",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 290,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0xff                            :HASHK1(E)"
     },
     {
      "CONST": "20",
      "setD": 1,
      "line": 291,
      "fileName": "process-tx.zkasm",
      "lineStr": "        20 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 10,
      "mOp": 1,
      "mWR": 0,
      "line": 292,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txSrcAddr)"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 293,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :HASHK(E)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 294,
      "fileName": "process-tx.zkasm",
      "lineStr": "        32 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 37,
      "mOp": 1,
      "mWR": 0,
      "line": 295,
      "offsetLabel": "salt",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(salt)"
     },
     {
      "inB": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 296,
      "fileName": "process-tx.zkasm",
      "lineStr": "        B                               :HASHK(E)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 297,
      "fileName": "process-tx.zkasm",
      "lineStr": "        32 => D"
     },
     {
      "inC": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 298,
      "fileName": "process-tx.zkasm",
      "lineStr": "        C                               :HASHK(E)"
     },
     {
      "inHASHPOS": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 301,
      "fileName": "process-tx.zkasm",
      "lineStr": "        HASHPOS                         :HASHKLEN(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4897,
      "call": 1,
      "line": 302,
      "jmpAddrLabel": "maskAddress",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :HASHKDIGEST(E), CALL(maskAddress) ; Mask address to 20 bytes"
     },
     {
      "inA": "1",
      "offset": 14,
      "mOp": 1,
      "mWR": 1,
      "line": 303,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(createContractAddress)"
     },
     {
      "inA": "1",
      "offset": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 304,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(txDestAddr)"
     },
     {
      "inA": "1",
      "offset": 2,
      "mOp": 1,
      "mWR": 1,
      "line": 305,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(storageAddr)"
     },
     {
      "CONST": "7968788",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4066,
      "line": 309,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "264868",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 4067,
      "line": 310,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*3 :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "498071",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4068,
      "line": 311,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_BINARY - CNT_BINARY - 3   :JMPN(outOfCountersBinary)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3602,
      "call": 1,
      "line": 312,
      "jmpAddrLabel": "isColdAddress",
      "fileName": "process-tx.zkasm",
      "lineStr": "                                :CALL(isColdAddress) ; add address to touched addresses"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 314,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A => E"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 317,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 318,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_NONCE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "line": 319,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                      :SLOAD"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 320,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4675,
      "useElseAddr": 1,
      "elseAddr": 4075,
      "line": 321,
      "jmpAddrLabel": "deployAddressCollision",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                           :LT,JMPC(deployAddressCollision)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 324,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E => A"
     },
     {
      "CONST": "2",
      "setB": 1,
      "line": 325,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_SC_CODE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "line": 326,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                      :SLOAD"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 327,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4675,
      "useElseAddr": 1,
      "elseAddr": 4080,
      "line": 328,
      "jmpAddrLabel": "deployAddressCollision",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                           :LT,JMPC(deployAddressCollision)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 331,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E => A"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 332,
      "fileName": "process-tx.zkasm",
      "lineStr": "        1 => D"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 333,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_NONCE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 334,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => SR                         :SSTORE"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 336,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txValue)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 337,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => A"
     },
     {
      "CONST": "4088",
      "setRR": 1,
      "line": 338,
      "fileName": "process-tx.zkasm",
      "lineStr": "        zkPC+2 => RR"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4710,
      "useElseAddr": 1,
      "elseAddr": 4088,
      "line": 339,
      "jmpAddrLabel": "moveBalances",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :LT, JMPC(moveBalances)"
     },
     {
      "CONST": "0",
      "setPC": 1,
      "line": 340,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => PC"
     },
     {
      "CONST": "0",
      "setSP": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 341,
      "jmpAddrLabel": "readCode",
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => SP                         :JMP(readCode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 34,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4091,
      "useElseAddr": 1,
      "elseAddr": 4098,
      "line": 346,
      "offsetLabel": "isCreate",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "readDeployBytecodeCreate",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(isCreate), JMPNZ(readDeployBytecodeCreate)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 348,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txCalldataLen)"
     },
     {
      "inB": "1",
      "inPC": "-1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4207,
      "useElseAddr": 1,
      "elseAddr": 4093,
      "line": 349,
      "jmpAddrLabel": "defaultOpCode",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B - PC - 1                      :JMPN(defaultOpCode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setHASHPOS": 1,
      "offset": 39,
      "mOp": 1,
      "mWR": 0,
      "line": 350,
      "offsetLabel": "dataStarts",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => HASHPOS                    :MLOAD(dataStarts)"
     },
     {
      "inHASHPOS": "1",
      "inPC": "1",
      "setHASHPOS": 1,
      "line": 351,
      "fileName": "process-tx.zkasm",
      "lineStr": "        HASHPOS + PC => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 352,
      "offsetLabel": "batchHashDataId",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(batchHashDataId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK1": 1,
      "line": 353,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "functionCall",
          "funcName": "onOpcode",
          "params": [
           {
            "op": "getReg",
            "regName": "RR"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => RR                         :HASHK1(E)"
     },
     {
      "inPC": "1",
      "CONST": "1",
      "setPC": 1,
      "JMP": 1,
      "useJmpAddr": 0,
      "ind": 0,
      "indRR": 1,
      "offset": 2242,
      "line": 355,
      "offsetLabel": "mapping_opcodes",
      "fileName": "process-tx.zkasm",
      "lineStr": "        PC + 1 => PC                    :JMP(@mapping_opcodes + RR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 12,
      "mOp": 1,
      "mWR": 0,
      "line": 359,
      "offsetLabel": "txCalldataLen",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(txCalldataLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 360,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => CTX                        :MLOAD(originCTX)"
     },
     {
      "inE": "1",
      "inPC": "-1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4108,
      "useElseAddr": 1,
      "elseAddr": 4101,
      "line": 362,
      "jmpAddrLabel": "readDeployBytecodeCreateDefault",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        E - PC - 1                      :JMPN(readDeployBytecodeCreateDefault)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 363,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(argsOffsetCall)"
     },
     {
      "inE": "1",
      "inPC": "1",
      "setE": 1,
      "line": 364,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E + PC => E"
     },
     {
      "CONST": "1",
      "setC": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 365,
      "jmpAddrLabel": "MLOADX",
      "fileName": "process-tx.zkasm",
      "lineStr": "        1 => C                          :CALL(MLOADX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 366,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => CTX                        :MLOAD(currentCTX)"
     },
     {
      "CONST": "31",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 367,
      "jmpAddrLabel": "SHRarith",
      "fileName": "process-tx.zkasm",
      "lineStr": "        31 => D                         :CALL(SHRarith)"
     },
     {
      "inA": "1",
      "setRR": 1,
      "line": 368,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "functionCall",
          "funcName": "onOpcode",
          "params": [
           {
            "op": "getReg",
            "regName": "RR"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "process-tx.zkasm",
      "lineStr": "        A => RR"
     },
     {
      "inPC": "1",
      "CONST": "1",
      "setPC": 1,
      "JMP": 1,
      "useJmpAddr": 0,
      "ind": 0,
      "indRR": 1,
      "offset": 2242,
      "line": 370,
      "offsetLabel": "mapping_opcodes",
      "fileName": "process-tx.zkasm",
      "lineStr": "        PC + 1 => PC                    :JMP(@mapping_opcodes + RR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4207,
      "line": 374,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "jmpAddrLabel": "defaultOpCode",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => CTX                        :MLOAD(currentCTX), JMP(defaultOpCode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 384,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txValue)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 385,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => A"
     },
     {
      "CONST": "4113",
      "setRR": 1,
      "line": 386,
      "fileName": "process-tx.zkasm",
      "lineStr": "        zkPC+2 => RR"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4710,
      "useElseAddr": 1,
      "elseAddr": 4113,
      "line": 387,
      "jmpAddrLabel": "moveBalances",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :LT, JMPC(moveBalances)"
     },
     {
      "CONST": "0",
      "setPC": 1,
      "line": 388,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => PC"
     },
     {
      "CONST": "0",
      "setSP": 1,
      "line": 389,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 391,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txDestAddr)"
     },
     {
      "CONST": "4",
      "setB": 1,
      "line": 394,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_SC_LENGTH => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 395,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "line": 396,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :SLOAD"
     },
     {
      "inB": "1",
      "offset": 28,
      "mOp": 1,
      "mWR": 1,
      "line": 397,
      "offsetLabel": "bytecodeLength",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        B                               :MSTORE(bytecodeLength)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 398,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4207,
      "useElseAddr": 1,
      "elseAddr": 4122,
      "line": 399,
      "jmpAddrLabel": "defaultOpCode",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :EQ, JMPC(defaultOpCode) ;no bytecode"
     },
     {
      "inB": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 403,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        B                                                       :MSTORE(arithA)"
     },
     {
      "CONST": "56",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 404,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        56                                                      :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 405,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                                                  :MLOAD(arithRes1)"
     },
     {
      "CONST": "265638",
      "inCntPoseidonG": "-1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 4126,
      "line": 406,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 1 - B            :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "149795",
      "inCntPaddingPG": "-1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4668,
      "useElseAddr": 1,
      "elseAddr": 4127,
      "line": 407,
      "jmpAddrLabel": "outOfCountersPadding",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_PADDING_PG_LIMIT - CNT_PADDING_PG - 1 - B      :JMPN(outOfCountersPadding)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 410,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txDestAddr)"
     },
     {
      "CONST": "2",
      "setB": 1,
      "line": 411,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_SC_CODE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 412,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :SLOAD"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 17,
      "mOp": 1,
      "mWR": 0,
      "line": 415,
      "offsetLabel": "nextHashPId",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(nextHashPId)"
     },
     {
      "inE": "1",
      "offset": 29,
      "mOp": 1,
      "mWR": 1,
      "line": 416,
      "offsetLabel": "contractHashId",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E                               :MSTORE(contractHashId)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 417,
      "offsetLabel": "nextHashPId",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E+1                             :MSTORE(nextHashPId)"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashPDigest": 1,
      "line": 420,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :HASHPDIGEST(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 29,
      "mOp": 1,
      "mWR": 0,
      "line": 423,
      "offsetLabel": "contractHashId",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => E                          :MLOAD(contractHashId) ; hash index"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 424,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txDestAddr)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 426,
      "offsetLabel": "bytecodeLength",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(bytecodeLength)"
     },
     {
      "inB": "1",
      "inPC": "-1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4207,
      "useElseAddr": 1,
      "elseAddr": 4138,
      "line": 427,
      "jmpAddrLabel": "defaultOpCode",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B - PC - 1                      :JMPN(defaultOpCode) ; no bytecode treated as 0x00"
     },
     {
      "inPC": "1",
      "setHASHPOS": 1,
      "line": 428,
      "fileName": "process-tx.zkasm",
      "lineStr": "        PC => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP1": 1,
      "line": 429,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "functionCall",
          "funcName": "onOpcode",
          "params": [
           {
            "op": "getReg",
            "regName": "RR"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => RR                         :HASHP1(E)"
     },
     {
      "inPC": "1",
      "CONST": "1",
      "setPC": 1,
      "JMP": 1,
      "useJmpAddr": 0,
      "ind": 0,
      "indRR": 1,
      "offset": 2242,
      "line": 431,
      "offsetLabel": "mapping_opcodes",
      "fileName": "process-tx.zkasm",
      "lineStr": "        PC + 1 => PC                    :JMP(@mapping_opcodes + RR)"
     },
     {
      "CONST": "7968488",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4142,
      "line": 434,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_STEPS - STEP - 500     :JMPN(outOfCountersStep)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 13,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4134,
      "useElseAddr": 1,
      "elseAddr": 4090,
      "line": 435,
      "offsetLabel": "isCreateContract",
      "useCTX": 1,
      "jmpAddrLabel": "readByteCode",
      "elseAddrLabel": "readDeployBytecode",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(isCreateContract), JMPNZ(readDeployBytecode, readByteCode)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 4144,
      "line": 442,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        C                               :JMPZ(handleGas)"
     },
     {
      "inE": "1",
      "offset": 171,
      "mOp": 1,
      "mWR": 1,
      "line": 445,
      "offsetLabel": "memOffsetLinearPoseidon",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        E                               :MSTORE(memOffsetLinearPoseidon)"
     },
     {
      "inC": "1",
      "offset": 172,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4834,
      "call": 1,
      "line": 446,
      "offsetLabel": "memSizeLinearPoseidon",
      "useCTX": 0,
      "jmpAddrLabel": "checkBytecodeStartsEF",
      "fileName": "process-tx.zkasm",
      "lineStr": "        C                               :MSTORE(memSizeLinearPoseidon), CALL(checkBytecodeStartsEF) ; in: [memOffset], out: [startsWithEFn]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 159,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4147,
      "useElseAddr": 1,
      "elseAddr": 4678,
      "line": 449,
      "offsetLabel": "startsWithEF",
      "useCTX": 0,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "invalidCodeStartsEF",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $                               :MLOAD(startsWithEF), JMPNZ(invalidCodeStartsEF)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 452,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(createContractAddress)"
     },
     {
      "CONST": "4",
      "setB": 1,
      "line": 453,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_SC_LENGTH => B"
     },
     {
      "inC": "1",
      "setD": 1,
      "line": 454,
      "fileName": "process-tx.zkasm",
      "lineStr": "        C => D"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 455,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 456,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => SR                         :SSTORE"
     },
     {
      "inA": "1",
      "offset": 1,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4854,
      "call": 1,
      "line": 457,
      "offsetLabel": "txDestAddr",
      "useCTX": 1,
      "jmpAddrLabel": "hashPoseidonLinearFromMemory",
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(txDestAddr), CALL(hashPoseidonLinearFromMemory)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 14,
      "mOp": 1,
      "mWR": 0,
      "line": 458,
      "offsetLabel": "createContractAddress",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(createContractAddress)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 459,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => C"
     },
     {
      "CONST": "2",
      "setB": 1,
      "line": 460,
      "fileName": "process-tx.zkasm",
      "lineStr": "        %SMT_KEY_SC_CODE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 461,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => SR                         :SSTORE"
     },
     {
      "CONST": "7968788",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4158,
      "line": 472,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_STEPS - STEP - 200 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "264611",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 4159,
      "line": 473,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*4 :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 474,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4168,
      "useElseAddr": 1,
      "elseAddr": 4161,
      "line": 475,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "jmpAddrLabel": "refundGas",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(gasRefund), JMPZ(refundGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 0,
      "mOp": 1,
      "mWR": 0,
      "line": 476,
      "offsetLabel": "txGasLimit",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txGasLimit)"
     },
     {
      "inA": "1",
      "inGAS": "-1",
      "setA": 1,
      "line": 477,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A - GAS => A"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 479,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(arithA)"
     },
     {
      "CONST": "2",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 480,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        2                               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 481,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(arithRes1)"
     },
     {
      "inA": "1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4168,
      "useElseAddr": 1,
      "elseAddr": 4167,
      "line": 482,
      "jmpAddrLabel": "refundGas",
      "elseAddrLabel": "next",
      "fileName": "process-tx.zkasm",
      "lineStr": "        A - B                           :JMPN(refundGas)"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 483,
      "fileName": "process-tx.zkasm",
      "lineStr": "        B => A"
     },
     {
      "inGAS": "1",
      "inA": "1",
      "setGAS": 1,
      "line": 487,
      "fileName": "process-tx.zkasm",
      "lineStr": "        GAS + A => GAS"
     },
     {
      "inGAS": "1",
      "setA": 1,
      "line": 488,
      "fileName": "process-tx.zkasm",
      "lineStr": "        GAS => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 29,
      "mOp": 1,
      "mWR": 0,
      "line": 489,
      "offsetLabel": "txGasPrice",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B                          :MLOAD(txGasPrice)"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 491,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(arithA)"
     },
     {
      "inB": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 492,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B                               :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 493,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => D                          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 495,
      "offsetLabel": "txSrcOriginAddr",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "setC": 1,
      "line": 496,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => B,C ; balance key smt"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 497,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :SLOAD ; Original Balance in A"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 500,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A                               :MSTORE(arithA)"
     },
     {
      "inD": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4505,
      "call": 1,
      "line": 501,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "addARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        D                               :MSTORE(arithB), CALL(addARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 502,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => D                          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 28,
      "mOp": 1,
      "mWR": 0,
      "line": 504,
      "offsetLabel": "txSrcOriginAddr",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A                          :MLOAD(txSrcOriginAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "setC": 1,
      "line": 505,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => B,C                        ; balance key smt"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 506,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => SR                         :SSTORE"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 0,
      "mOp": 1,
      "mWR": 0,
      "line": 511,
      "offsetLabel": "txGasLimit",
      "useCTX": 1,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A          :MLOAD(txGasLimit)"
     },
     {
      "inA": "1",
      "inGAS": "-1",
      "setA": 1,
      "line": 512,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A - GAS => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 29,
      "mOp": 1,
      "mWR": 0,
      "line": 514,
      "offsetLabel": "txGasPrice",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => B          :MLOAD(txGasPrice)"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 516,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A               :MSTORE(arithA)"
     },
     {
      "inB": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 517,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        B               :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 518,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => D          :MLOAD(arithRes1) ; value to pay the sequencer in D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 4,
      "mOp": 1,
      "mWR": 0,
      "line": 520,
      "offsetLabel": "sequencerAddr",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A          :MLOAD(sequencerAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "setC": 1,
      "line": 521,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => B,C ; Balance key smt"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 522,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A          :SLOAD ; Original Balance in A"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 524,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        A               :MSTORE(arithA)"
     },
     {
      "inD": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4505,
      "call": 1,
      "line": 525,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "addARITH",
      "fileName": "process-tx.zkasm",
      "lineStr": "        D               :MSTORE(arithB), CALL(addARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 526,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => D          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 4,
      "mOp": 1,
      "mWR": 0,
      "line": 527,
      "offsetLabel": "sequencerAddr",
      "useCTX": 0,
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => A          :MLOAD(sequencerAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "setC": 1,
      "line": 528,
      "fileName": "process-tx.zkasm",
      "lineStr": "        0 => B,C ; balance key smt"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 57,
      "line": 529,
      "jmpAddrLabel": "processTxEnd",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => SR         :SSTORE, JMP(processTxEnd)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4206,
      "line": 533,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "intrinsic_invalid_signature"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleIntrinsicError",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $${eventLog(onError, intrinsic_invalid_signature)} :JMP(handleIntrinsicError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4206,
      "line": 536,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "intrinsic_invalid_chain_id"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleIntrinsicError",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $${eventLog(onError, intrinsic_invalid_chain_id)}  :JMP(handleIntrinsicError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4206,
      "line": 539,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "intrinsic_invalid_nonce"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleIntrinsicError",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $${eventLog(onError, intrinsic_invalid_nonce)}     :JMP(handleIntrinsicError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4206,
      "line": 542,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "intrinsic_invalid_gas_limit"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleIntrinsicError",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $${eventLog(onError, intrinsic_invalid_gas_limit)}  :JMP(handleIntrinsicError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4206,
      "line": 545,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "intrinsic_invalid_gas_overflow"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleIntrinsicError",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $${eventLog(onError, intrinsic_invalid_gas_overflow)} :JMP(handleIntrinsicError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4206,
      "line": 548,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "intrinsic_invalid_balance"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleIntrinsicError",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $${eventLog(onError, intrinsic_invalid_balance)}    :JMP(handleIntrinsicError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4206,
      "line": 551,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "intrinsic_invalid_batch_gas_limit"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleIntrinsicError",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $${eventLog(onError, intrinsic_invalid_batch_gas_limit)} :JMP(handleIntrinsicError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4206,
      "line": 554,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "intrinsic_invalid_sender_code"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleIntrinsicError",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $${eventLog(onError, intrinsic_invalid_sender_code)} :JMP(handleIntrinsicError)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 33,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 58,
      "line": 557,
      "offsetLabel": "originSR",
      "useCTX": 0,
      "jmpAddrLabel": "processTxFinished",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $ => SR                         :MLOAD(originSR), JMP(processTxFinished)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 692,
      "line": 561,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "functionCall",
          "funcName": "onOpcode",
          "params": [
           {
            "op": "number",
            "num": "0"
           }
          ]
         }
        ]
       }
      ],
      "jmpAddrLabel": "opSTOP",
      "fileName": "process-tx.zkasm",
      "lineStr": "        $${eventLog(onOpcode(0))}        :JMP(opSTOP)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4209,
      "line": 7,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4210,
      "line": 8,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 9,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "bin": 1,
      "binOpcode": 3,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4213,
      "useElseAddr": 1,
      "elseAddr": 4212,
      "line": 11,
      "jmpAddrLabel": "absIsNeg",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :SLT, JMPC(absIsNeg)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 12,
      "fileName": "utils.zkasm",
      "lineStr": "                    :RETURN"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 15,
      "fileName": "utils.zkasm",
      "lineStr": "    A => B"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 16,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 1,
      "line": 18,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :SUB"
     },
     {
      "CONST": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 19,
      "fileName": "utils.zkasm",
      "lineStr": "    1 => B          :RETURN"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4218,
      "line": 26,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inRR": "1",
      "offset": 96,
      "mOp": 1,
      "mWR": 1,
      "line": 27,
      "offsetLabel": "tmpZkPCcopy",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCcopy)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 29,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "CONST": "1024",
      "setSP": 1,
      "line": 31,
      "fileName": "utils.zkasm",
      "lineStr": "    %CALLDATA_OFFSET => SP"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 33,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 34,
      "offsetLabel": "argsOffsetCall",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(argsOffsetCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 27,
      "mOp": 1,
      "mWR": 0,
      "line": 35,
      "offsetLabel": "argsLengthCall",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(argsLengthCall)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4225,
      "line": 39,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4236,
      "useElseAddr": 1,
      "elseAddr": 4226,
      "line": 40,
      "jmpAddrLabel": "copySPEnd",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    C               :JMPZ(copySPEnd)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4232,
      "useElseAddr": 1,
      "elseAddr": 4227,
      "line": 41,
      "jmpAddrLabel": "copySPFinal",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    C - 32          :JMPN(copySPFinal)"
     },
     {
      "CONST": "4228",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "line": 43,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(MLOAD32); in: [E: offset] out: [A: value, E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 45,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 47,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :MSTORE(SP++)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 49,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4224,
      "line": 50,
      "jmpAddrLabel": "copySPloop",
      "fileName": "utils.zkasm",
      "lineStr": "    C - 32 => C     :JMP(copySPloop)"
     },
     {
      "CONST": "4233",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "line": 54,
      "jmpAddrLabel": "MLOADX",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(MLOADX); in: [E: offset, C: length] out: [A: value, E: new offset]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 56,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX)"
     },
     {
      "inA": "1",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 58,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :MSTORE(SP++)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 60,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(originCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 96,
      "mOp": 1,
      "mWR": 0,
      "line": 64,
      "offsetLabel": "tmpZkPCcopy",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCcopy)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setCTX": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 65,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => CTX        :MLOAD(currentCTX), RETURN"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4239,
      "line": 76,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inRR": "1",
      "offset": 100,
      "mOp": 1,
      "mWR": 1,
      "line": 78,
      "offsetLabel": "tmpZkPCgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCgetLen)"
     },
     {
      "inB": "1",
      "offset": 97,
      "mOp": 1,
      "mWR": 1,
      "line": 79,
      "offsetLabel": "tmpVarBgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B               :MSTORE(tmpVarBgetLen)"
     },
     {
      "inC": "1",
      "offset": 98,
      "mOp": 1,
      "mWR": 1,
      "line": 80,
      "offsetLabel": "tmpVarCgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C               :MSTORE(tmpVarCgetLen)"
     },
     {
      "inD": "1",
      "offset": 99,
      "mOp": 1,
      "mWR": 1,
      "line": 81,
      "offsetLabel": "tmpVarDgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D               :MSTORE(tmpVarDgetLen)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 83,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 84,
      "fileName": "utils.zkasm",
      "lineStr": "    B => A"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4246,
      "line": 88,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4247,
      "line": 89,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 91,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4252,
      "useElseAddr": 1,
      "elseAddr": 4249,
      "line": 93,
      "jmpAddrLabel": "getLenEnd",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :EQ,JMPC(getLenEnd)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 95,
      "fileName": "utils.zkasm",
      "lineStr": "    1 => D"
     },
     {
      "CONST": "4251",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "line": 96,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "inC": "1",
      "CONST": "1",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4245,
      "line": 98,
      "jmpAddrLabel": "getLenBytesLoop",
      "fileName": "utils.zkasm",
      "lineStr": "    C + 1 => C      :JMP(getLenBytesLoop)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 102,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 97,
      "mOp": 1,
      "mWR": 0,
      "line": 104,
      "offsetLabel": "tmpVarBgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarBgetLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 98,
      "mOp": 1,
      "mWR": 0,
      "line": 105,
      "offsetLabel": "tmpVarCgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCgetLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 100,
      "mOp": 1,
      "mWR": 0,
      "line": 106,
      "offsetLabel": "tmpZkPCgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCgetLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 99,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 107,
      "offsetLabel": "tmpVarDgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarDgetLen), RETURN"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4258,
      "line": 114,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "inRR": "1",
      "offset": 100,
      "mOp": 1,
      "mWR": 1,
      "line": 116,
      "offsetLabel": "tmpZkPCgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCgetLen)"
     },
     {
      "inB": "1",
      "offset": 97,
      "mOp": 1,
      "mWR": 1,
      "line": 117,
      "offsetLabel": "tmpVarBgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B               :MSTORE(tmpVarBgetLen)"
     },
     {
      "inC": "1",
      "offset": 98,
      "mOp": 1,
      "mWR": 1,
      "line": 118,
      "offsetLabel": "tmpVarCgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C               :MSTORE(tmpVarCgetLen)"
     },
     {
      "inD": "1",
      "offset": 99,
      "mOp": 1,
      "mWR": 1,
      "line": 119,
      "offsetLabel": "tmpVarDgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D               :MSTORE(tmpVarDgetLen)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 121,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 122,
      "fileName": "utils.zkasm",
      "lineStr": "    B => A"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4265,
      "line": 126,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4266,
      "line": 127,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 128,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4273,
      "useElseAddr": 1,
      "elseAddr": 4268,
      "line": 130,
      "jmpAddrLabel": "getLenBitsEnd",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :EQ,JMPC(getLenBitsEnd)"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 132,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :MSTORE(arithA)"
     },
     {
      "CONST": "2",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "line": 133,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    2               :MSTORE(arithB)"
     },
     {
      "CONST": "4271",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "line": 134,
      "jmpAddrLabel": "divARITH",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 135,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes1)"
     },
     {
      "inC": "1",
      "CONST": "1",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4264,
      "line": 137,
      "jmpAddrLabel": "getLenBitsLoop",
      "fileName": "utils.zkasm",
      "lineStr": "    C + 1 => C      :JMP(getLenBitsLoop)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 141,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 97,
      "mOp": 1,
      "mWR": 0,
      "line": 143,
      "offsetLabel": "tmpVarBgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarBgetLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 98,
      "mOp": 1,
      "mWR": 0,
      "line": 144,
      "offsetLabel": "tmpVarCgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCgetLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 100,
      "mOp": 1,
      "mWR": 0,
      "line": 145,
      "offsetLabel": "tmpZkPCgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCgetLen)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 99,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 146,
      "offsetLabel": "tmpVarDgetLen",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarDgetLen), RETURN"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4279,
      "line": 163,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4370,
      "useElseAddr": 1,
      "elseAddr": 4280,
      "line": 164,
      "jmpAddrLabel": "endMSTOREX",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    C               :JMPZ(endMSTOREX)"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4410,
      "useElseAddr": 1,
      "elseAddr": 4281,
      "line": 165,
      "jmpAddrLabel": "errorMLOADMSTORE",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    32 - C          :JMPN(errorMLOADMSTORE)"
     },
     {
      "CONST": "31",
      "inC": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4283,
      "useElseAddr": 1,
      "elseAddr": 4282,
      "line": 166,
      "jmpAddrLabel": "MSTORE32",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    32 - C - 1      :JMPN(MSTORE32); in: [bytesToStore, E: offset] out: [E: new offset]"
     },
     {
      "CONST": "1",
      "offset": 108,
      "mOp": 1,
      "mWR": 1,
      "line": 167,
      "offsetLabel": "isMSTOREX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    1               :MSTORE(isMSTOREX)"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4284,
      "line": 175,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4285,
      "line": 176,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249036",
      "inCntMemAlign": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4666,
      "useElseAddr": 1,
      "elseAddr": 4286,
      "line": 177,
      "jmpAddrLabel": "outOfCountersMemalign",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1   :JMPN(outOfCountersMemalign)"
     },
     {
      "inRR": "1",
      "offset": 106,
      "mOp": 1,
      "mWR": 1,
      "line": 179,
      "offsetLabel": "tmpZkPCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCmstore)"
     },
     {
      "inA": "1",
      "offset": 101,
      "mOp": 1,
      "mWR": 1,
      "line": 180,
      "offsetLabel": "tmpVarAmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :MSTORE(tmpVarAmstore)"
     },
     {
      "inB": "1",
      "offset": 102,
      "mOp": 1,
      "mWR": 1,
      "line": 181,
      "offsetLabel": "tmpVarBmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B               :MSTORE(tmpVarBmstore)"
     },
     {
      "inC": "1",
      "offset": 103,
      "mOp": 1,
      "mWR": 1,
      "line": 182,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C               :MSTORE(tmpVarCmstore)"
     },
     {
      "inD": "1",
      "offset": 104,
      "mOp": 1,
      "mWR": 1,
      "line": 183,
      "offsetLabel": "tmpVarDmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D               :MSTORE(tmpVarDmstore)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 185,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A"
     },
     {
      "CONST": "4194272",
      "setB": 1,
      "line": 186,
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_MEM_EXPANSION_BYTES => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4294,
      "useElseAddr": 1,
      "elseAddr": 4410,
      "line": 187,
      "jmpAddrLabel": "initMSTORE",
      "elseAddrLabel": "errorMLOADMSTORE",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :LT,JMPC(initMSTORE, errorMLOADMSTORE)"
     },
     {
      "CONST": "4295",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "line": 190,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 108,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4341,
      "useElseAddr": 1,
      "elseAddr": 4296,
      "line": 192,
      "offsetLabel": "isMSTOREX",
      "useCTX": 0,
      "jmpAddrLabel": "finalMSTORE",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(isMSTOREX), JMPZ(finalMSTORE)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4297,
      "useElseAddr": 1,
      "elseAddr": 4310,
      "line": 194,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "MSTOREX2",
      "fileName": "utils.zkasm",
      "lineStr": "    C               :JMPNZ(MSTOREX2)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 103,
      "mOp": 1,
      "mWR": 0,
      "line": 195,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCmstore)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 107,
      "mOp": 1,
      "mWR": 0,
      "line": 197,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(bytesToStore)"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "setD": 1,
      "line": 198,
      "fileName": "utils.zkasm",
      "lineStr": "    32 - C => D"
     },
     {
      "CONST": "4301",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "line": 200,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "CONST": "4302",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "line": 201,
      "jmpAddrLabel": "SHLarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 202,
      "fileName": "utils.zkasm",
      "lineStr": "    A => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 204,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E)"
     },
     {
      "CONST": "32",
      "inD": "-1",
      "setD": 1,
      "line": 205,
      "fileName": "utils.zkasm",
      "lineStr": "    32 - D => D"
     },
     {
      "CONST": "4306",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "line": 207,
      "jmpAddrLabel": "SHLarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "CONST": "4307",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "line": 208,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "inA": "1",
      "inB": "1",
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "line": 209,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A + B           :MSTORE(bytesToStore)"
     },
     {
      "inA": "1",
      "inB": "1",
      "setA": 1,
      "line": 210,
      "fileName": "utils.zkasm",
      "lineStr": "    A + B => A"
     },
     {
      "CONST": "0",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4341,
      "line": 211,
      "jmpAddrLabel": "finalMSTORE",
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C          :JMP(finalMSTORE)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 103,
      "mOp": 1,
      "mWR": 0,
      "line": 215,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarCmstore)"
     },
     {
      "inC": "1",
      "inD": "1",
      "setD": 1,
      "line": 216,
      "fileName": "utils.zkasm",
      "lineStr": "    C + D => D"
     },
     {
      "CONST": "32",
      "inD": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4329,
      "useElseAddr": 1,
      "elseAddr": 4313,
      "line": 217,
      "jmpAddrLabel": "MSTOREX3",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    32 - D          :JMPN(MSTOREX3)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 220,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E)"
     },
     {
      "CONST": "4315",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "line": 222,
      "jmpAddrLabel": "SHLarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 103,
      "mOp": 1,
      "mWR": 0,
      "line": 223,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarCmstore)"
     },
     {
      "CONST": "4317",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "line": 224,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 225,
      "fileName": "utils.zkasm",
      "lineStr": "    A => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 227,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E+1)"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "setD": 1,
      "line": 228,
      "fileName": "utils.zkasm",
      "lineStr": "    32 - C => D"
     },
     {
      "CONST": "4321",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "line": 230,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "inA": "1",
      "inB": "1",
      "setB": 1,
      "line": 232,
      "fileName": "utils.zkasm",
      "lineStr": "    A + B => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 107,
      "mOp": 1,
      "mWR": 0,
      "line": 233,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(bytesToStore)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 103,
      "mOp": 1,
      "mWR": 0,
      "line": 234,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarCmstore)"
     },
     {
      "CONST": "32",
      "inD": "-1",
      "setD": 1,
      "line": 235,
      "fileName": "utils.zkasm",
      "lineStr": "    32 - D => D"
     },
     {
      "CONST": "4326",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "line": 237,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "CONST": "4327",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "line": 238,
      "jmpAddrLabel": "SHLarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "inA": "1",
      "inB": "1",
      "setA": 1,
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "line": 240,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A + B => A      :MSTORE(bytesToStore)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4341,
      "line": 241,
      "jmpAddrLabel": "finalMSTORE",
      "fileName": "utils.zkasm",
      "lineStr": "                    :JMP(finalMSTORE)"
     },
     {
      "inD": "1",
      "CONST": "-32",
      "setD": 1,
      "line": 245,
      "fileName": "utils.zkasm",
      "lineStr": "    D - 32 => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 247,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E+1)"
     },
     {
      "CONST": "4332",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "line": 249,
      "jmpAddrLabel": "SHLarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 103,
      "mOp": 1,
      "mWR": 0,
      "line": 250,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarCmstore)"
     },
     {
      "CONST": "4334",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "line": 251,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 253,
      "fileName": "utils.zkasm",
      "lineStr": "    A => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 107,
      "mOp": 1,
      "mWR": 0,
      "line": 254,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(bytesToStore)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 103,
      "mOp": 1,
      "mWR": 0,
      "line": 255,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarCmstore)"
     },
     {
      "CONST": "32",
      "inD": "-1",
      "setD": 1,
      "line": 256,
      "fileName": "utils.zkasm",
      "lineStr": "    32 - D => D"
     },
     {
      "CONST": "4339",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "line": 258,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "CONST": "4340",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "line": 259,
      "jmpAddrLabel": "SHLarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "inA": "1",
      "inB": "1",
      "setA": 1,
      "offset": 107,
      "mOp": 1,
      "mWR": 1,
      "line": 261,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A + B => A      :MSTORE(bytesToStore)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4342,
      "useElseAddr": 1,
      "elseAddr": 4349,
      "line": 264,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "memAlignOptionMSTORE",
      "fileName": "utils.zkasm",
      "lineStr": "    C               :JMPNZ(memAlignOptionMSTORE)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 107,
      "mOp": 1,
      "mWR": 0,
      "line": 265,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(bytesToStore)"
     },
     {
      "inA": "1",
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 266,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :MSTORE(MEM:E)"
     },
     {
      "inE": "32",
      "setE": 1,
      "line": 267,
      "fileName": "utils.zkasm",
      "lineStr": "    E*32 => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 108,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4364,
      "useElseAddr": 1,
      "elseAddr": 4346,
      "line": 268,
      "offsetLabel": "isMSTOREX",
      "useCTX": 0,
      "jmpAddrLabel": "offsetMSTORE32",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :MLOAD(isMSTOREX),JMPZ(offsetMSTORE32)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 103,
      "mOp": 1,
      "mWR": 0,
      "line": 269,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCmstore)"
     },
     {
      "inE": "1",
      "inC": "1",
      "setE": 1,
      "line": 270,
      "fileName": "utils.zkasm",
      "lineStr": "    E + C => E"
     },
     {
      "CONST": "0",
      "offset": 108,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4365,
      "line": 271,
      "offsetLabel": "isMSTOREX",
      "useCTX": 0,
      "jmpAddrLabel": "endMSTORE",
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(isMSTOREX),JMP(endMSTORE)"
     },
     {
      "inE": "1",
      "offset": 105,
      "mOp": 1,
      "mWR": 1,
      "line": 274,
      "offsetLabel": "tmpVarEmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E               :MSTORE(tmpVarEmstore)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 276,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 277,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(MEM:E+1)"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "memAlignWR_W0",
       "params": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getMemValue",
         "module": "mem",
         "offset": 107,
         "offsetLabel": "bytesToStore"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 279,
      "fileName": "utils.zkasm",
      "lineStr": "    ${memAlignWR_W0(A,mem.bytesToStore,C)} => D                    ; no trust calculate W0"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "memAlignWR_W1",
       "params": [
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getMemValue",
         "module": "mem",
         "offset": 107,
         "offsetLabel": "bytesToStore"
        },
        {
         "op": "getReg",
         "regName": "C"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "line": 280,
      "fileName": "utils.zkasm",
      "lineStr": "    ${memAlignWR_W1(B,mem.bytesToStore,C)} => E                    ; no trust calculate W1"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "memAlignRD": 0,
      "memAlignWR": 1,
      "memAlignWR8": 0,
      "offset": 107,
      "mOp": 1,
      "mWR": 0,
      "line": 281,
      "offsetLabel": "bytesToStore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $               :MEM_ALIGN_WR,MLOAD(bytesToStore)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 282,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 105,
      "mOp": 1,
      "mWR": 0,
      "line": 283,
      "offsetLabel": "tmpVarEmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpVarEmstore)"
     },
     {
      "inD": "1",
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 284,
      "fileName": "utils.zkasm",
      "lineStr": "    D               :MSTORE(MEM:E)          ; write W0"
     },
     {
      "inA": "1",
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 285,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :MSTORE(MEM:E+1)        ; write W1"
     },
     {
      "inE": "32",
      "inC": "1",
      "setE": 1,
      "line": 286,
      "fileName": "utils.zkasm",
      "lineStr": "    E*32 + C => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 108,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4364,
      "useElseAddr": 1,
      "elseAddr": 4361,
      "line": 287,
      "offsetLabel": "isMSTOREX",
      "useCTX": 0,
      "jmpAddrLabel": "offsetMSTORE32",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(isMSTOREX), JMPZ(offsetMSTORE32)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 103,
      "mOp": 1,
      "mWR": 0,
      "line": 288,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCmstore)"
     },
     {
      "inE": "1",
      "inC": "1",
      "setE": 1,
      "line": 289,
      "fileName": "utils.zkasm",
      "lineStr": "    E + C => E"
     },
     {
      "CONST": "0",
      "offset": 108,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4365,
      "line": 290,
      "offsetLabel": "isMSTOREX",
      "useCTX": 0,
      "jmpAddrLabel": "endMSTORE",
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(isMSTOREX), JMP(endMSTORE)"
     },
     {
      "inE": "1",
      "CONST": "32",
      "setE": 1,
      "line": 293,
      "fileName": "utils.zkasm",
      "lineStr": "    E + 32 => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 101,
      "mOp": 1,
      "mWR": 0,
      "line": 296,
      "offsetLabel": "tmpVarAmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(tmpVarAmstore)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 102,
      "mOp": 1,
      "mWR": 0,
      "line": 297,
      "offsetLabel": "tmpVarBmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarBmstore)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 103,
      "mOp": 1,
      "mWR": 0,
      "line": 298,
      "offsetLabel": "tmpVarCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCmstore)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 106,
      "mOp": 1,
      "mWR": 0,
      "line": 299,
      "offsetLabel": "tmpZkPCmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCmstore)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 104,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 300,
      "offsetLabel": "tmpVarDmstore",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarDmstore), RETURN"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 302,
      "fileName": "utils.zkasm",
      "lineStr": "                    :RETURN"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4372,
      "line": 319,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4373,
      "line": 320,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249036",
      "inCntMemAlign": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4666,
      "useElseAddr": 1,
      "elseAddr": 4374,
      "line": 321,
      "jmpAddrLabel": "outOfCountersMemalign",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1   :JMPN(outOfCountersMemalign)"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4410,
      "useElseAddr": 1,
      "elseAddr": 4375,
      "line": 323,
      "jmpAddrLabel": "errorMLOADMSTORE",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    32 - C          :JMPN(errorMLOADMSTORE)"
     },
     {
      "CONST": "31",
      "inC": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "useElseAddr": 1,
      "elseAddr": 4376,
      "line": 324,
      "jmpAddrLabel": "MLOAD32",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    32 - C - 1      :JMPN(MLOAD32)"
     },
     {
      "CONST": "1",
      "offset": 115,
      "mOp": 1,
      "mWR": 1,
      "line": 325,
      "offsetLabel": "isMLOADX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    1               :MSTORE(isMLOADX)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4378,
      "line": 333,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4379,
      "line": 334,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249036",
      "inCntMemAlign": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4666,
      "useElseAddr": 1,
      "elseAddr": 4380,
      "line": 335,
      "jmpAddrLabel": "outOfCountersMemalign",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_MEM_ALIGN - CNT_MEM_ALIGN - 1   :JMPN(outOfCountersMemalign)"
     },
     {
      "inRR": "1",
      "offset": 114,
      "mOp": 1,
      "mWR": 1,
      "line": 337,
      "offsetLabel": "tmpZkPCmload",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCmload)"
     },
     {
      "inB": "1",
      "offset": 110,
      "mOp": 1,
      "mWR": 1,
      "line": 338,
      "offsetLabel": "tmpVarBmload",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B               :MSTORE(tmpVarBmload)"
     },
     {
      "inC": "1",
      "offset": 111,
      "mOp": 1,
      "mWR": 1,
      "line": 339,
      "offsetLabel": "tmpVarCmload",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C               :MSTORE(tmpVarCmload)"
     },
     {
      "inD": "1",
      "offset": 112,
      "mOp": 1,
      "mWR": 1,
      "line": 340,
      "offsetLabel": "tmpVarDmload",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D               :MSTORE(tmpVarDmload)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 342,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A"
     },
     {
      "CONST": "4194272",
      "setB": 1,
      "line": 343,
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_MEM_EXPANSION_BYTES => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4387,
      "useElseAddr": 1,
      "elseAddr": 4410,
      "line": 344,
      "jmpAddrLabel": "initMLOAD",
      "elseAddrLabel": "errorMLOADMSTORE",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :LT,JMPC(initMLOAD, errorMLOADMSTORE)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4698,
      "call": 1,
      "line": 347,
      "jmpAddrLabel": "offsetUtil",
      "fileName": "utils.zkasm",
      "lineStr": "                    :CALL(offsetUtil); in: [A: offset] out: [E: offset/32, C: offset%32]"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4389,
      "useElseAddr": 1,
      "elseAddr": 4393,
      "line": 349,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "memAlignOptionMLOAD",
      "fileName": "utils.zkasm",
      "lineStr": "    C               :JMPNZ(memAlignOptionMLOAD)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 351,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 115,
      "mOp": 1,
      "mWR": 0,
      "line": 352,
      "offsetLabel": "isMLOADX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(isMLOADX)"
     },
     {
      "inE": "32",
      "setE": 1,
      "line": 353,
      "fileName": "utils.zkasm",
      "lineStr": "    E*32 => E"
     },
     {
      "inB": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4405,
      "useElseAddr": 1,
      "elseAddr": 4399,
      "line": 354,
      "jmpAddrLabel": "offsetMLOAD32",
      "elseAddrLabel": "sliceA",
      "fileName": "utils.zkasm",
      "lineStr": "    B               :JMPZ(offsetMLOAD32, sliceA)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 357,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(MEM:E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "isStack": 0,
      "isMem": 1,
      "ind": 1,
      "indRR": 0,
      "incStack": 0,
      "offset": 1,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 0,
      "line": 358,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(MEM:E+1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "memAlignRD": 1,
      "memAlignWR": 0,
      "memAlignWR8": 0,
      "line": 360,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MEM_ALIGN_RD"
     },
     {
      "inE": "32",
      "inC": "1",
      "setE": 1,
      "line": 361,
      "fileName": "utils.zkasm",
      "lineStr": "    E*32 + C => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 115,
      "mOp": 1,
      "mWR": 0,
      "line": 362,
      "offsetLabel": "isMLOADX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(isMLOADX)"
     },
     {
      "inB": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4405,
      "useElseAddr": 1,
      "elseAddr": 4399,
      "line": 363,
      "jmpAddrLabel": "offsetMLOAD32",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    B               :JMPZ(offsetMLOAD32)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 111,
      "mOp": 1,
      "mWR": 0,
      "line": 367,
      "offsetLabel": "tmpVarCmload",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCmload)"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "setD": 1,
      "line": 368,
      "fileName": "utils.zkasm",
      "lineStr": "    32 - C => D"
     },
     {
      "CONST": "4402",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "line": 369,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "CONST": "4403",
      "setRR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4616,
      "line": 370,
      "jmpAddrLabel": "SHLarith",
      "fileName": "utils.zkasm",
      "lineStr": "    zkPC+1 => RR    :JMP(SHLarith); in: [A: value, D: #bytes to left shift] out: [A: shifted result]"
     },
     {
      "CONST": "0",
      "offset": 115,
      "mOp": 1,
      "mWR": 1,
      "line": 371,
      "offsetLabel": "isMLOADX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(isMLOADX)"
     },
     {
      "inE": "1",
      "inC": "1",
      "setE": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4406,
      "line": 372,
      "jmpAddrLabel": "endMLOAD",
      "fileName": "utils.zkasm",
      "lineStr": "    E + C => E      :JMP(endMLOAD)"
     },
     {
      "inE": "1",
      "CONST": "32",
      "setE": 1,
      "line": 375,
      "fileName": "utils.zkasm",
      "lineStr": "    E + 32 => E"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 110,
      "mOp": 1,
      "mWR": 0,
      "line": 379,
      "offsetLabel": "tmpVarBmload",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarBmload)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 111,
      "mOp": 1,
      "mWR": 0,
      "line": 380,
      "offsetLabel": "tmpVarCmload",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCmload)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 114,
      "mOp": 1,
      "mWR": 0,
      "line": 381,
      "offsetLabel": "tmpZkPCmload",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCmload)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 112,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 382,
      "offsetLabel": "tmpVarDmload",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarDmload), RETURN"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "line": 385,
      "jmpAddrLabel": "outOfGas",
      "fileName": "utils.zkasm",
      "lineStr": "                    :JMP(outOfGas)"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4412,
      "line": 397,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498071",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4413,
      "line": 398,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "264868",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 4414,
      "line": 399,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*3 :JMPN(outOfCountersPoseidon)"
     },
     {
      "inA": "1",
      "offset": 116,
      "mOp": 1,
      "mWR": 1,
      "line": 402,
      "offsetLabel": "tmpVarAemptyAcc",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A                           :MSTORE(tmpVarAemptyAcc)"
     },
     {
      "inB": "1",
      "offset": 117,
      "mOp": 1,
      "mWR": 1,
      "line": 403,
      "offsetLabel": "tmpVarBemptyAcc",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                           :MSTORE(tmpVarBemptyAcc)"
     },
     {
      "inC": "1",
      "offset": 118,
      "mOp": 1,
      "mWR": 1,
      "line": 404,
      "offsetLabel": "tmpVarCemptyAcc",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                           :MSTORE(tmpVarCemptyAcc)"
     },
     {
      "inD": "1",
      "offset": 119,
      "mOp": 1,
      "mWR": 1,
      "line": 405,
      "offsetLabel": "tmpVarDemptyAcc",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                           :MSTORE(tmpVarDemptyAcc)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 407,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 410,
      "fileName": "utils.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 411,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "line": 412,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                      :SLOAD"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 414,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4435,
      "useElseAddr": 1,
      "elseAddr": 4424,
      "line": 416,
      "jmpAddrLabel": "isNotEmptyAccount",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :LT,JMPC(isNotEmptyAccount)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 418,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 420,
      "fileName": "utils.zkasm",
      "lineStr": "    %SMT_KEY_NONCE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "line": 422,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                      :SLOAD"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 423,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4435,
      "useElseAddr": 1,
      "elseAddr": 4429,
      "line": 425,
      "jmpAddrLabel": "isNotEmptyAccount",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :LT,JMPC(isNotEmptyAccount)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 427,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A"
     },
     {
      "CONST": "2",
      "setB": 1,
      "line": 429,
      "fileName": "utils.zkasm",
      "lineStr": "    %SMT_KEY_SC_CODE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "sRD": 1,
      "line": 431,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                      :SLOAD"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 432,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4435,
      "useElseAddr": 1,
      "elseAddr": 4434,
      "line": 434,
      "jmpAddrLabel": "isNotEmptyAccount",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :LT,JMPC(isNotEmptyAccount)"
     },
     {
      "CONST": "1",
      "setE": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4436,
      "line": 435,
      "jmpAddrLabel": "ISEMPTYEnd",
      "fileName": "utils.zkasm",
      "lineStr": "    1 => E                      :JMP(ISEMPTYEnd)"
     },
     {
      "CONST": "0",
      "setE": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4436,
      "line": 438,
      "jmpAddrLabel": "ISEMPTYEnd",
      "fileName": "utils.zkasm",
      "lineStr": "    0 => E                      :JMP(ISEMPTYEnd)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 116,
      "mOp": 1,
      "mWR": 0,
      "line": 442,
      "offsetLabel": "tmpVarAemptyAcc",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                      :MLOAD(tmpVarAemptyAcc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 117,
      "mOp": 1,
      "mWR": 0,
      "line": 443,
      "offsetLabel": "tmpVarBemptyAcc",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                      :MLOAD(tmpVarBemptyAcc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 118,
      "mOp": 1,
      "mWR": 0,
      "line": 444,
      "offsetLabel": "tmpVarCemptyAcc",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                      :MLOAD(tmpVarCemptyAcc)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 119,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 445,
      "offsetLabel": "tmpVarDemptyAcc",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                      :MLOAD(tmpVarDemptyAcc), RETURN"
     },
     {
      "CONST": "7968958",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4441,
      "line": 457,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 30       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4442,
      "line": 458,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "inB": "1",
      "offset": 120,
      "mOp": 1,
      "mWR": 1,
      "line": 460,
      "offsetLabel": "tmpVarBcompGas",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                       :MSTORE(tmpVarBcompGas)"
     },
     {
      "inC": "1",
      "offset": 121,
      "mOp": 1,
      "mWR": 1,
      "line": 461,
      "offsetLabel": "tmpVarCcompGas",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                       :MSTORE(tmpVarCcompGas)"
     },
     {
      "inD": "1",
      "offset": 122,
      "mOp": 1,
      "mWR": 1,
      "line": 462,
      "offsetLabel": "tmpVarDcompGas",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                       :MSTORE(tmpVarDcompGas)"
     },
     {
      "inE": "1",
      "offset": 123,
      "mOp": 1,
      "mWR": 1,
      "line": 463,
      "offsetLabel": "tmpVarEcompGas",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                       :MSTORE(tmpVarEcompGas)"
     },
     {
      "inGAS": "1",
      "setA": 1,
      "line": 466,
      "fileName": "utils.zkasm",
      "lineStr": "    GAS => A"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getReg",
         "regName": "GAS"
        },
        {
         "op": "number",
         "num": "6"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5015,
      "useElseAddr": 1,
      "elseAddr": 4448,
      "line": 470,
      "jmpAddrLabel": "failAssert",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    ${GAS >> 6} => C        :JMPN(failAssert)"
     },
     {
      "freeInTag": {
       "op": "bitand",
       "values": [
        {
         "op": "getReg",
         "regName": "GAS"
        },
        {
         "op": "number",
         "num": "63"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 471,
      "fileName": "utils.zkasm",
      "lineStr": "    ${GAS & 0x3f} => D"
     },
     {
      "inC": "64",
      "inD": "1",
      "assert": 1,
      "line": 477,
      "fileName": "utils.zkasm",
      "lineStr": "    C * 64 + D              :ASSERT"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 478,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONST": "64",
      "setB": 1,
      "line": 479,
      "fileName": "utils.zkasm",
      "lineStr": "    0x40 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4453,
      "useElseAddr": 1,
      "elseAddr": 5015,
      "line": 480,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "failAssert",
      "fileName": "utils.zkasm",
      "lineStr": "    $                       :LT,JMPNC(failAssert)"
     },
     {
      "inGAS": "1",
      "inC": "-1",
      "setA": 1,
      "line": 481,
      "fileName": "utils.zkasm",
      "lineStr": "    GAS - C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 24,
      "mOp": 1,
      "mWR": 0,
      "line": 482,
      "offsetLabel": "gasCall",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                  :MLOAD(gasCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4457,
      "useElseAddr": 1,
      "elseAddr": 4456,
      "line": 484,
      "jmpAddrLabel": "computeGasSendCallEnd",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                       :LT,JMPC(computeGasSendCallEnd)"
     },
     {
      "inB": "1",
      "setA": 1,
      "line": 486,
      "fileName": "utils.zkasm",
      "lineStr": "    B => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 120,
      "mOp": 1,
      "mWR": 0,
      "line": 490,
      "offsetLabel": "tmpVarBcompGas",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                  :MLOAD(tmpVarBcompGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 121,
      "mOp": 1,
      "mWR": 0,
      "line": 491,
      "offsetLabel": "tmpVarCcompGas",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                  :MLOAD(tmpVarCcompGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 122,
      "mOp": 1,
      "mWR": 0,
      "line": 492,
      "offsetLabel": "tmpVarDcompGas",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                  :MLOAD(tmpVarDcompGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 123,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 493,
      "offsetLabel": "tmpVarEcompGas",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                  :MLOAD(tmpVarEcompGas), RETURN"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4462,
      "line": 506,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498069",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4463,
      "line": 507,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 5 :JMPN(outOfCountersBinary)"
     },
     {
      "inRR": "1",
      "offset": 129,
      "mOp": 1,
      "mWR": 1,
      "line": 508,
      "offsetLabel": "tmpZkPCsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR                          :MSTORE(tmpZkPCsaveMem)"
     },
     {
      "inA": "1",
      "offset": 124,
      "mOp": 1,
      "mWR": 1,
      "line": 509,
      "offsetLabel": "tmpVarAsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A                           :MSTORE(tmpVarAsaveMem)"
     },
     {
      "inB": "1",
      "offset": 125,
      "mOp": 1,
      "mWR": 1,
      "line": 510,
      "offsetLabel": "tmpVarBsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                           :MSTORE(tmpVarBsaveMem)"
     },
     {
      "inC": "1",
      "offset": 126,
      "mOp": 1,
      "mWR": 1,
      "line": 511,
      "offsetLabel": "tmpVarCsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                           :MSTORE(tmpVarCsaveMem)"
     },
     {
      "inD": "1",
      "offset": 127,
      "mOp": 1,
      "mWR": 1,
      "line": 512,
      "offsetLabel": "tmpVarDsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                           :MSTORE(tmpVarDsaveMem)"
     },
     {
      "inE": "1",
      "offset": 128,
      "mOp": 1,
      "mWR": 1,
      "line": 513,
      "offsetLabel": "tmpVarEsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                           :MSTORE(tmpVarEsaveMem)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 19,
      "mOp": 1,
      "mWR": 0,
      "line": 514,
      "offsetLabel": "lastMemLength",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                      :MLOAD(lastMemLength)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 516,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4499,
      "useElseAddr": 1,
      "elseAddr": 4472,
      "line": 517,
      "jmpAddrLabel": "saveMemEnd",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :EQ, JMPC(saveMemEnd)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 21,
      "mOp": 1,
      "mWR": 0,
      "line": 518,
      "offsetLabel": "lastMemOffset",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                      :MLOAD(lastMemOffset)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "bin": 1,
      "binOpcode": 0,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 4474,
      "line": 521,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                      :ADD, JMPC(outOfGas)"
     },
     {
      "CONST": "4194272",
      "setA": 1,
      "line": 523,
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_MEM_EXPANSION_BYTES => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 4476,
      "line": 524,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :LT,JMPC(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 18,
      "mOp": 1,
      "mWR": 0,
      "line": 528,
      "offsetLabel": "memLength",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                      :MLOAD(memLength)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4478,
      "useElseAddr": 1,
      "elseAddr": 4499,
      "line": 529,
      "jmpAddrLabel": "saveMemGAS",
      "elseAddrLabel": "saveMemEnd",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :LT, JMPC(saveMemGAS, saveMemEnd)"
     },
     {
      "inB": "1",
      "offset": 18,
      "mOp": 1,
      "mWR": 1,
      "line": 533,
      "offsetLabel": "memLength",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    B                           :MSTORE(memLength)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 534,
      "fileName": "utils.zkasm",
      "lineStr": "    B => E"
     },
     {
      "inE": "1",
      "CONST": "31",
      "setA": 1,
      "line": 537,
      "fileName": "utils.zkasm",
      "lineStr": "    E + 31 => A"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "number",
         "num": "5"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5015,
      "useElseAddr": 1,
      "elseAddr": 4482,
      "line": 541,
      "jmpAddrLabel": "failAssert",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    ${A >> 5} => E              :JMPN(failAssert)"
     },
     {
      "freeInTag": {
       "op": "bitand",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "number",
         "num": "31"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 542,
      "fileName": "utils.zkasm",
      "lineStr": "    ${A & 0x1f} => D"
     },
     {
      "inE": "32",
      "inD": "1",
      "assert": 1,
      "line": 548,
      "fileName": "utils.zkasm",
      "lineStr": "    E * 32 + D                  :ASSERT"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 549,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONST": "32",
      "setB": 1,
      "line": 550,
      "fileName": "utils.zkasm",
      "lineStr": "    0x20 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4487,
      "useElseAddr": 1,
      "elseAddr": 5015,
      "line": 551,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "failAssert",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :LT,JMPNC(failAssert)"
     },
     {
      "inE": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 554,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                           :MSTORE(arithA)"
     },
     {
      "inE": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 555,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "utils.zkasm",
      "lineStr": "    E                           :MSTORE(arithB), CALL(mulARITH); in: [arithA, arithB] out: [arithRes1: arithA*arithB, mulFlagOverflow: value overflow, mulArithOverflowFlag: set to 1 if operation causes overflow]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 556,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                      :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 142,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4491,
      "useElseAddr": 1,
      "elseAddr": 4670,
      "line": 557,
      "offsetLabel": "mulArithOverflowFlag",
      "useCTX": 0,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "outOfGas",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :MLOAD(mulArithOverflowFlag), JMPNZ(outOfGas)"
     },
     {
      "inC": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 558,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                           :MSTORE(arithA)"
     },
     {
      "CONST": "512",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 559,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "utils.zkasm",
      "lineStr": "    512                         :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 560,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                      :MLOAD(arithRes1)"
     },
     {
      "inA": "1",
      "inE": "3",
      "setA": 1,
      "line": 561,
      "fileName": "utils.zkasm",
      "lineStr": "    A + 3*E => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 20,
      "mOp": 1,
      "mWR": 0,
      "line": 562,
      "offsetLabel": "lastMemoryExpansionCost",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                      :MLOAD(lastMemoryExpansionCost)"
     },
     {
      "inA": "1",
      "offset": 20,
      "mOp": 1,
      "mWR": 1,
      "line": 563,
      "offsetLabel": "lastMemoryExpansionCost",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    A                           :MSTORE(lastMemoryExpansionCost)"
     },
     {
      "inA": "1",
      "inB": "-1",
      "setA": 1,
      "line": 565,
      "fileName": "utils.zkasm",
      "lineStr": "    A - B => A"
     },
     {
      "inGAS": "1",
      "inA": "-1",
      "setGAS": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4670,
      "useElseAddr": 1,
      "elseAddr": 4499,
      "line": 567,
      "jmpAddrLabel": "outOfGas",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    GAS - A => GAS               :JMPN(outOfGas)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 124,
      "mOp": 1,
      "mWR": 0,
      "line": 571,
      "offsetLabel": "tmpVarAsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                      :MLOAD(tmpVarAsaveMem)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 125,
      "mOp": 1,
      "mWR": 0,
      "line": 572,
      "offsetLabel": "tmpVarBsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                      :MLOAD(tmpVarBsaveMem)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 126,
      "mOp": 1,
      "mWR": 0,
      "line": 573,
      "offsetLabel": "tmpVarCsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                      :MLOAD(tmpVarCsaveMem)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 127,
      "mOp": 1,
      "mWR": 0,
      "line": 574,
      "offsetLabel": "tmpVarDsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                      :MLOAD(tmpVarDsaveMem)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 129,
      "mOp": 1,
      "mWR": 0,
      "line": 575,
      "offsetLabel": "tmpZkPCsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR                     :MLOAD(tmpZkPCsaveMem)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 128,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 576,
      "offsetLabel": "tmpVarEsaveMem",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                      :MLOAD(tmpVarEsaveMem), RETURN"
     },
     {
      "inRR": "1",
      "offset": 135,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4572,
      "call": 1,
      "line": 596,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "jmpAddrLabel": "storeTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCArith), CALL(storeTmp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 136,
      "mOp": 1,
      "mWR": 0,
      "line": 597,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithA)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 137,
      "mOp": 1,
      "mWR": 0,
      "line": 598,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(arithB)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "bin": 1,
      "binOpcode": 0,
      "offset": 138,
      "mOp": 1,
      "mWR": 1,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4510,
      "useElseAddr": 1,
      "elseAddr": 4509,
      "line": 599,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "jmpAddrLabel": "setAddArithOverflow",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :ADD, MSTORE(arithRes1), JMPC(setAddArithOverflow)"
     },
     {
      "CONST": "0",
      "offset": 140,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4511,
      "line": 600,
      "offsetLabel": "addArithOverflow",
      "useCTX": 0,
      "jmpAddrLabel": "finishAddArith",
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(addArithOverflow), JMP(finishAddArith)"
     },
     {
      "CONST": "1",
      "offset": 140,
      "mOp": 1,
      "mWR": 1,
      "line": 603,
      "offsetLabel": "addArithOverflow",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    1               :MSTORE(addArithOverflow)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 135,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4567,
      "line": 606,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "jmpAddrLabel": "loadTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith), JMP(loadTmp)"
     },
     {
      "inRR": "1",
      "offset": 135,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4572,
      "call": 1,
      "line": 614,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "jmpAddrLabel": "storeTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCArith),CALL(storeTmp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 136,
      "mOp": 1,
      "mWR": 0,
      "line": 615,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithA)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 137,
      "mOp": 1,
      "mWR": 0,
      "line": 616,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(arithB)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 1,
      "line": 617,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :SUB,MSTORE(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 135,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4567,
      "line": 618,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "jmpAddrLabel": "loadTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith),JMP(loadTmp)"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4518,
      "line": 630,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "249036",
      "inCntArith": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4667,
      "useElseAddr": 1,
      "elseAddr": 4519,
      "line": 631,
      "jmpAddrLabel": "outOfCountersArith",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1   :JMPN(outOfCountersArith)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4520,
      "line": 632,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inRR": "1",
      "offset": 135,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4572,
      "call": 1,
      "line": 634,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "jmpAddrLabel": "storeTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCArith), CALL(storeTmp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 136,
      "mOp": 1,
      "mWR": 0,
      "line": 635,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithA)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 137,
      "mOp": 1,
      "mWR": 0,
      "line": 636,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(arithB)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 637,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_mulArith"
         },
         {
          "op": "mul",
          "values": [
           {
            "op": "getReg",
            "regName": "A"
           },
           {
            "op": "getReg",
            "regName": "B"
           }
          ]
         }
        ]
       }
      ],
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulArith"
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 639,
      "fileName": "utils.zkasm",
      "lineStr": "    ${_mulArith >> 256} => D"
     },
     {
      "freeInTag": {
       "op": "getVar",
       "varName": "_mulArith"
      },
      "inFREE": "1",
      "setE": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 640,
      "fileName": "utils.zkasm",
      "lineStr": "    ${_mulArith} => E :ARITH"
     },
     {
      "inE": "1",
      "offset": 138,
      "mOp": 1,
      "mWR": 1,
      "line": 642,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E               :MSTORE(arithRes1)"
     },
     {
      "inD": "1",
      "offset": 141,
      "mOp": 1,
      "mWR": 1,
      "line": 643,
      "offsetLabel": "mulArithOverflowValue",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D               :MSTORE(mulArithOverflowValue)"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 644,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 645,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4531,
      "useElseAddr": 1,
      "elseAddr": 4532,
      "line": 646,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "setMulArithOverflow",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :EQ,JMPNC(setMulArithOverflow)"
     },
     {
      "CONST": "0",
      "offset": 142,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4533,
      "line": 647,
      "offsetLabel": "mulArithOverflowFlag",
      "useCTX": 0,
      "jmpAddrLabel": "finishMulArith",
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(mulArithOverflowFlag), JMP(finishMulArith)"
     },
     {
      "CONST": "1",
      "offset": 142,
      "mOp": 1,
      "mWR": 1,
      "line": 650,
      "offsetLabel": "mulArithOverflowFlag",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    1               :MSTORE(mulArithOverflowFlag)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 135,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4567,
      "line": 653,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "jmpAddrLabel": "loadTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR        :MLOAD(tmpZkPCArith),JMP(loadTmp)"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4535,
      "line": 662,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498071",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4536,
      "line": 663,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249036",
      "inCntArith": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4667,
      "useElseAddr": 1,
      "elseAddr": 4537,
      "line": 664,
      "jmpAddrLabel": "outOfCountersArith",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1   :JMPN(outOfCountersArith)"
     },
     {
      "inRR": "1",
      "offset": 135,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4572,
      "call": 1,
      "line": 666,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "jmpAddrLabel": "storeTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCArith), CALL(storeTmp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 136,
      "mOp": 1,
      "mWR": 0,
      "line": 667,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(arithA)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 137,
      "mOp": 1,
      "mWR": 0,
      "line": 668,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithB)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 670,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4559,
      "useElseAddr": 1,
      "elseAddr": 4542,
      "line": 671,
      "jmpAddrLabel": "zeroDiv",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :EQ, JMPC(zeroDiv)"
     },
     {
      "inA": "1",
      "setC": 1,
      "line": 674,
      "fileName": "utils.zkasm",
      "lineStr": "    A => C ; store temporally A in C"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 675,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A ; divisor"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 676,
      "fileName": "utils.zkasm",
      "lineStr": "    C => B ; denominator"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4563,
      "useElseAddr": 1,
      "elseAddr": 4546,
      "line": 677,
      "jmpAddrLabel": "divisorSmallerDiv",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :LT, JMPC(divisorSmallerDiv)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 678,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A"
     },
     {
      "freeInTag": {
       "op": "mod",
       "values": [
        {
         "op": "getReg",
         "regName": "E"
        },
        {
         "op": "getReg",
         "regName": "A"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "line": 680,
      "fileName": "utils.zkasm",
      "lineStr": "    ${E%A} => C ; remainder"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getReg",
         "regName": "E"
        },
        {
         "op": "getReg",
         "regName": "A"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 681,
      "fileName": "utils.zkasm",
      "lineStr": "    ${E/A} => B"
     },
     {
      "CONST": "0",
      "setD": 1,
      "line": 682,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => D"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 683,
      "fileName": "utils.zkasm",
      "lineStr": "    E               :ARITH"
     },
     {
      "inB": "1",
      "offset": 138,
      "mOp": 1,
      "mWR": 1,
      "line": 685,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B               :MSTORE(arithRes1)"
     },
     {
      "inC": "1",
      "offset": 139,
      "mOp": 1,
      "mWR": 1,
      "line": 686,
      "offsetLabel": "arithRes2",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C               :MSTORE(arithRes2)"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 689,
      "fileName": "utils.zkasm",
      "lineStr": "    A => B ; divisor"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 690,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A ; remainder"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 2,
      "line": 691,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :LT"
     },
     {
      "CONST": "1",
      "assert": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4567,
      "call": 1,
      "line": 692,
      "jmpAddrLabel": "loadTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    1               :ASSERT,CALL(loadTmp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 135,
      "mOp": 1,
      "mWR": 0,
      "line": 693,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 694,
      "fileName": "utils.zkasm",
      "lineStr": "                    :RETURN"
     },
     {
      "CONST": "0",
      "offset": 138,
      "mOp": 1,
      "mWR": 1,
      "line": 697,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(arithRes1)"
     },
     {
      "CONST": "0",
      "offset": 139,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4567,
      "call": 1,
      "line": 698,
      "offsetLabel": "arithRes2",
      "useCTX": 0,
      "jmpAddrLabel": "loadTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(arithRes2), CALL(loadTmp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 135,
      "mOp": 1,
      "mWR": 0,
      "line": 699,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 700,
      "fileName": "utils.zkasm",
      "lineStr": "                    :RETURN"
     },
     {
      "CONST": "0",
      "offset": 138,
      "mOp": 1,
      "mWR": 1,
      "line": 703,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(arithRes1)"
     },
     {
      "inE": "1",
      "offset": 139,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4567,
      "call": 1,
      "line": 704,
      "offsetLabel": "arithRes2",
      "useCTX": 0,
      "jmpAddrLabel": "loadTmp",
      "fileName": "utils.zkasm",
      "lineStr": "    E               :MSTORE(arithRes2), CALL(loadTmp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 135,
      "mOp": 1,
      "mWR": 0,
      "line": 705,
      "offsetLabel": "tmpZkPCArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCArith)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 706,
      "fileName": "utils.zkasm",
      "lineStr": "                    :RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 130,
      "mOp": 1,
      "mWR": 0,
      "line": 709,
      "offsetLabel": "tmpVarAArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                  :MLOAD(tmpVarAArith)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 131,
      "mOp": 1,
      "mWR": 0,
      "line": 710,
      "offsetLabel": "tmpVarBArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                  :MLOAD(tmpVarBArith)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 132,
      "mOp": 1,
      "mWR": 0,
      "line": 711,
      "offsetLabel": "tmpVarCArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                  :MLOAD(tmpVarCArith)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 133,
      "mOp": 1,
      "mWR": 0,
      "line": 712,
      "offsetLabel": "tmpVarDArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                  :MLOAD(tmpVarDArith)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 134,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 713,
      "offsetLabel": "tmpVarEArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                  :MLOAD(tmpVarEArith), RETURN"
     },
     {
      "inA": "1",
      "offset": 130,
      "mOp": 1,
      "mWR": 1,
      "line": 716,
      "offsetLabel": "tmpVarAArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A                   :MSTORE(tmpVarAArith)"
     },
     {
      "inB": "1",
      "offset": 131,
      "mOp": 1,
      "mWR": 1,
      "line": 717,
      "offsetLabel": "tmpVarBArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                   :MSTORE(tmpVarBArith)"
     },
     {
      "inC": "1",
      "offset": 132,
      "mOp": 1,
      "mWR": 1,
      "line": 718,
      "offsetLabel": "tmpVarCArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                   :MSTORE(tmpVarCArith)"
     },
     {
      "inD": "1",
      "offset": 133,
      "mOp": 1,
      "mWR": 1,
      "line": 719,
      "offsetLabel": "tmpVarDArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                   :MSTORE(tmpVarDArith)"
     },
     {
      "inE": "1",
      "offset": 134,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 720,
      "offsetLabel": "tmpVarEArith",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                   :MSTORE(tmpVarEArith), RETURN"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4578,
      "line": 737,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4579,
      "line": 738,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249036",
      "inCntArith": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4667,
      "useElseAddr": 1,
      "elseAddr": 4580,
      "line": 739,
      "jmpAddrLabel": "outOfCountersArith",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1   :JMPN(outOfCountersArith)"
     },
     {
      "inRR": "1",
      "offset": 144,
      "mOp": 1,
      "mWR": 1,
      "line": 741,
      "offsetLabel": "tmpSHXZkPC2",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR                      :MSTORE(tmpSHXZkPC2)"
     },
     {
      "inB": "1",
      "offset": 145,
      "mOp": 1,
      "mWR": 1,
      "line": 742,
      "offsetLabel": "tmpVarBSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                       :MSTORE(tmpVarBSHX)"
     },
     {
      "inC": "1",
      "offset": 146,
      "mOp": 1,
      "mWR": 1,
      "line": 743,
      "offsetLabel": "tmpVarCSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                       :MSTORE(tmpVarCSHX)"
     },
     {
      "inD": "1",
      "offset": 147,
      "mOp": 1,
      "mWR": 1,
      "line": 744,
      "offsetLabel": "tmpVarDSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                       :MSTORE(tmpVarDSHX)"
     },
     {
      "inE": "1",
      "offset": 148,
      "mOp": 1,
      "mWR": 1,
      "line": 745,
      "offsetLabel": "tmpVarESHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                       :MSTORE(tmpVarESHX)"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 747,
      "fileName": "utils.zkasm",
      "lineStr": "    A => E"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 749,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONST": "8",
      "setB": 1,
      "line": 751,
      "fileName": "utils.zkasm",
      "lineStr": "    8 => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 752,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "CONST": "0",
      "setD": 1,
      "line": 753,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => D"
     },
     {
      "freeInTag": {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 755,
      "fileName": "utils.zkasm",
      "lineStr": "    ${A*B} => D             :ARITH"
     },
     {
      "inE": "1",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4599,
      "line": 757,
      "jmpAddrLabel": "SHRarithinit",
      "fileName": "utils.zkasm",
      "lineStr": "    E => A                  :JMP(SHRarithinit)"
     },
     {
      "CONST": "7968958",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4593,
      "line": 764,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 30       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4594,
      "line": 765,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "inRR": "1",
      "offset": 144,
      "mOp": 1,
      "mWR": 1,
      "line": 766,
      "offsetLabel": "tmpSHXZkPC2",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR                      :MSTORE(tmpSHXZkPC2)"
     },
     {
      "inB": "1",
      "offset": 145,
      "mOp": 1,
      "mWR": 1,
      "line": 767,
      "offsetLabel": "tmpVarBSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                       :MSTORE(tmpVarBSHX)"
     },
     {
      "inC": "1",
      "offset": 146,
      "mOp": 1,
      "mWR": 1,
      "line": 768,
      "offsetLabel": "tmpVarCSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                       :MSTORE(tmpVarCSHX)"
     },
     {
      "inD": "1",
      "offset": 147,
      "mOp": 1,
      "mWR": 1,
      "line": 769,
      "offsetLabel": "tmpVarDSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                       :MSTORE(tmpVarDSHX)"
     },
     {
      "inE": "1",
      "offset": 148,
      "mOp": 1,
      "mWR": 1,
      "line": 770,
      "offsetLabel": "tmpVarESHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                       :MSTORE(tmpVarESHX)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 773,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4611,
      "useElseAddr": 1,
      "elseAddr": 4601,
      "line": 775,
      "jmpAddrLabel": "SHRarithfinal",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                       :EQ,JMPC(SHRarithfinal)"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 777,
      "fileName": "utils.zkasm",
      "lineStr": "    A => E"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 779,
      "fileName": "utils.zkasm",
      "lineStr": "    D => B"
     },
     {
      "CONST": "255",
      "setA": 1,
      "line": 780,
      "fileName": "utils.zkasm",
      "lineStr": "    255 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4610,
      "useElseAddr": 1,
      "elseAddr": 4605,
      "line": 782,
      "jmpAddrLabel": "SHRarith0",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                       :LT,JMPC(SHRarith0)"
     },
     {
      "inD": "1",
      "setRR": 1,
      "line": 783,
      "fileName": "utils.zkasm",
      "lineStr": "    D => RR"
     },
     {
      "inE": "1",
      "setA": 1,
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 784,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A                  :MSTORE(arithA)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "offset": 3647,
      "ind": 0,
      "indRR": 1,
      "return": 0,
      "call": 1,
      "line": 785,
      "offsetLabel": "exp_num",
      "fileName": "utils.zkasm",
      "lineStr": "                            :CALL(@exp_num + RR); out:[B: 2**RR]"
     },
     {
      "inB": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 786,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "utils.zkasm",
      "lineStr": "    B                       :MSTORE(arithB),CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4611,
      "line": 787,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "jmpAddrLabel": "SHRarithfinal",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                  :MLOAD(arithRes1),JMP(SHRarithfinal)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 790,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 145,
      "mOp": 1,
      "mWR": 0,
      "line": 793,
      "offsetLabel": "tmpVarBSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                  :MLOAD(tmpVarBSHX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 146,
      "mOp": 1,
      "mWR": 0,
      "line": 794,
      "offsetLabel": "tmpVarCSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                  :MLOAD(tmpVarCSHX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 147,
      "mOp": 1,
      "mWR": 0,
      "line": 795,
      "offsetLabel": "tmpVarDSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                  :MLOAD(tmpVarDSHX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 144,
      "mOp": 1,
      "mWR": 0,
      "line": 796,
      "offsetLabel": "tmpSHXZkPC2",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR                 :MLOAD(tmpSHXZkPC2)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 148,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 797,
      "offsetLabel": "tmpVarESHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                  :MLOAD(tmpVarESHX), RETURN"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4617,
      "line": 805,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498070",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4618,
      "line": 806,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 4 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249035",
      "inCntArith": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4667,
      "useElseAddr": 1,
      "elseAddr": 4619,
      "line": 807,
      "jmpAddrLabel": "outOfCountersArith",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 2   :JMPN(outOfCountersArith)"
     },
     {
      "inRR": "1",
      "offset": 144,
      "mOp": 1,
      "mWR": 1,
      "line": 808,
      "offsetLabel": "tmpSHXZkPC2",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR                      :MSTORE(tmpSHXZkPC2)"
     },
     {
      "inB": "1",
      "offset": 145,
      "mOp": 1,
      "mWR": 1,
      "line": 809,
      "offsetLabel": "tmpVarBSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                       :MSTORE(tmpVarBSHX)"
     },
     {
      "inC": "1",
      "offset": 146,
      "mOp": 1,
      "mWR": 1,
      "line": 810,
      "offsetLabel": "tmpVarCSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                       :MSTORE(tmpVarCSHX)"
     },
     {
      "inD": "1",
      "offset": 147,
      "mOp": 1,
      "mWR": 1,
      "line": 811,
      "offsetLabel": "tmpVarDSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                       :MSTORE(tmpVarDSHX)"
     },
     {
      "inE": "1",
      "offset": 148,
      "mOp": 1,
      "mWR": 1,
      "line": 812,
      "offsetLabel": "tmpVarESHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                       :MSTORE(tmpVarESHX)"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 814,
      "fileName": "utils.zkasm",
      "lineStr": "    A => E"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 816,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONST": "8",
      "setB": 1,
      "line": 817,
      "fileName": "utils.zkasm",
      "lineStr": "    8 => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "setD": 1,
      "line": 818,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C, D"
     },
     {
      "freeInTag": {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 820,
      "fileName": "utils.zkasm",
      "lineStr": "    ${A*B} => D             :ARITH"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 822,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4639,
      "line": 823,
      "jmpAddrLabel": "SHLarithinit",
      "fileName": "utils.zkasm",
      "lineStr": "                            :JMP(SHLarithinit)"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4632,
      "line": 826,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4633,
      "line": 827,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249036",
      "inCntArith": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4667,
      "useElseAddr": 1,
      "elseAddr": 4634,
      "line": 828,
      "jmpAddrLabel": "outOfCountersArith",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 1   :JMPN(outOfCountersArith)"
     },
     {
      "inRR": "1",
      "offset": 144,
      "mOp": 1,
      "mWR": 1,
      "line": 829,
      "offsetLabel": "tmpSHXZkPC2",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR                      :MSTORE(tmpSHXZkPC2)"
     },
     {
      "inB": "1",
      "offset": 145,
      "mOp": 1,
      "mWR": 1,
      "line": 830,
      "offsetLabel": "tmpVarBSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                       :MSTORE(tmpVarBSHX)"
     },
     {
      "inC": "1",
      "offset": 146,
      "mOp": 1,
      "mWR": 1,
      "line": 831,
      "offsetLabel": "tmpVarCSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                       :MSTORE(tmpVarCSHX)"
     },
     {
      "inD": "1",
      "offset": 147,
      "mOp": 1,
      "mWR": 1,
      "line": 832,
      "offsetLabel": "tmpVarDSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                       :MSTORE(tmpVarDSHX)"
     },
     {
      "inE": "1",
      "offset": 148,
      "mOp": 1,
      "mWR": 1,
      "line": 833,
      "offsetLabel": "tmpVarESHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                       :MSTORE(tmpVarESHX)"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 837,
      "fileName": "utils.zkasm",
      "lineStr": "    A => E"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 838,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 840,
      "fileName": "utils.zkasm",
      "lineStr": "    D => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4657,
      "useElseAddr": 1,
      "elseAddr": 4643,
      "line": 842,
      "jmpAddrLabel": "SHLarithfinal",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                       :EQ,JMPC(SHLarithfinal)"
     },
     {
      "CONST": "255",
      "setA": 1,
      "line": 843,
      "fileName": "utils.zkasm",
      "lineStr": "    255 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4655,
      "useElseAddr": 1,
      "elseAddr": 4645,
      "line": 845,
      "jmpAddrLabel": "SHLarith0",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                       :LT,JMPC(SHLarith0)"
     },
     {
      "inD": "1",
      "setRR": 1,
      "line": 847,
      "fileName": "utils.zkasm",
      "lineStr": "    D => RR"
     },
     {
      "inE": "1",
      "setA": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "offset": 3647,
      "ind": 0,
      "indRR": 1,
      "return": 0,
      "call": 1,
      "line": 849,
      "offsetLabel": "exp_num",
      "fileName": "utils.zkasm",
      "lineStr": "    E => A                  :CALL(@exp_num + RR); out:[B: 2**RR]"
     },
     {
      "freeInTag": {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "line": 851,
      "fileName": "utils.zkasm",
      "lineStr": "    ${A*B} => E"
     },
     {
      "inE": "1",
      "offset": 149,
      "mOp": 1,
      "mWR": 1,
      "line": 852,
      "offsetLabel": "result",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                       :MSTORE(result)"
     },
     {
      "CONST": "256",
      "inD": "-1",
      "setD": 1,
      "setRR": 1,
      "line": 854,
      "fileName": "utils.zkasm",
      "lineStr": "    256 - D => D, RR"
     },
     {
      "inB": "1",
      "setC": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "offset": 3647,
      "ind": 0,
      "indRR": 1,
      "return": 0,
      "call": 1,
      "line": 855,
      "offsetLabel": "exp_num",
      "fileName": "utils.zkasm",
      "lineStr": "    B => C                  :CALL(@exp_num + RR); out:[B: 2**RR]"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "getReg",
         "regName": "B"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 856,
      "fileName": "utils.zkasm",
      "lineStr": "    ${A/B} => D"
     },
     {
      "inC": "1",
      "setB": 1,
      "line": 857,
      "fileName": "utils.zkasm",
      "lineStr": "    C => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 858,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "inE": "1",
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4657,
      "line": 859,
      "jmpAddrLabel": "SHLarithfinal",
      "fileName": "utils.zkasm",
      "lineStr": "    E                       :ARITH, JMP(SHLarithfinal)"
     },
     {
      "CONST": "0",
      "setE": 1,
      "line": 862,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => E"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4657,
      "line": 863,
      "jmpAddrLabel": "SHLarithfinal",
      "fileName": "utils.zkasm",
      "lineStr": "                            :JMP(SHLarithfinal)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 866,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 145,
      "mOp": 1,
      "mWR": 0,
      "line": 867,
      "offsetLabel": "tmpVarBSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                  :MLOAD(tmpVarBSHX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 146,
      "mOp": 1,
      "mWR": 0,
      "line": 868,
      "offsetLabel": "tmpVarCSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                  :MLOAD(tmpVarCSHX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 147,
      "mOp": 1,
      "mWR": 0,
      "line": 869,
      "offsetLabel": "tmpVarDSHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                  :MLOAD(tmpVarDSHX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 144,
      "mOp": 1,
      "mWR": 0,
      "line": 870,
      "offsetLabel": "tmpSHXZkPC2",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR                 :MLOAD(tmpSHXZkPC2)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 148,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 871,
      "offsetLabel": "tmpVarESHX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                  :MLOAD(tmpVarESHX), RETURN"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4694,
      "line": 875,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCS"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleBatchError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, OOCS)} :JMP(handleBatchError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4694,
      "line": 877,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCK"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleBatchError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, OOCK)} :JMP(handleBatchError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4694,
      "line": 879,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCB"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleBatchError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, OOCB)} :JMP(handleBatchError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4694,
      "line": 881,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCM"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleBatchError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, OOCM)} :JMP(handleBatchError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4694,
      "line": 883,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCA"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleBatchError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, OOCA)} :JMP(handleBatchError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4694,
      "line": 885,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCPA"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleBatchError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, OOCPA)} :JMP(handleBatchError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4694,
      "line": 887,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOCPO"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleBatchError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, OOCPO)} :JMP(handleBatchError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4679,
      "line": 889,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "OOG"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, OOG)}   :JMP(handleError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4679,
      "line": 891,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "invalidJump"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, invalidJump)} :JMP(handleError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4679,
      "line": 893,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "invalidOpcode"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, invalidOpcode)} :JMP(handleError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4679,
      "line": 895,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "underflow"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, underflow)} :JMP(handleError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4679,
      "line": 897,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "overflow"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, overflow)} :JMP(handleError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4679,
      "line": 899,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "invalidAddressCollision"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, invalidAddressCollision)} :JMP(handleError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4679,
      "line": 901,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "invalidStaticTx"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, invalidStaticTx)} :JMP(handleError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4679,
      "line": 903,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "invalidCodeSize"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, invalidCodeSize)} :JMP(handleError)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4679,
      "line": 905,
      "cmdBefore": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onError"
         },
         {
          "op": "getVar",
          "varName": "invalidCodeStartsEF"
         }
        ]
       }
      ],
      "jmpAddrLabel": "handleError",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onError, invalidCodeStartsEF)} :JMP(handleError)"
     },
     {
      "CONST": "7968488",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4680,
      "line": 908,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 500       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4681,
      "line": 909,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 17,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 3600,
      "call": 1,
      "line": 911,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "jmpAddrLabel": "revertTouched",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => SR         :MLOAD(initSR), CALL(revertTouched)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 913,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(originCTX)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 914,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4696,
      "useElseAddr": 1,
      "elseAddr": 4685,
      "line": 915,
      "jmpAddrLabel": "firstContextInvalid",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :EQ,JMPC(firstContextInvalid)"
     },
     {
      "inA": "1",
      "setCTX": 1,
      "line": 916,
      "fileName": "utils.zkasm",
      "lineStr": "    A => CTX"
     },
     {
      "CONST": "0",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 919,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(retDataCTX)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 920,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    CTX             :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setGAS": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "line": 921,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => GAS        :MLOAD(gasCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 922,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => SP         :MLOAD(lastSP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 923,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => PC         :MLOAD(lastPC)"
     },
     {
      "CONST": "0",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 924,
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(SP++)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 925,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 926,
      "offsetLabel": "depth",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "fileName": "utils.zkasm",
      "lineStr": "    A - 1           :MSTORE(depth), JMP(readCode)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 34,
      "mOp": 1,
      "mWR": 0,
      "line": 930,
      "cmdAfter": [
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onFinishTx"
         }
        ]
       },
       {
        "op": "functionCall",
        "funcName": "eventLog",
        "params": [
         {
          "op": "getVar",
          "varName": "onFinishBatch"
         }
        ]
       }
      ],
      "offsetLabel": "batchSR",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => SR         :MLOAD(batchSR)"
     },
     {
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 59,
      "line": 932,
      "jmpAddrLabel": "processTxsEnd",
      "fileName": "utils.zkasm",
      "lineStr": "    $${eventLog(onFinishBatch)} :JMP(processTxsEnd)"
     },
     {
      "CONST": "0",
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 936,
      "offsetLabel": "gasRefund",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    0               :MSTORE(gasRefund)"
     },
     {
      "CONST": "0",
      "setGAS": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4183,
      "line": 937,
      "jmpAddrLabel": "sendGasSeq",
      "fileName": "utils.zkasm",
      "lineStr": "    0 => GAS        :JMP(sendGasSeq)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4699,
      "line": 946,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20          :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4700,
      "line": 947,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1    :JMPN(outOfCountersBinary)"
     },
     {
      "inA": "1",
      "offset": 150,
      "mOp": 1,
      "mWR": 1,
      "line": 948,
      "offsetLabel": "tmpVarAoffsetUtil",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A                                   :MSTORE(tmpVarAoffsetUtil)"
     },
     {
      "inB": "1",
      "offset": 151,
      "mOp": 1,
      "mWR": 1,
      "line": 949,
      "offsetLabel": "tmpVarBoffsetUtil",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                                   :MSTORE(tmpVarBoffsetUtil)"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "number",
         "num": "5"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5015,
      "useElseAddr": 1,
      "elseAddr": 4703,
      "line": 953,
      "jmpAddrLabel": "failAssert",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    ${A >> 5} => E                      :JMPN(failAssert)"
     },
     {
      "freeInTag": {
       "op": "bitand",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "number",
         "num": "31"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "line": 954,
      "fileName": "utils.zkasm",
      "lineStr": "    ${A & 0x1F} => C"
     },
     {
      "inE": "32",
      "inC": "1",
      "assert": 1,
      "line": 960,
      "fileName": "utils.zkasm",
      "lineStr": "    E * 32 + C                          :ASSERT"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 961,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A"
     },
     {
      "CONST": "32",
      "setB": 1,
      "line": 962,
      "fileName": "utils.zkasm",
      "lineStr": "    0x20 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4708,
      "useElseAddr": 1,
      "elseAddr": 5015,
      "line": 963,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "failAssert",
      "fileName": "utils.zkasm",
      "lineStr": "    $                                   :LT,JMPNC(failAssert)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 150,
      "mOp": 1,
      "mWR": 0,
      "line": 965,
      "offsetLabel": "tmpVarAoffsetUtil",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                              :MLOAD(tmpVarAoffsetUtil)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 151,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 966,
      "offsetLabel": "tmpVarBoffsetUtil",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                              :MLOAD(tmpVarBoffsetUtil), RETURN"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4711,
      "line": 976,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50       :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498071",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4712,
      "line": 977,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 3 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "264611",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 4713,
      "line": 978,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*4 :JMPN(outOfCountersPoseidon)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 35,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4714,
      "useElseAddr": 1,
      "elseAddr": 4733,
      "line": 980,
      "offsetLabel": "isDelegateCall",
      "useCTX": 1,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "endMoveBalances",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(isDelegateCall), JMPNZ(endMoveBalances)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 10,
      "mOp": 1,
      "mWR": 0,
      "line": 982,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(txSrcAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 984,
      "fileName": "utils.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 985,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 987,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :SLOAD"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 989,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                          :MLOAD(txValue)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4734,
      "useElseAddr": 1,
      "elseAddr": 4720,
      "line": 991,
      "jmpAddrLabel": "invalidCall",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                               :LT,JMPC(invalidCall)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "bin": 1,
      "binOpcode": 1,
      "line": 993,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                          :SUB"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 10,
      "mOp": 1,
      "mWR": 0,
      "line": 995,
      "offsetLabel": "txSrcAddr",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(txSrcAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 997,
      "fileName": "utils.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 998,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => SR                         :SSTORE"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 1000,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(storageAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 1002,
      "fileName": "utils.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE  => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "sRD": 1,
      "line": 1004,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :SLOAD"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 3,
      "mOp": 1,
      "mWR": 0,
      "line": 1005,
      "offsetLabel": "txValue",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                          :MLOAD(txValue)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "bin": 1,
      "binOpcode": 0,
      "line": 1006,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                          :ADD"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 2,
      "mOp": 1,
      "mWR": 0,
      "line": 1007,
      "offsetLabel": "storageAddr",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(storageAddr)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 1009,
      "fileName": "utils.zkasm",
      "lineStr": "    %SMT_KEY_BALANCE  => B"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 1010,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 1011,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => SR                         :SSTORE"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1013,
      "fileName": "utils.zkasm",
      "lineStr": "                                    :RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "offset": 17,
      "mOp": 1,
      "mWR": 0,
      "line": 1017,
      "offsetLabel": "initSR",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => SR                         :MLOAD(initSR)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 1018,
      "offsetLabel": "originCTX",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(originCTX)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 1019,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4157,
      "useElseAddr": 1,
      "elseAddr": 4738,
      "line": 1021,
      "jmpAddrLabel": "handleGas",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                               :EQ,JMPC(handleGas)"
     },
     {
      "inA": "1",
      "setCTX": 1,
      "line": 1022,
      "fileName": "utils.zkasm",
      "lineStr": "    A => CTX"
     },
     {
      "CONST": "0",
      "offset": 26,
      "mOp": 1,
      "mWR": 1,
      "line": 1023,
      "offsetLabel": "retDataCTX",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    0                               :MSTORE(retDataCTX)"
     },
     {
      "inCTX": "1",
      "offset": 21,
      "mOp": 1,
      "mWR": 1,
      "line": 1024,
      "offsetLabel": "currentCTX",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    CTX                             :MSTORE(currentCTX)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 38,
      "mOp": 1,
      "mWR": 0,
      "line": 1025,
      "offsetLabel": "gasCTX",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(gasCTX)"
     },
     {
      "inGAS": "1",
      "inA": "1",
      "setGAS": 1,
      "line": 1026,
      "fileName": "utils.zkasm",
      "lineStr": "    GAS + A => GAS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSP": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 1027,
      "offsetLabel": "lastSP",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => SP                         :MLOAD(lastSP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setPC": 1,
      "offset": 32,
      "mOp": 1,
      "mWR": 0,
      "line": 1028,
      "offsetLabel": "lastPC",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => PC                         :MLOAD(lastPC)"
     },
     {
      "CONST": "0",
      "isStack": 1,
      "isMem": 0,
      "ind": 0,
      "indRR": 0,
      "incStack": 1,
      "offset": 0,
      "useCTX": 1,
      "mOp": 1,
      "mWR": 1,
      "line": 1029,
      "fileName": "utils.zkasm",
      "lineStr": "    0                               :MSTORE(SP++)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 30,
      "mOp": 1,
      "mWR": 0,
      "line": 1031,
      "offsetLabel": "depth",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(depth)"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "offset": 30,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4141,
      "line": 1032,
      "offsetLabel": "depth",
      "useCTX": 0,
      "jmpAddrLabel": "readCode",
      "fileName": "utils.zkasm",
      "lineStr": "    A - 1                           :MSTORE(depth), JMP(readCode)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4749,
      "line": 1044,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4750,
      "line": 1045,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inD": "1",
      "offset": 152,
      "mOp": 1,
      "mWR": 1,
      "line": 1046,
      "offsetLabel": "pushBytes",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                           :MSTORE(pushBytes)"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 1047,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONST": "0",
      "offset": 155,
      "mOp": 1,
      "mWR": 1,
      "line": 1048,
      "offsetLabel": "accumulator",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    0                           :MSTORE(accumulator)"
     },
     {
      "inPC": "1",
      "inD": "1",
      "CONST": "-1",
      "setHASHPOS": 1,
      "line": 1049,
      "fileName": "utils.zkasm",
      "lineStr": "    PC + D - 1 => HASHPOS"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "number",
         "num": "2"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5015,
      "useElseAddr": 1,
      "elseAddr": 4755,
      "line": 1053,
      "jmpAddrLabel": "failAssert",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    ${A >> 2} => B              :JMPN(failAssert)"
     },
     {
      "inB": "1",
      "offset": 153,
      "mOp": 1,
      "mWR": 1,
      "line": 1054,
      "offsetLabel": "numBlocks",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                           :MSTORE(numBlocks)"
     },
     {
      "freeInTag": {
       "op": "bitand",
       "values": [
        {
         "op": "getReg",
         "regName": "A"
        },
        {
         "op": "number",
         "num": "3"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 1055,
      "fileName": "utils.zkasm",
      "lineStr": "    ${A & 0x03} => D"
     },
     {
      "inD": "1",
      "offset": 154,
      "mOp": 1,
      "mWR": 1,
      "line": 1056,
      "offsetLabel": "leftBytes",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                           :MSTORE(leftBytes)"
     },
     {
      "inB": "4",
      "inD": "1",
      "assert": 1,
      "line": 1062,
      "fileName": "utils.zkasm",
      "lineStr": "    B * 4 + D                   :ASSERT"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 1063,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONST": "4",
      "setB": 1,
      "line": 1064,
      "fileName": "utils.zkasm",
      "lineStr": "    0x04 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4762,
      "useElseAddr": 1,
      "elseAddr": 5015,
      "line": 1065,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "failAssert",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :LT,JMPNC(failAssert)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 1066,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4764,
      "line": 1069,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4765,
      "line": 1070,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 29,
      "mOp": 1,
      "mWR": 0,
      "line": 1072,
      "offsetLabel": "contractHashId",
      "useCTX": 1,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                      :MLOAD(contractHashId)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 153,
      "mOp": 1,
      "mWR": 0,
      "line": 1073,
      "offsetLabel": "numBlocks",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                      :MLOAD(numBlocks)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4788,
      "useElseAddr": 1,
      "elseAddr": 4768,
      "line": 1074,
      "jmpAddrLabel": "endPushInit",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                           :EQ, JMPC(endPushInit)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP1": 1,
      "line": 1076,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                      :HASHP1(E)"
     },
     {
      "inHASHPOS": "1",
      "CONST": "-2",
      "setHASHPOS": 1,
      "line": 1077,
      "fileName": "utils.zkasm",
      "lineStr": "    HASHPOS - 2 => HASHPOS"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP1": 1,
      "line": 1079,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                      :HASHP1(E)"
     },
     {
      "inHASHPOS": "1",
      "CONST": "-2",
      "setHASHPOS": 1,
      "line": 1080,
      "fileName": "utils.zkasm",
      "lineStr": "    HASHPOS - 2 => HASHPOS"
     },
     {
      "inA": "256",
      "inC": "1",
      "setC": 1,
      "line": 1081,
      "fileName": "utils.zkasm",
      "lineStr": "    A*256 + C => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP1": 1,
      "line": 1083,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                      :HASHP1(E)"
     },
     {
      "inHASHPOS": "1",
      "CONST": "-2",
      "setHASHPOS": 1,
      "line": 1084,
      "fileName": "utils.zkasm",
      "lineStr": "    HASHPOS - 2 => HASHPOS"
     },
     {
      "inA": "65536",
      "inC": "1",
      "setC": 1,
      "line": 1085,
      "fileName": "utils.zkasm",
      "lineStr": "    A*65536 + C => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP1": 1,
      "line": 1087,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                      :HASHP1(E)"
     },
     {
      "inHASHPOS": "1",
      "CONST": "-2",
      "setHASHPOS": 1,
      "line": 1088,
      "fileName": "utils.zkasm",
      "lineStr": "    HASHPOS - 2 => HASHPOS"
     },
     {
      "inA": "16777216",
      "inC": "1",
      "setC": 1,
      "line": 1089,
      "fileName": "utils.zkasm",
      "lineStr": "    A*16777216 + C => C"
     },
     {
      "inB": "1",
      "CONST": "-1",
      "setA": 1,
      "line": 1092,
      "fileName": "utils.zkasm",
      "lineStr": "    B - 1 => A"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4781,
      "line": 1095,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20  :JMPN(outOfCountersStep)"
     },
     {
      "inA": "1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4784,
      "useElseAddr": 1,
      "elseAddr": 4782,
      "line": 1096,
      "jmpAddrLabel": "endRotate",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    A                           :JMPN(endRotate)"
     },
     {
      "inROTL_C": "1",
      "setC": 1,
      "line": 1097,
      "fileName": "utils.zkasm",
      "lineStr": "    ROTL_C => C"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4780,
      "line": 1098,
      "jmpAddrLabel": "doRotateLoop",
      "fileName": "utils.zkasm",
      "lineStr": "    A - 1 => A                  :JMP(doRotateLoop)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 155,
      "mOp": 1,
      "mWR": 0,
      "line": 1101,
      "offsetLabel": "accumulator",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                      :MLOAD(accumulator)"
     },
     {
      "inC": "1",
      "inD": "1",
      "setD": 1,
      "line": 1102,
      "fileName": "utils.zkasm",
      "lineStr": "    C + D => D"
     },
     {
      "inD": "1",
      "offset": 155,
      "mOp": 1,
      "mWR": 1,
      "line": 1103,
      "offsetLabel": "accumulator",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                           :MSTORE(accumulator)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4763,
      "line": 1104,
      "jmpAddrLabel": "readPushBlock",
      "fileName": "utils.zkasm",
      "lineStr": "    B + 1 => B                  :JMP(readPushBlock)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 154,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4813,
      "useElseAddr": 1,
      "elseAddr": 4789,
      "line": 1107,
      "offsetLabel": "leftBytes",
      "useCTX": 0,
      "jmpAddrLabel": "finalPush",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(leftBytes), JMPZ(finalPush)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 1108,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "CONST": "0",
      "setB": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4791,
      "line": 1109,
      "jmpAddrLabel": "endPushLoop",
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B                          :JMP(endPushLoop)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4792,
      "line": 1112,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498070",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4793,
      "line": 1113,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 4 :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 154,
      "mOp": 1,
      "mWR": 0,
      "line": 1115,
      "offsetLabel": "leftBytes",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                          :MLOAD(leftBytes)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4804,
      "useElseAddr": 1,
      "elseAddr": 4795,
      "line": 1116,
      "jmpAddrLabel": "endPushFinal",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                               :EQ, JMPC(endPushFinal)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP1": 1,
      "line": 1118,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                          :HASHP1(E)"
     },
     {
      "inHASHPOS": "1",
      "CONST": "-2",
      "setHASHPOS": 1,
      "line": 1119,
      "fileName": "utils.zkasm",
      "lineStr": "    HASHPOS - 2 => HASHPOS"
     },
     {
      "inB": "1",
      "CONST": "-1",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4798,
      "line": 1120,
      "jmpAddrLabel": "computeFactorLoop",
      "fileName": "utils.zkasm",
      "lineStr": "    B - 1 => A                      :JMP(computeFactorLoop)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4799,
      "line": 1123,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "inA": "1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4802,
      "useElseAddr": 1,
      "elseAddr": 4800,
      "line": 1124,
      "jmpAddrLabel": "computeFactorEnd",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    A                               :JMPN(computeFactorEnd)"
     },
     {
      "inD": "256",
      "setD": 1,
      "line": 1125,
      "fileName": "utils.zkasm",
      "lineStr": "    256*D => D"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4798,
      "line": 1126,
      "jmpAddrLabel": "computeFactorLoop",
      "fileName": "utils.zkasm",
      "lineStr": "    A - 1 => A                      :JMP(computeFactorLoop)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "setB": 1,
      "line": 1129,
      "fileName": "utils.zkasm",
      "lineStr": "    B + 1 => B"
     },
     {
      "inD": "1",
      "inC": "1",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4791,
      "line": 1130,
      "jmpAddrLabel": "endPushLoop",
      "fileName": "utils.zkasm",
      "lineStr": "    D + C => C                      :JMP(endPushLoop)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 153,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4805,
      "line": 1133,
      "offsetLabel": "numBlocks",
      "useCTX": 0,
      "jmpAddrLabel": "doRotate2",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                          :MLOAD(numBlocks), JMP(doRotate2)"
     },
     {
      "inB": "1",
      "CONST": "-1",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4806,
      "line": 1136,
      "jmpAddrLabel": "doRotateLoop2",
      "fileName": "utils.zkasm",
      "lineStr": "    B - 1 => A                      :JMP(doRotateLoop2)"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4807,
      "line": 1139,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10  :JMPN(outOfCountersStep)"
     },
     {
      "inA": "1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4810,
      "useElseAddr": 1,
      "elseAddr": 4808,
      "line": 1140,
      "jmpAddrLabel": "endRotate2",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    A                           :JMPN(endRotate2)"
     },
     {
      "inROTL_C": "1",
      "setC": 1,
      "line": 1141,
      "fileName": "utils.zkasm",
      "lineStr": "    ROTL_C => C"
     },
     {
      "inA": "1",
      "CONST": "-1",
      "setA": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4806,
      "line": 1142,
      "jmpAddrLabel": "doRotateLoop2",
      "fileName": "utils.zkasm",
      "lineStr": "    A - 1 => A                  :JMP(doRotateLoop2)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 155,
      "mOp": 1,
      "mWR": 0,
      "line": 1145,
      "offsetLabel": "accumulator",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                      :MLOAD(accumulator)"
     },
     {
      "inC": "1",
      "inD": "1",
      "setD": 1,
      "line": 1146,
      "fileName": "utils.zkasm",
      "lineStr": "    C + D => D"
     },
     {
      "inD": "1",
      "offset": 155,
      "mOp": 1,
      "mWR": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4813,
      "line": 1147,
      "offsetLabel": "accumulator",
      "useCTX": 0,
      "jmpAddrLabel": "finalPush",
      "fileName": "utils.zkasm",
      "lineStr": "    D                           :MSTORE(accumulator), JMP(finalPush)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 155,
      "mOp": 1,
      "mWR": 0,
      "line": 1150,
      "offsetLabel": "accumulator",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                      :MLOAD(accumulator)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 152,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1151,
      "offsetLabel": "pushBytes",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                      :MLOAD(pushBytes), RETURN"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 285,
      "useElseAddr": 1,
      "elseAddr": 4816,
      "line": 1160,
      "jmpAddrLabel": "handleOOCSatRLP",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "        %MAX_CNT_STEPS - STEP - 10      :JMPN(handleOOCSatRLP)"
     },
     {
      "inRR": "1",
      "offset": 157,
      "mOp": 1,
      "mWR": 1,
      "line": 1161,
      "offsetLabel": "tmpZkPCaddB",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "        RR                              :MSTORE(tmpZkPCaddB)"
     },
     {
      "inA": "1",
      "offset": 158,
      "mOp": 1,
      "mWR": 1,
      "line": 1162,
      "offsetLabel": "auxBytes",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "        A                               :MSTORE(auxBytes)"
     },
     {
      "inD": "1",
      "offset": 156,
      "mOp": 1,
      "mWR": 1,
      "line": 1163,
      "offsetLabel": "tmpVarDaddB",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "        D                               :MSTORE(tmpVarDaddB)"
     },
     {
      "CONST": "1",
      "setD": 1,
      "line": 1164,
      "fileName": "utils.zkasm",
      "lineStr": "        1 => D"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 285,
      "useElseAddr": 1,
      "elseAddr": 4821,
      "line": 1167,
      "jmpAddrLabel": "handleOOCSatRLP",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "        %MAX_CNT_STEPS - STEP - 50 :JMPN(handleOOCSatRLP)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 283,
      "useElseAddr": 1,
      "elseAddr": 4822,
      "line": 1168,
      "jmpAddrLabel": "handleOOCBatRLP",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "        %MAX_CNT_BINARY - CNT_BINARY - 1   :JMPN(handleOOCBatRLP)"
     },
     {
      "CONST": "32",
      "inD": "-1",
      "setD": 1,
      "line": 1169,
      "fileName": "utils.zkasm",
      "lineStr": "        32 - D => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 158,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 1170,
      "offsetLabel": "auxBytes",
      "useCTX": 0,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "        $ => A                          :MLOAD(auxBytes), CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "CONSTL": "255",
      "setB": 1,
      "line": 1172,
      "fileName": "utils.zkasm",
      "lineStr": "        0xFFn => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 5,
      "line": 1173,
      "fileName": "utils.zkasm",
      "lineStr": "        $ => A                          :AND"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 1174,
      "fileName": "utils.zkasm",
      "lineStr": "        D => B"
     },
     {
      "CONST": "1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 99,
      "call": 1,
      "line": 1176,
      "jmpAddrLabel": "addBatchHashData",
      "fileName": "utils.zkasm",
      "lineStr": "        1 => D                          :CALL(addBatchHashData); in:[D: length of the hash]"
     },
     {
      "inB": "1",
      "setD": 1,
      "line": 1178,
      "fileName": "utils.zkasm",
      "lineStr": "        B => D"
     },
     {
      "CONST": "33",
      "inD": "-1",
      "setD": 1,
      "line": 1180,
      "fileName": "utils.zkasm",
      "lineStr": "        33 - D => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 156,
      "mOp": 1,
      "mWR": 0,
      "line": 1181,
      "offsetLabel": "tmpVarDaddB",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "        $ => B                          :MLOAD(tmpVarDaddB)"
     },
     {
      "inD": "1",
      "inB": "-1",
      "CONST": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4820,
      "useElseAddr": 1,
      "elseAddr": 4832,
      "line": 1182,
      "jmpAddrLabel": "utilsAddBatchHashBytebyByteLoop",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "        D - B - 1                       :JMPN(utilsAddBatchHashBytebyByteLoop)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 157,
      "mOp": 1,
      "mWR": 0,
      "line": 1183,
      "offsetLabel": "tmpZkPCaddB",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "        $ => RR                         :MLOAD(tmpZkPCaddB)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1184,
      "fileName": "utils.zkasm",
      "lineStr": "                                        :RETURN"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4835,
      "line": 1197,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50 :JMPN(outOfCountersStep)"
     },
     {
      "inA": "1",
      "offset": 160,
      "mOp": 1,
      "mWR": 1,
      "line": 1199,
      "offsetLabel": "tmpVarAEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A                               :MSTORE(tmpVarAEF)"
     },
     {
      "inB": "1",
      "offset": 161,
      "mOp": 1,
      "mWR": 1,
      "line": 1200,
      "offsetLabel": "tmpVarBEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                               :MSTORE(tmpVarBEF)"
     },
     {
      "inC": "1",
      "offset": 162,
      "mOp": 1,
      "mWR": 1,
      "line": 1201,
      "offsetLabel": "tmpVarCEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                               :MSTORE(tmpVarCEF)"
     },
     {
      "inD": "1",
      "offset": 163,
      "mOp": 1,
      "mWR": 1,
      "line": 1202,
      "offsetLabel": "tmpVarDEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D                               :MSTORE(tmpVarDEF)"
     },
     {
      "inE": "1",
      "offset": 164,
      "mOp": 1,
      "mWR": 1,
      "line": 1203,
      "offsetLabel": "tmpVarEEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                               :MSTORE(tmpVarEEF)"
     },
     {
      "inRR": "1",
      "offset": 165,
      "mOp": 1,
      "mWR": 1,
      "line": 1204,
      "offsetLabel": "tmpZkPCEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR                              :MSTORE(tmpZkPCEF)"
     },
     {
      "CONST": "0",
      "offset": 159,
      "mOp": 1,
      "mWR": 1,
      "line": 1207,
      "offsetLabel": "startsWithEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    0                               :MSTORE(startsWithEF)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 172,
      "mOp": 1,
      "mWR": 0,
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4848,
      "useElseAddr": 1,
      "elseAddr": 4843,
      "line": 1210,
      "offsetLabel": "memSizeLinearPoseidon",
      "useCTX": 0,
      "jmpAddrLabel": "checkBytecodeStartsEFend",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $                               :MLOAD(memSizeLinearPoseidon),JMPZ(checkBytecodeStartsEFend)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 171,
      "mOp": 1,
      "mWR": 0,
      "line": 1213,
      "offsetLabel": "memOffsetLinearPoseidon",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                          :MLOAD(memOffsetLinearPoseidon)"
     },
     {
      "CONST": "1",
      "setC": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 1216,
      "jmpAddrLabel": "MLOADX",
      "fileName": "utils.zkasm",
      "lineStr": "    1 => C                          :CALL(MLOADX) ; in: [E: offset, C: length] out: [A: value , E: new offset]"
     },
     {
      "CONST": "31",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 1217,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    31 => D                         :CALL(SHRarith) ; in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "CONST": "239",
      "inA": "-1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4847,
      "useElseAddr": 1,
      "elseAddr": 4848,
      "line": 1220,
      "jmpAddrLabel": "next",
      "elseAddrLabel": "checkBytecodeStartsEFend",
      "fileName": "utils.zkasm",
      "lineStr": "    %BYTECODE_STARTS_EF - A         :JMPNZ(checkBytecodeStartsEFend)"
     },
     {
      "CONST": "1",
      "offset": 159,
      "mOp": 1,
      "mWR": 1,
      "line": 1221,
      "offsetLabel": "startsWithEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    1                               :MSTORE(startsWithEF)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 165,
      "mOp": 1,
      "mWR": 0,
      "line": 1225,
      "offsetLabel": "tmpZkPCEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCEF)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 160,
      "mOp": 1,
      "mWR": 0,
      "line": 1226,
      "offsetLabel": "tmpVarAEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(tmpVarAEF)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 161,
      "mOp": 1,
      "mWR": 0,
      "line": 1227,
      "offsetLabel": "tmpVarBEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarBEF)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 162,
      "mOp": 1,
      "mWR": 0,
      "line": 1228,
      "offsetLabel": "tmpVarCEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCEF)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 163,
      "mOp": 1,
      "mWR": 0,
      "line": 1229,
      "offsetLabel": "tmpVarDEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarDEF)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 164,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1230,
      "offsetLabel": "tmpVarEEF",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpVarEEF), RETURN"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4855,
      "line": 1244,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4856,
      "line": 1245,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inA": "1",
      "offset": 166,
      "mOp": 1,
      "mWR": 1,
      "line": 1246,
      "offsetLabel": "tmpVarAhashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A                               :MSTORE(tmpVarAhashP)"
     },
     {
      "inB": "1",
      "offset": 167,
      "mOp": 1,
      "mWR": 1,
      "line": 1247,
      "offsetLabel": "tmpVarBhashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                               :MSTORE(tmpVarBhashP)"
     },
     {
      "inC": "1",
      "offset": 168,
      "mOp": 1,
      "mWR": 1,
      "line": 1248,
      "offsetLabel": "tmpVarChashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                               :MSTORE(tmpVarChashP)"
     },
     {
      "inE": "1",
      "offset": 169,
      "mOp": 1,
      "mWR": 1,
      "line": 1249,
      "offsetLabel": "tmpVarEhashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E                               :MSTORE(tmpVarEhashP)"
     },
     {
      "inRR": "1",
      "offset": 170,
      "mOp": 1,
      "mWR": 1,
      "line": 1250,
      "offsetLabel": "tmpZkPChashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR                              :MSTORE(tmpZkPChashP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 171,
      "mOp": 1,
      "mWR": 0,
      "line": 1251,
      "offsetLabel": "memOffsetLinearPoseidon",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                          :MLOAD(memOffsetLinearPoseidon)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 172,
      "mOp": 1,
      "mWR": 0,
      "line": 1252,
      "offsetLabel": "memSizeLinearPoseidon",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                          :MLOAD(memSizeLinearPoseidon)"
     },
     {
      "CONST": "0",
      "setD": 1,
      "line": 1253,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => D"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4892,
      "useElseAddr": 1,
      "elseAddr": 4865,
      "line": 1254,
      "jmpAddrLabel": "hashPoseidonReturn",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    C                               :JMPZ(hashPoseidonReturn)"
     },
     {
      "inC": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 1257,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C                                                       :MSTORE(arithA)"
     },
     {
      "CONST": "56",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 1258,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "utils.zkasm",
      "lineStr": "    56                                                      :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 1259,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                                                  :MLOAD(arithRes1)"
     },
     {
      "CONST": "265638",
      "inCntPoseidonG": "-1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 4869,
      "line": 1260,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - 1 - B            :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "149795",
      "inCntPaddingPG": "-1",
      "inB": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4668,
      "useElseAddr": 1,
      "elseAddr": 4870,
      "line": 1261,
      "jmpAddrLabel": "outOfCountersPadding",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_PADDING_PG_LIMIT - CNT_PADDING_PG - 1 - B      :JMPN(outOfCountersPadding)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 17,
      "mOp": 1,
      "mWR": 0,
      "line": 1264,
      "offsetLabel": "nextHashPId",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B                          :MLOAD(nextHashPId)"
     },
     {
      "inB": "1",
      "offset": 57,
      "mOp": 1,
      "mWR": 1,
      "line": 1265,
      "offsetLabel": "tmpContractHashId",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B                               :MSTORE(tmpContractHashId)"
     },
     {
      "inB": "1",
      "CONST": "1",
      "offset": 17,
      "mOp": 1,
      "mWR": 1,
      "line": 1266,
      "offsetLabel": "nextHashPId",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B + 1                           :MSTORE(nextHashPId)"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 1267,
      "fileName": "utils.zkasm",
      "lineStr": "    32 => D"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 1268,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => HASHPOS"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4876,
      "line": 1271,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50 :JMPN(outOfCountersStep)"
     },
     {
      "inC": "1",
      "JMPZ": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4889,
      "useElseAddr": 1,
      "elseAddr": 4877,
      "line": 1273,
      "jmpAddrLabel": "hashPoseidonEnd",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    C               :JMPZ(hashPoseidonEnd)"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4884,
      "useElseAddr": 1,
      "elseAddr": 4878,
      "line": 1274,
      "jmpAddrLabel": "hashPoseidonFinal",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    C - 32          :JMPN(hashPoseidonFinal)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4377,
      "call": 1,
      "line": 1275,
      "jmpAddrLabel": "MLOAD32",
      "fileName": "utils.zkasm",
      "lineStr": "                    :CALL(MLOAD32)"
     },
     {
      "inE": "1",
      "setB": 1,
      "line": 1276,
      "fileName": "utils.zkasm",
      "lineStr": "    E => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 57,
      "mOp": 1,
      "mWR": 0,
      "line": 1277,
      "offsetLabel": "tmpContractHashId",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpContractHashId)"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP": 1,
      "line": 1278,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :HASHP(E)"
     },
     {
      "inB": "1",
      "setE": 1,
      "line": 1279,
      "fileName": "utils.zkasm",
      "lineStr": "    B => E"
     },
     {
      "inC": "1",
      "CONST": "-32",
      "setC": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4875,
      "line": 1280,
      "jmpAddrLabel": "hashPoseidonLoop",
      "fileName": "utils.zkasm",
      "lineStr": "    C - 32 => C     :JMP(hashPoseidonLoop)"
     },
     {
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4371,
      "call": 1,
      "line": 1284,
      "jmpAddrLabel": "MLOADX",
      "fileName": "utils.zkasm",
      "lineStr": "                    :CALL(MLOADX)"
     },
     {
      "CONST": "32",
      "inC": "-1",
      "setD": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4577,
      "call": 1,
      "line": 1285,
      "jmpAddrLabel": "SHRarith",
      "fileName": "utils.zkasm",
      "lineStr": "    32 - C => D     :CALL(SHRarith); in: [A: value, D: #bytes to right shift] out: [A: shifted result]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 57,
      "mOp": 1,
      "mWR": 0,
      "line": 1286,
      "offsetLabel": "tmpContractHashId",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpContractHashId)"
     },
     {
      "inC": "1",
      "setD": 1,
      "line": 1287,
      "fileName": "utils.zkasm",
      "lineStr": "    C => D"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashP": 1,
      "line": 1288,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :HASHP(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 57,
      "mOp": 1,
      "mWR": 0,
      "line": 1291,
      "offsetLabel": "tmpContractHashId",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpContractHashId)"
     },
     {
      "inHASHPOS": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashPLen": 1,
      "line": 1292,
      "fileName": "utils.zkasm",
      "lineStr": "    HASHPOS         :HASHPLEN(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashPDigest": 1,
      "line": 1293,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :HASHPDIGEST(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 170,
      "mOp": 1,
      "mWR": 0,
      "line": 1296,
      "offsetLabel": "tmpZkPChashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPChashP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 166,
      "mOp": 1,
      "mWR": 0,
      "line": 1297,
      "offsetLabel": "tmpVarAhashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(tmpVarAhashP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 167,
      "mOp": 1,
      "mWR": 0,
      "line": 1298,
      "offsetLabel": "tmpVarBhashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarBhashP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 168,
      "mOp": 1,
      "mWR": 0,
      "line": 1299,
      "offsetLabel": "tmpVarChashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarChashP)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 169,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1300,
      "offsetLabel": "tmpVarEhashP",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpVarEhashP), RETURN"
     },
     {
      "CONST": "7968978",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4898,
      "line": 1307,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 10 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4899,
      "line": 1308,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1 :JMPN(outOfCountersBinary)"
     },
     {
      "inB": "1",
      "offset": 173,
      "mOp": 1,
      "mWR": 1,
      "line": 1309,
      "offsetLabel": "tmpVarBmask",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B               :MSTORE(tmpVarBmask)"
     },
     {
      "CONSTL": "1461501637330902918203684832716283019655932542975",
      "setB": 1,
      "line": 1310,
      "fileName": "utils.zkasm",
      "lineStr": "    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFn => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 5,
      "line": 1311,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :AND"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 173,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1312,
      "offsetLabel": "tmpVarBmask",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarBmask), RETURN"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 31,
      "mOp": 1,
      "mWR": 0,
      "line": 1317,
      "offsetLabel": "cntKeccakPreProcess",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                                          :MLOAD(cntKeccakPreProcess)"
     },
     {
      "CONST": "2257",
      "inCntKeccakF": "-1",
      "inA": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4664,
      "useElseAddr": 1,
      "elseAddr": 4905,
      "line": 1318,
      "jmpAddrLabel": "outOfCountersKeccak",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_KECCAK_F - CNT_KECCAK_F - A - 1        :JMPN(outOfCountersKeccak)"
     },
     {
      "CONST": "7968938",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4906,
      "line": 1320,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "265125",
      "inCntPoseidonG": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4669,
      "useElseAddr": 1,
      "elseAddr": 4907,
      "line": 1321,
      "jmpAddrLabel": "outOfCountersPoseidon",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_POSEIDON_G - CNT_POSEIDON_G - %MAX_CNT_POSEIDON_SLOAD_SSTORE*2 :JMPN(outOfCountersPoseidon)"
     },
     {
      "CONST": "498073",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4908,
      "line": 1322,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 1                :JMPN(outOfCountersBinary)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 35,
      "mOp": 1,
      "mWR": 0,
      "line": 1325,
      "offsetLabel": "txCount",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A                              :MLOAD(txCount)"
     },
     {
      "CONST": "1",
      "setB": 1,
      "line": 1327,
      "fileName": "utils.zkasm",
      "lineStr": "    1 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "bin": 1,
      "binOpcode": 0,
      "offset": 35,
      "mOp": 1,
      "mWR": 1,
      "line": 1328,
      "offsetLabel": "txCount",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D                              :ADD, MSTORE(txCount)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 1330,
      "fileName": "utils.zkasm",
      "lineStr": "    %LAST_TX_STORAGE_POS => C"
     },
     {
      "CONSTL": "1554098974",
      "setA": 1,
      "line": 1331,
      "fileName": "utils.zkasm",
      "lineStr": "    %ADDRESS_SYSTEM => A"
     },
     {
      "CONST": "3",
      "setB": 1,
      "line": 1332,
      "fileName": "utils.zkasm",
      "lineStr": "    %SMT_KEY_SC_STORAGE => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "line": 1333,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => SR                             :SSTORE"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 1336,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONST": "32",
      "setD": 1,
      "line": 1337,
      "fileName": "utils.zkasm",
      "lineStr": "    32 => D"
     },
     {
      "CONST": "0",
      "setHASHPOS": 1,
      "line": 1338,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => HASHPOS ; A new hash with position 0 is started"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 0,
      "line": 1339,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E                              :MLOAD(lastHashKIdUsed)"
     },
     {
      "inE": "1",
      "CONST": "1",
      "setE": 1,
      "offset": 16,
      "mOp": 1,
      "mWR": 1,
      "line": 1340,
      "offsetLabel": "lastHashKIdUsed",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E + 1 => E                          :MSTORE(lastHashKIdUsed)"
     },
     {
      "inA": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 1341,
      "fileName": "utils.zkasm",
      "lineStr": "    A                                   :HASHK(E)"
     },
     {
      "CONST": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashK": 1,
      "line": 1342,
      "fileName": "utils.zkasm",
      "lineStr": "    %STATE_ROOT_STORAGE_POS             :HASHK(E)"
     },
     {
      "inHASHPOS": "1",
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKLen": 1,
      "line": 1343,
      "fileName": "utils.zkasm",
      "lineStr": "    HASHPOS                             :HASHKLEN(E)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "ind": 1,
      "indRR": 0,
      "offset": 0,
      "hashKDigest": 1,
      "line": 1344,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C                              :HASHKDIGEST(E)"
     },
     {
      "CONSTL": "1554098974",
      "setA": 1,
      "line": 1345,
      "fileName": "utils.zkasm",
      "lineStr": "    %ADDRESS_SYSTEM => A"
     },
     {
      "inSR": "1",
      "setD": 1,
      "line": 1346,
      "fileName": "utils.zkasm",
      "lineStr": "    SR => D"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setSR": 1,
      "sWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1347,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => SR                             :SSTORE, RETURN"
     },
     {
      "CONST": "7968888",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4928,
      "line": 1361,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 100 :JMPN(outOfCountersStep)"
     },
     {
      "CONST": "498070",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4929,
      "line": 1362,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 4    :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "249035",
      "inCntArith": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4667,
      "useElseAddr": 1,
      "elseAddr": 4930,
      "line": 1363,
      "jmpAddrLabel": "outOfCountersArith",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_ARITH - CNT_ARITH - 2      :JMPN(outOfCountersArith)"
     },
     {
      "inRR": "1",
      "offset": 178,
      "mOp": 1,
      "mWR": 1,
      "line": 1365,
      "offsetLabel": "tmpZkPCmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCmulmod)"
     },
     {
      "inA": "1",
      "offset": 174,
      "mOp": 1,
      "mWR": 1,
      "line": 1366,
      "offsetLabel": "tmpVarAmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :MSTORE(tmpVarAmulmod)"
     },
     {
      "inB": "1",
      "offset": 175,
      "mOp": 1,
      "mWR": 1,
      "line": 1367,
      "offsetLabel": "tmpVarBmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B               :MSTORE(tmpVarBmulmod)"
     },
     {
      "inD": "1",
      "offset": 176,
      "mOp": 1,
      "mWR": 1,
      "line": 1368,
      "offsetLabel": "tmpVarDmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    D               :MSTORE(tmpVarDmulmod)"
     },
     {
      "inE": "1",
      "offset": 177,
      "mOp": 1,
      "mWR": 1,
      "line": 1369,
      "cmdAfter": [
       {
        "op": "setVar",
        "values": [
         {
          "op": "declareVar",
          "varName": "_mulMod"
         },
         {
          "op": "mul",
          "values": [
           {
            "op": "getReg",
            "regName": "A"
           },
           {
            "op": "getReg",
            "regName": "B"
           }
          ]
         }
        ]
       }
      ],
      "offsetLabel": "tmpVarEmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E               :MSTORE(tmpVarEmulmod)"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 1386,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :MSTORE(arithA)"
     },
     {
      "inB": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 1389,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "utils.zkasm",
      "lineStr": "    B               :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 1390,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A"
     },
     {
      "CONST": "2",
      "setB": 1,
      "line": 1392,
      "fileName": "utils.zkasm",
      "lineStr": "    2 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 2,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4968,
      "useElseAddr": 1,
      "elseAddr": 4940,
      "line": 1393,
      "jmpAddrLabel": "zeroOneMod",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :LT, JMPC(zeroOneMod)"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "div",
         "values": [
          {
           "op": "getVar",
           "varName": "_mulMod"
          },
          {
           "op": "getReg",
           "regName": "C"
          }
         ]
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 1397,
      "fileName": "utils.zkasm",
      "lineStr": "    ${(_mulMod / C) >> 256} => B     ; k.h"
     },
     {
      "freeInTag": {
       "op": "functionCall",
       "funcName": "cond",
       "params": [
        {
         "op": "eq",
         "values": [
          {
           "op": "getReg",
           "regName": "B"
          },
          {
           "op": "number",
           "num": "0"
          }
         ]
        }
       ]
      },
      "inFREE": "1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4959,
      "useElseAddr": 1,
      "elseAddr": 4942,
      "line": 1401,
      "jmpAddrLabel": "mulModNoKH",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    ${cond(B == 0)}  :JMPN(mulModNoKH)"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 1405,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "CONST": "0",
      "bin": 1,
      "binOpcode": 4,
      "line": 1406,
      "fileName": "utils.zkasm",
      "lineStr": "    0       :EQ ; assert B != 0"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 1415,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A ; Modulus"
     },
     {
      "CONST": "0",
      "setC": 1,
      "setD": 1,
      "line": 1416,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C, D"
     },
     {
      "freeInTag": {
       "op": "mul",
       "values": [
        {
         "op": "getReg",
         "regName": "B"
        },
        {
         "op": "getReg",
         "regName": "A"
        }
       ]
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 176,
      "mOp": 1,
      "mWR": 1,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 1417,
      "offsetLabel": "tmpVarDmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    ${B * A} => E   :MSTORE(tmpVarDmulmod), ARITH ; D2"
     },
     {
      "freeInTag": {
       "op": "mod",
       "values": [
        {
         "op": "div",
         "values": [
          {
           "op": "getVar",
           "varName": "_mulMod"
          },
          {
           "op": "getReg",
           "regName": "A"
          }
         ]
        },
        {
         "op": "shl",
         "values": [
          {
           "op": "number",
           "num": "1"
          },
          {
           "op": "number",
           "num": "256"
          }
         ]
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 1424,
      "fileName": "utils.zkasm",
      "lineStr": "    ${(_mulMod / A) % (1 << 256)} => B   ; k.l"
     },
     {
      "freeInTag": {
       "op": "mod",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulMod"
        },
        {
         "op": "getReg",
         "regName": "A"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "line": 1425,
      "fileName": "utils.zkasm",
      "lineStr": "    ${_mulMod % A} => C        ; mulModResult"
     },
     {
      "freeInTag": {
       "op": "shr",
       "values": [
        {
         "op": "add",
         "values": [
          {
           "op": "mul",
           "values": [
            {
             "op": "getReg",
             "regName": "B"
            },
            {
             "op": "getReg",
             "regName": "A"
            }
           ]
          },
          {
           "op": "getReg",
           "regName": "C"
          }
         ]
        },
        {
         "op": "number",
         "num": "256"
        }
       ]
      },
      "inFREE": "1",
      "setD": 1,
      "line": 1426,
      "fileName": "utils.zkasm",
      "lineStr": "    ${(B * A + C) >> 256} => D ; D1"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 1427,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $               :MLOAD(arithRes1), ARITH"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 1433,
      "fileName": "utils.zkasm",
      "lineStr": "    A => B          ; modulus"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 1434,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A          ; mulModResult"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 2,
      "line": 1435,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :LT"
     },
     {
      "CONST": "1",
      "assert": 1,
      "line": 1436,
      "fileName": "utils.zkasm",
      "lineStr": "    1               :ASSERT"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 1439,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A ; D1"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 176,
      "mOp": 1,
      "mWR": 0,
      "line": 1440,
      "offsetLabel": "tmpVarDmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarDmulmod) ;D2"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 0,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5015,
      "useElseAddr": 1,
      "elseAddr": 4958,
      "line": 1444,
      "jmpAddrLabel": "failAssert",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :ADD,JMPC(failAssert)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 141,
      "mOp": 1,
      "mWR": 0,
      "assert": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4969,
      "line": 1445,
      "offsetLabel": "mulArithOverflowValue",
      "useCTX": 0,
      "jmpAddrLabel": "utilMULMODend",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :MLOAD(mulArithOverflowValue), ASSERT, JMP(utilMULMODend)"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 1452,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A ; Modulus on A"
     },
     {
      "freeInTag": {
       "op": "div",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulMod"
        },
        {
         "op": "getReg",
         "regName": "A"
        }
       ]
      },
      "inFREE": "1",
      "setB": 1,
      "line": 1453,
      "fileName": "utils.zkasm",
      "lineStr": "    ${(_mulMod / A)} => B   ; k"
     },
     {
      "freeInTag": {
       "op": "mod",
       "values": [
        {
         "op": "getVar",
         "varName": "_mulMod"
        },
        {
         "op": "getReg",
         "regName": "A"
        }
       ]
      },
      "inFREE": "1",
      "setC": 1,
      "line": 1454,
      "fileName": "utils.zkasm",
      "lineStr": "    ${_mulMod % A} => C     ; mulModResult"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 141,
      "mOp": 1,
      "mWR": 0,
      "line": 1455,
      "offsetLabel": "mulArithOverflowValue",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D         :MLOAD(mulArithOverflowValue)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "arithEq0": 1,
      "arithEq1": 0,
      "arithEq2": 0,
      "line": 1456,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $              :MLOAD(arithRes1), ARITH"
     },
     {
      "inA": "1",
      "setB": 1,
      "line": 1458,
      "fileName": "utils.zkasm",
      "lineStr": "    A => B          ; modulus"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 1459,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A          ; mulModResult"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "bin": 1,
      "binOpcode": 2,
      "line": 1460,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :LT"
     },
     {
      "CONST": "1",
      "assert": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4969,
      "line": 1461,
      "jmpAddrLabel": "utilMULMODend",
      "fileName": "utils.zkasm",
      "lineStr": "    1               :ASSERT, JMP(utilMULMODend)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 1464,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 174,
      "mOp": 1,
      "mWR": 0,
      "line": 1467,
      "offsetLabel": "tmpVarAmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(tmpVarAmulmod)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 175,
      "mOp": 1,
      "mWR": 0,
      "line": 1468,
      "offsetLabel": "tmpVarBmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarBmulmod)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 176,
      "mOp": 1,
      "mWR": 0,
      "line": 1469,
      "offsetLabel": "tmpVarDmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(tmpVarDmulmod)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 178,
      "mOp": 1,
      "mWR": 0,
      "line": 1470,
      "offsetLabel": "tmpZkPCmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCmulmod)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 177,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1471,
      "offsetLabel": "tmpVarEmulmod",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpVarEmulmod), RETURN"
     },
     {
      "CONST": "498072",
      "inCntBinary": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4975,
      "line": 1482,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2 :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968968",
      "inSTEP": "-1",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4976,
      "line": 1483,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 20       :JMPN(outOfCountersStep)"
     },
     {
      "inRR": "1",
      "offset": 182,
      "mOp": 1,
      "mWR": 1,
      "line": 1484,
      "offsetLabel": "tmpZkPCexp",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    RR              :MSTORE(tmpZkPCexp)"
     },
     {
      "inB": "1",
      "offset": 179,
      "mOp": 1,
      "mWR": 1,
      "line": 1485,
      "offsetLabel": "tmpVarBexp",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    B               :MSTORE(tmpVarBexp)"
     },
     {
      "inC": "1",
      "offset": 180,
      "mOp": 1,
      "mWR": 1,
      "line": 1486,
      "offsetLabel": "tmpVarCexp",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    C               :MSTORE(tmpVarCexp)"
     },
     {
      "inE": "1",
      "offset": 181,
      "mOp": 1,
      "mWR": 1,
      "line": 1487,
      "offsetLabel": "tmpVarEexp",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E               :MSTORE(tmpVarEexp)"
     },
     {
      "inA": "1",
      "setE": 1,
      "line": 1489,
      "fileName": "utils.zkasm",
      "lineStr": "    A => E"
     },
     {
      "inD": "1",
      "setB": 1,
      "line": 1491,
      "fileName": "utils.zkasm",
      "lineStr": "    D => B"
     },
     {
      "CONST": "0",
      "setA": 1,
      "line": 1492,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5008,
      "useElseAddr": 1,
      "elseAddr": 4984,
      "line": 1494,
      "jmpAddrLabel": "expAD0",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :EQ,JMPC(expAD0)"
     },
     {
      "inE": "1",
      "setA": 1,
      "line": 1496,
      "fileName": "utils.zkasm",
      "lineStr": "    E => A"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 1497,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5006,
      "useElseAddr": 1,
      "elseAddr": 4987,
      "line": 1499,
      "jmpAddrLabel": "expA0D",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :EQ,JMPC(expA0D)"
     },
     {
      "CONST": "1",
      "setC": 1,
      "line": 1500,
      "fileName": "utils.zkasm",
      "lineStr": "    1 => C"
     },
     {
      "inD": "1",
      "setB": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4257,
      "call": 1,
      "line": 1501,
      "jmpAddrLabel": "getLenBits",
      "fileName": "utils.zkasm",
      "lineStr": "    D => B          :CALL(getLenBits)  ;A exp bits length"
     },
     {
      "CONST": "498074",
      "inCntBinary": "-1",
      "inA": "-2",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4665,
      "useElseAddr": 1,
      "elseAddr": 4990,
      "line": 1507,
      "jmpAddrLabel": "outOfCountersBinary",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_BINARY - CNT_BINARY - 2*A    :JMPN(outOfCountersBinary)"
     },
     {
      "CONST": "7968988",
      "inSTEP": "-1",
      "inA": "-50",
      "JMPN": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4663,
      "useElseAddr": 1,
      "elseAddr": 4991,
      "line": 1508,
      "jmpAddrLabel": "outOfCountersStep",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    %MAX_CNT_STEPS - STEP - 50*A         :JMPN(outOfCountersStep)"
     },
     {
      "inD": "1",
      "setA": 1,
      "line": 1512,
      "fileName": "utils.zkasm",
      "lineStr": "    D => A"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 1513,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5010,
      "useElseAddr": 1,
      "elseAddr": 4994,
      "line": 1515,
      "jmpAddrLabel": "expADend",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :EQ,JMPC(expADend)"
     },
     {
      "inA": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 1516,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    A               :MSTORE(arithA)"
     },
     {
      "CONST": "2",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4534,
      "call": 1,
      "line": 1518,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "divARITH",
      "fileName": "utils.zkasm",
      "lineStr": "    2               :MSTORE(arithB), CALL(divARITH); in: [arithA, arithB] out: [arithRes1: arithA/arithB, arithRes2: arithA%arithB]"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setD": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 1520,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => D          :MLOAD(arithRes1)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setA": 1,
      "offset": 139,
      "mOp": 1,
      "mWR": 0,
      "line": 1522,
      "offsetLabel": "arithRes2",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => A          :MLOAD(arithRes2)"
     },
     {
      "CONST": "0",
      "setB": 1,
      "line": 1523,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => B"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "bin": 1,
      "binOpcode": 4,
      "JMPC": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5003,
      "useElseAddr": 1,
      "elseAddr": 5000,
      "line": 1525,
      "jmpAddrLabel": "expADloop0",
      "elseAddrLabel": "next",
      "fileName": "utils.zkasm",
      "lineStr": "    $               :EQ,JMPC(expADloop0)"
     },
     {
      "inE": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 1526,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E               :MSTORE(arithA)"
     },
     {
      "inC": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 1528,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "utils.zkasm",
      "lineStr": "    C               :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "line": 1530,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(arithRes1)"
     },
     {
      "inE": "1",
      "offset": 136,
      "mOp": 1,
      "mWR": 1,
      "line": 1533,
      "offsetLabel": "arithA",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    E               :MSTORE(arithA)"
     },
     {
      "inE": "1",
      "offset": 137,
      "mOp": 1,
      "mWR": 1,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "useJmpAddr": 1,
      "jmpAddr": 4517,
      "call": 1,
      "line": 1535,
      "offsetLabel": "arithB",
      "useCTX": 0,
      "jmpAddrLabel": "mulARITH",
      "fileName": "utils.zkasm",
      "lineStr": "    E               :MSTORE(arithB), CALL(mulARITH)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 138,
      "mOp": 1,
      "mWR": 0,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 4991,
      "line": 1537,
      "offsetLabel": "arithRes1",
      "useCTX": 0,
      "jmpAddrLabel": "expADloop",
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(arithRes1), JMP(expADloop)"
     },
     {
      "CONST": "0",
      "setC": 1,
      "line": 1540,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => C"
     },
     {
      "CONST": "0",
      "setD": 1,
      "JMP": 1,
      "useJmpAddr": 1,
      "jmpAddr": 5010,
      "line": 1541,
      "jmpAddrLabel": "expADend",
      "fileName": "utils.zkasm",
      "lineStr": "    0 => D          :JMP(expADend)"
     },
     {
      "CONST": "1",
      "setC": 1,
      "line": 1544,
      "fileName": "utils.zkasm",
      "lineStr": "    1 => C"
     },
     {
      "CONST": "0",
      "setD": 1,
      "line": 1545,
      "fileName": "utils.zkasm",
      "lineStr": "    0 => D"
     },
     {
      "inC": "1",
      "setA": 1,
      "line": 1548,
      "fileName": "utils.zkasm",
      "lineStr": "    C => A"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setB": 1,
      "offset": 179,
      "mOp": 1,
      "mWR": 0,
      "line": 1549,
      "offsetLabel": "tmpVarBexp",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => B          :MLOAD(tmpVarBexp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setC": 1,
      "offset": 180,
      "mOp": 1,
      "mWR": 0,
      "line": 1550,
      "offsetLabel": "tmpVarCexp",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => C          :MLOAD(tmpVarCexp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setRR": 1,
      "offset": 182,
      "mOp": 1,
      "mWR": 0,
      "line": 1551,
      "offsetLabel": "tmpZkPCexp",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => RR         :MLOAD(tmpZkPCexp)"
     },
     {
      "freeInTag": {
       "op": ""
      },
      "inFREE": "1",
      "setE": 1,
      "offset": 181,
      "mOp": 1,
      "mWR": 0,
      "JMP": 0,
      "JMPC": 0,
      "JMPN": 0,
      "call": 0,
      "return": 1,
      "line": 1552,
      "offsetLabel": "tmpVarEexp",
      "useCTX": 0,
      "fileName": "utils.zkasm",
      "lineStr": "    $ => E          :MLOAD(tmpVarEexp), RETURN"
     },
     {
      "CONST": "1",
      "setA": 1,
      "line": 1556,
      "fileName": "utils.zkasm",
      "lineStr": "    1 => A"
     },
     {
      "CONST": "2",
      "assert": 1,
      "line": 1557,
      "fileName": "utils.zkasm",
      "lineStr": "    2               :ASSERT"
     }
    ],
    "labels": {
     "start": 0,
     "setGlobalExitRoot": 17,
     "skipSetGlobalExitRoot": 30,
     "txLoopRLP": 47,
     "endCheckRLP": 52,
     "txLoop": 53,
     "processTxEnd": 57,
     "processTxFinished": 58,
     "processTxsEnd": 59,
     "finalizeExecution": 96,
     "finalWait": 97,
     "addBatchHashData": 99,
     "getTxBytes": 105,
     "addHashTx": 110,
     "addHashTxBegin": 112,
     "checkShortRLP": 118,
     "skipCheckShort": 120,
     "checkLongRLP": 121,
     "checkShortDataRLP": 123,
     "skipCheckShortData": 126,
     "checkNonLeadingZeros": 127,
     "loadTx_rlp": 133,
     "longList": 144,
     "shortList": 149,
     "endList": 150,
     "nonceREAD": 156,
     "nonce0": 161,
     "shortNonce": 162,
     "endNonce": 167,
     "gasPriceREAD": 168,
     "gasPrice0": 173,
     "shortGasPrice": 174,
     "endGasPrice": 178,
     "gasLimitREAD": 179,
     "gasLimit0": 184,
     "shortGasLimit": 185,
     "endGasLimit": 189,
     "toREAD": 190,
     "noTo": 196,
     "shortTo": 197,
     "endTo": 201,
     "valueREAD": 201,
     "value0": 206,
     "shortValue": 207,
     "endValue": 211,
     "dataREAD": 212,
     "veryShortData": 221,
     "shortData": 224,
     "longData": 227,
     "readData": 234,
     "readDataFinal": 239,
     "endData": 245,
     "chainREAD": 248,
     "chainId0": 253,
     "shortChainId": 254,
     "endChainId": 258,
     "setPreEIP155Flag": 263,
     "sizeVerification": 264,
     "sizeVerificationSuccess": 267,
     "rREADTx": 268,
     "sREADTx": 271,
     "vREADTx": 274,
     "handleOOCBatRLP": 283,
     "handleOOCKatRLP": 284,
     "handleOOCSatRLP": 285,
     "handleOOCatRLP": 286,
     "invalidTxRLP": 287,
     "appendTxs": 291,
     "finalAppendTxs": 296,
     "endAppendTxs": 301,
     "opADD": 302,
     "opMUL": 310,
     "opSUB": 320,
     "opDIV": 329,
     "opSDIV": 339,
     "SDIVNeg": 353,
     "opMOD": 359,
     "opSMOD": 369,
     "opSMODNeg": 383,
     "opADDMOD": 386,
     "AddModJumpCarry": 397,
     "zeroOneAddMod": 409,
     "opMULMOD": 410,
     "opEXP": 419,
     "opSIGNEXTEND": 430,
     "opSIGNEXTENDPositive": 454,
     "opSIGNEXTENDEnd": 457,
     "opBLOCKHASH": 458,
     "opCOINBASE": 477,
     "opTIMESTAMP": 482,
     "opNUMBER": 487,
     "opDIFFICULTY": 494,
     "opGASLIMIT": 499,
     "opCHAINID": 504,
     "opLT": 509,
     "opGT": 517,
     "opSLT": 525,
     "opSGT": 533,
     "opEQ": 541,
     "opISZERO": 549,
     "opAND": 556,
     "opOR": 564,
     "opXOR": 572,
     "opNOT": 580,
     "opBYTE": 587,
     "opBYTE0": 600,
     "opSHR": 601,
     "opSHL": 608,
     "opSAR": 616,
     "positiveValue": 630,
     "negativeValue": 633,
     "endSAR": 638,
     "maxShiftSAR": 641,
     "endMaxShiftSAR": 644,
     "opADDRESS": 645,
     "opADDRESSdeploy": 649,
     "opADDRESSend": 650,
     "opSELFBALANCE": 652,
     "opBALANCE": 660,
     "opORIGIN": 668,
     "opCALLER": 673,
     "opCALLVALUE": 678,
     "opGASPRICE": 683,
     "opGAS": 688,
     "opSTOP": 692,
     "opSTOPend": 699,
     "opCREATE": 710,
     "opCreateFail": 773,
     "opCALL": 777,
     "opCALL2": 793,
     "opCALLend": 813,
     "opCALLCODE": 847,
     "opCALLCODEend": 876,
     "opRETURN": 910,
     "preRETURN32": 934,
     "opRETURNloop": 935,
     "opRETURNfinal": 947,
     "opRETURNend": 952,
     "opRETURNdeploy": 959,
     "opRETURNcreate": 962,
     "opRETURNcreateEnd": 985,
     "opDELEGATECALL": 994,
     "opDELEGATECALLend": 1046,
     "opCREATE2": 1050,
     "opSTATICCALL": 1121,
     "opREVERT": 1170,
     "preREVERT32": 1193,
     "opREVERTloop": 1194,
     "opREVERTfinal": 1206,
     "opREVERTend": 1211,
     "opSENDALL": 1218,
     "opSENDALL2": 1237,
     "opSENDALLend": 1254,
     "opSENDALLendContinue": 1259,
     "opINVALID": 1270,
     "opSHA3": 1271,
     "opSHA3Loop": 1296,
     "opSHA3Final": 1305,
     "opSHA3End": 1310,
     "opJUMP": 1314,
     "opJUMPI": 1319,
     "checkJumpDest": 1327,
     "checkJumpDestDeployment": 1336,
     "checkJumpDestDeploymentCreate": 1345,
     "opPC": 1353,
     "opJUMPDEST": 1357,
     "opLOG0": 1359,
     "opLOG1": 1378,
     "opLOG2": 1397,
     "opLOG3": 1416,
     "opLOG4": 1435,
     "opLOGLoop": 1454,
     "opLOGFinal": 1459,
     "opSaveTopicsInit": 1461,
     "opSaveTopicsLoop": 1462,
     "opPUSH1": 1468,
     "opPUSH2": 1470,
     "opPUSH3": 1472,
     "opPUSH4": 1474,
     "opPUSH5": 1476,
     "opPUSH6": 1478,
     "opPUSH7": 1480,
     "opPUSH8": 1482,
     "opPUSH9": 1484,
     "opPUSH10": 1486,
     "opPUSH11": 1488,
     "opPUSH12": 1490,
     "opPUSH13": 1492,
     "opPUSH14": 1494,
     "opPUSH15": 1496,
     "opPUSH16": 1498,
     "opPUSH17": 1500,
     "opPUSH18": 1502,
     "opPUSH19": 1504,
     "opPUSH20": 1506,
     "opPUSH21": 1508,
     "opPUSH22": 1510,
     "opPUSH23": 1512,
     "opPUSH24": 1514,
     "opPUSH25": 1516,
     "opPUSH26": 1518,
     "opPUSH27": 1520,
     "opPUSH28": 1522,
     "opPUSH29": 1524,
     "opPUSH30": 1526,
     "opPUSH31": 1528,
     "opPUSH32": 1530,
     "opAuxPUSHA": 1532,
     "opAuxPUSHA2": 1536,
     "opAuxPUSHB": 1541,
     "opAuxPUSHB2": 1546,
     "opAuxPUSHBloop": 1548,
     "opAuxPUSHBend": 1558,
     "opAuxPUSHBcreate": 1561,
     "opAuxPUSHBcreate2": 1569,
     "opfinalPUSHBcreate": 1572,
     "opDUP1": 1573,
     "opDUP2": 1579,
     "opDUP3": 1585,
     "opDUP4": 1591,
     "opDUP5": 1597,
     "opDUP6": 1603,
     "opDUP7": 1609,
     "opDUP8": 1615,
     "opDUP9": 1621,
     "opDUP10": 1627,
     "opDUP11": 1633,
     "opDUP12": 1639,
     "opDUP13": 1645,
     "opDUP14": 1651,
     "opDUP15": 1657,
     "opDUP16": 1663,
     "opSWAP1": 1669,
     "opSWAP2": 1676,
     "opSWAP3": 1683,
     "opSWAP4": 1690,
     "opSWAP5": 1697,
     "opSWAP6": 1704,
     "opSWAP7": 1711,
     "opSWAP8": 1718,
     "opSWAP9": 1725,
     "opSWAP10": 1732,
     "opSWAP11": 1739,
     "opSWAP12": 1746,
     "opSWAP13": 1753,
     "opSWAP14": 1760,
     "opSWAP15": 1767,
     "opSWAP16": 1774,
     "opPOP": 1781,
     "opMLOAD": 1784,
     "opMSTORE": 1792,
     "opMSTORE8": 1813,
     "opMSIZE": 1826,
     "MSIZEend": 1839,
     "opSLOAD": 1841,
     "opSSTORE": 1850,
     "deploymentSSTORE": 1861,
     "opSSTOREinit": 1862,
     "opSSTOREdif": 1874,
     "opSSTOREdifA": 1881,
     "opSSTOREdifAB": 1885,
     "opSSTOREdifA1": 1892,
     "opSSTOREdifA12": 1897,
     "opSSTOREdifA2": 1902,
     "opSSTOREdifB": 1904,
     "opSSTOREend": 1911,
     "mloadContract": 1913,
     "opSSTOREsr": 1914,
     "opCALLDATALOAD": 1917,
     "opCALLDATALOAD2": 1932,
     "CALLDATALOADreturn0": 1937,
     "opCALLDATASIZE": 1938,
     "opCALLDATASIZEdep": 1944,
     "opCALLDATACOPY": 1946,
     "opCALLDATACOPYX0": 1972,
     "opCALLDATACOPYloop": 1975,
     "opCALLDATACOPYfinal": 2004,
     "opCALLDATACOPY0": 2022,
     "opCALLDATACOPY320": 2026,
     "opCALLDATACOPYxor": 2028,
     "opCALLDATACOPYcheckLen": 2031,
     "opCALLDATACOPYend": 2035,
     "opCODESIZE": 2036,
     "opCODESIZEdep": 2046,
     "opCODECOPY": 2049,
     "opCODECOPY2": 2070,
     "opCODECOPYloopInit": 2076,
     "opCODECOPYloop": 2077,
     "opCODECOPYLoadBytes": 2095,
     "readZero": 2100,
     "readValueBytecode": 2101,
     "opEXTCODESIZE": 2103,
     "opEXTCODECOPY": 2113,
     "opEXTCODECOPY2": 2138,
     "opEXTCODECOPYLoadBytecode": 2144,
     "opEXTCODECOPYCheckHashEnd": 2168,
     "opRETURNDATASIZE": 2169,
     "endOpRETURNDATASIZE": 2178,
     "opRETURNDATACOPY": 2180,
     "opRETURNDATACOPYloop": 2209,
     "opRETURNDATACOPYfinal": 2220,
     "opRETURNDATACOPYEmpty": 2227,
     "opEXTCODEHASH": 2232,
     "mapping_opcodes": 2242,
     "funcECRECOVER": 2498,
     "continueEcrecover": 2522,
     "endECRECOVERFail": 2524,
     "preEndECRECOVER": 2528,
     "endECRECOVER": 2529,
     "revertPrecompiled": 2530,
     "IDENTITY": 2541,
     "IDENTITYloop": 2557,
     "IDENTITYfinal": 2563,
     "IDENTITYreturn": 2565,
     "IDENTITYreturn2": 2577,
     "IDENTITYreturnLoop": 2579,
     "IDENTITYreturnFinal": 2591,
     "IDENTITYend": 2596,
     "preEnd": 2598,
     "selectorPrecompiled": 2605,
     "ecrecover_precompiled": 2614,
     "ecrecover_tx": 2615,
     "ecrecover_store_args": 2616,
     "ecrecover_v_not_eq_1b": 2642,
     "ecrecover_v_ok": 2645,
     "ecrecover_has_sqrt": 2655,
     "ecrecover_v_y2_same_parity": 2664,
     "ecrecover_r_is_zero": 2696,
     "ecrecover_r_is_too_big": 2697,
     "ecrecover_s_is_zero": 2698,
     "ecrecover_s_is_too_big": 2699,
     "ecrecover_v_not_eq_1b1c": 2700,
     "ecrecover_not_exists_sqrt_of_y": 2701,
     "ecrecover_error": 2702,
     "ecrecover_end": 2703,
     "addFpEc": 2705,
     "sqFpEc": 2712,
     "mulFpEc": 2720,
     "mulFnEc": 2727,
     "invFpEc": 2734,
     "invFpEc_normalized": 2737,
     "invFnEc": 2746,
     "invFnEc_normalized": 2749,
     "sqrtFpEc": 2758,
     "sqrtFpEc_End": 2771,
     "checkSqrtFpEc": 2772,
     "mulPointEc": 3528,
     "mulPointSameInitalPoints": 3542,
     "mulPointDiffInitalPoints": 3546,
     "mulPointEc_loop": 3549,
     "mulPointEc_k10": 3551,
     "mulPointEc_k10_k20": 3553,
     "mulPointEc_k11": 3555,
     "mulPointEc_k11_k20": 3557,
     "mulPointEc_k11_k21": 3559,
     "mulPointEc_k10_k21": 3562,
     "mulPointEc_p2_loaded": 3564,
     "mulPointEc_after_add": 3572,
     "mulPointEc_p3_assignment": 3573,
     "mulPointEc_square": 3576,
     "mulPointEc_x_equals_before_add": 3582,
     "mulPointEc_same_point_to_add": 3591,
     "mulPointEc_end_loop": 3595,
     "initTouchedTree": 3597,
     "checkpointTouched": 3598,
     "revertTouched": 3600,
     "isColdAddress": 3602,
     "checkWarmed": 3612,
     "markWarmAddress": 3618,
     "finishColdAddress": 3620,
     "finishColdPrecompiled": 3625,
     "isColdSlot": 3629,
     "markWarmSlot": 3639,
     "finishColdSlot": 3642,
     "exp_num": 3647,
     "processTx": 3903,
     "checkAndSaveFrom": 3911,
     "endCheckChainId": 3922,
     "addDeploymentGasCost": 3944,
     "getCalldataGasCost": 3945,
     "addGas": 3948,
     "loopBytes": 3950,
     "add4Gas": 3958,
     "add16Gas": 3959,
     "endCalldataIntrinsicGas": 3960,
     "txType": 3989,
     "getContractAddress": 3996,
     "nonce1byte": 4014,
     "nonceIs0": 4022,
     "create2": 4023,
     "loopCreate2": 4031,
     "endloopCreate2": 4040,
     "create2end": 4045,
     "endContractAddress": 4060,
     "deploy": 4065,
     "readDeployBytecode": 4090,
     "readDeployBytecodeCreate": 4098,
     "readDeployBytecodeCreateDefault": 4108,
     "callContract": 4109,
     "readByteCode": 4134,
     "readCode": 4141,
     "endDeploy": 4143,
     "handleGas": 4157,
     "refundGas": 4168,
     "sendGasSeq": 4183,
     "invalidIntrinsicTxSignature": 4198,
     "invalidIntrinsicTxChainId": 4199,
     "invalidIntrinsicTxNonce": 4200,
     "invalidIntrinsicTxGasLimit": 4201,
     "invalidIntrinsicTxGasOverflow": 4202,
     "invalidIntrinsicTxBalance": 4203,
     "invalidIntrinsicBatchGasLimit": 4204,
     "invalidIntrinsicTxSenderCode": 4205,
     "handleIntrinsicError": 4206,
     "defaultOpCode": 4207,
     "abs": 4208,
     "absIsNeg": 4213,
     "copySP": 4217,
     "copySPloop": 4224,
     "copySPFinal": 4232,
     "copySPEnd": 4236,
     "getLenBytes": 4238,
     "getLenBytesLoop": 4245,
     "getLenEnd": 4252,
     "getLenBits": 4257,
     "getLenBitsLoop": 4264,
     "getLenBitsEnd": 4273,
     "MSTOREX": 4278,
     "MSTORE32": 4283,
     "initMSTORE": 4294,
     "MSTOREX2": 4310,
     "MSTOREX3": 4329,
     "finalMSTORE": 4341,
     "memAlignOptionMSTORE": 4349,
     "offsetMSTORE32": 4364,
     "endMSTORE": 4365,
     "endMSTOREX": 4370,
     "MLOADX": 4371,
     "MLOAD32": 4377,
     "initMLOAD": 4387,
     "memAlignOptionMLOAD": 4393,
     "sliceA": 4399,
     "offsetMLOAD32": 4405,
     "endMLOAD": 4406,
     "errorMLOADMSTORE": 4410,
     "isEmptyAccount": 4411,
     "isNotEmptyAccount": 4435,
     "ISEMPTYEnd": 4436,
     "computeGasSendCall": 4440,
     "computeGasSendCallEnd": 4457,
     "saveMem": 4461,
     "saveMemGAS": 4478,
     "saveMemEnd": 4499,
     "addARITH": 4505,
     "setAddArithOverflow": 4510,
     "finishAddArith": 4511,
     "subARITH": 4512,
     "mulARITH": 4517,
     "setMulArithOverflow": 4532,
     "finishMulArith": 4533,
     "divARITH": 4534,
     "zeroDiv": 4559,
     "divisorSmallerDiv": 4563,
     "loadTmp": 4567,
     "storeTmp": 4572,
     "SHRarith": 4577,
     "SHRarithBit": 4592,
     "SHRarithinit": 4599,
     "SHRarith0": 4610,
     "SHRarithfinal": 4611,
     "SHLarith": 4616,
     "SHLarithBit": 4631,
     "SHLarithinit": 4639,
     "SHLarith0": 4655,
     "SHLarithfinal": 4657,
     "outOfCountersStep": 4663,
     "outOfCountersKeccak": 4664,
     "outOfCountersBinary": 4665,
     "outOfCountersMemalign": 4666,
     "outOfCountersArith": 4667,
     "outOfCountersPadding": 4668,
     "outOfCountersPoseidon": 4669,
     "outOfGas": 4670,
     "invalidJump": 4671,
     "invalidOpcode": 4672,
     "stackUnderflow": 4673,
     "stackOverflow": 4674,
     "deployAddressCollision": 4675,
     "invalidStaticTx": 4676,
     "invalidCodeSize": 4677,
     "invalidCodeStartsEF": 4678,
     "handleError": 4679,
     "handleBatchError": 4694,
     "firstContextInvalid": 4696,
     "offsetUtil": 4698,
     "moveBalances": 4710,
     "endMoveBalances": 4733,
     "invalidCall": 4734,
     "readPush": 4748,
     "readPushBlock": 4763,
     "doRotate": 4779,
     "doRotateLoop": 4780,
     "endRotate": 4784,
     "endPushInit": 4788,
     "endPushLoop": 4791,
     "computeFactorLoop": 4798,
     "computeFactorEnd": 4802,
     "endPushFinal": 4804,
     "doRotate2": 4805,
     "doRotateLoop2": 4806,
     "endRotate2": 4810,
     "finalPush": 4813,
     "addBatchHashByteByByte": 4815,
     "utilsAddBatchHashBytebyByteLoop": 4820,
     "checkBytecodeStartsEF": 4834,
     "checkBytecodeStartsEFend": 4848,
     "hashPoseidonLinearFromMemory": 4854,
     "hashPoseidonLoop": 4875,
     "hashPoseidonFinal": 4884,
     "hashPoseidonEnd": 4889,
     "hashPoseidonReturn": 4892,
     "maskAddress": 4897,
     "updateSystemData": 4903,
     "utilMULMOD": 4927,
     "mulModNoKH": 4959,
     "zeroOneMod": 4968,
     "utilMULMODend": 4969,
     "expAD": 4974,
     "expADloop": 4991,
     "expADloop0": 5003,
     "expA0D": 5006,
     "expAD0": 5008,
     "expADend": 5010,
     "failAssert": 5015
    },
    "constants": {
     "ADDRESS_GLOBAL_EXIT_ROOT_MANAGER_L2": {
      "value": "936572701188795762702460789585668173002398546170",
      "type": "CONSTL",
      "line": 2,
      "fileName": "constants.zkasm"
     },
     "ADDRESS_SYSTEM": {
      "value": "1554098974",
      "type": "CONSTL",
      "line": 3,
      "fileName": "constants.zkasm"
     },
     "CALLDATA_OFFSET": {
      "value": "1024",
      "type": "CONST",
      "line": 4,
      "fileName": "constants.zkasm"
     },
     "BATCH_DIFFICULTY": {
      "value": "0",
      "type": "CONST",
      "line": 5,
      "fileName": "constants.zkasm"
     },
     "TX_GAS_LIMIT": {
      "value": "30000000",
      "type": "CONST",
      "line": 6,
      "fileName": "constants.zkasm"
     },
     "GLOBAL_EXIT_ROOT_STORAGE_POS": {
      "value": "0",
      "type": "CONST",
      "line": 7,
      "fileName": "constants.zkasm"
     },
     "LOCAL_EXIT_ROOT_STORAGE_POS": {
      "value": "1",
      "type": "CONST",
      "line": 8,
      "fileName": "constants.zkasm"
     },
     "LAST_TX_STORAGE_POS": {
      "value": "0",
      "type": "CONST",
      "line": 9,
      "fileName": "constants.zkasm"
     },
     "STATE_ROOT_STORAGE_POS": {
      "value": "1",
      "type": "CONST",
      "line": 10,
      "fileName": "constants.zkasm"
     },
     "MAX_MEM_EXPANSION_BYTES": {
      "value": "4194272",
      "type": "CONST",
      "line": 11,
      "fileName": "constants.zkasm"
     },
     "FORK_ID": {
      "value": "4",
      "type": "CONST",
      "line": 12,
      "fileName": "constants.zkasm"
     },
     "MIN_VALUE_SHORT": {
      "value": "128",
      "type": "CONST",
      "line": 15,
      "fileName": "constants.zkasm"
     },
     "MIN_BYTES_LONG": {
      "value": "56",
      "type": "CONST",
      "line": 16,
      "fileName": "constants.zkasm"
     },
     "SMT_KEY_BALANCE": {
      "value": "0",
      "type": "CONST",
      "line": 19,
      "fileName": "constants.zkasm"
     },
     "SMT_KEY_NONCE": {
      "value": "1",
      "type": "CONST",
      "line": 20,
      "fileName": "constants.zkasm"
     },
     "SMT_KEY_SC_CODE": {
      "value": "2",
      "type": "CONST",
      "line": 21,
      "fileName": "constants.zkasm"
     },
     "SMT_KEY_SC_STORAGE": {
      "value": "3",
      "type": "CONST",
      "line": 22,
      "fileName": "constants.zkasm"
     },
     "SMT_KEY_SC_LENGTH": {
      "value": "4",
      "type": "CONST",
      "line": 23,
      "fileName": "constants.zkasm"
     },
     "SMT_KEY_TOUCHED_ADDR": {
      "value": "5",
      "type": "CONST",
      "line": 26,
      "fileName": "constants.zkasm"
     },
     "SMT_KEY_TOUCHED_SLOTS": {
      "value": "6",
      "type": "CONST",
      "line": 27,
      "fileName": "constants.zkasm"
     },
     "BASE_TX_GAS": {
      "value": "21000",
      "type": "CONST",
      "line": 30,
      "fileName": "constants.zkasm"
     },
     "BASE_TX_DEPLOY_GAS": {
      "value": "53000",
      "type": "CONST",
      "line": 31,
      "fileName": "constants.zkasm"
     },
     "SLOAD_GAS": {
      "value": "100",
      "type": "CONST",
      "line": 32,
      "fileName": "constants.zkasm"
     },
     "GAS_QUICK_STEP": {
      "value": "2",
      "type": "CONST",
      "line": 33,
      "fileName": "constants.zkasm"
     },
     "GAS_FASTEST_STEP": {
      "value": "3",
      "type": "CONST",
      "line": 34,
      "fileName": "constants.zkasm"
     },
     "GAS_FAST_STEP": {
      "value": "5",
      "type": "CONST",
      "line": 35,
      "fileName": "constants.zkasm"
     },
     "GAS_MID_STEP": {
      "value": "8",
      "type": "CONST",
      "line": 36,
      "fileName": "constants.zkasm"
     },
     "GAS_SLOW_STEP": {
      "value": "10",
      "type": "CONST",
      "line": 37,
      "fileName": "constants.zkasm"
     },
     "GAS_EXT_STEP": {
      "value": "20",
      "type": "CONST",
      "line": 38,
      "fileName": "constants.zkasm"
     },
     "CALL_VALUE_TRANSFER_GAS": {
      "value": "9000",
      "type": "CONST",
      "line": 39,
      "fileName": "constants.zkasm"
     },
     "CALL_NEW_ACCOUNT_GAS": {
      "value": "25000",
      "type": "CONST",
      "line": 40,
      "fileName": "constants.zkasm"
     },
     "CALL_STIPEND": {
      "value": "2300",
      "type": "CONST",
      "line": 41,
      "fileName": "constants.zkasm"
     },
     "ECRECOVER_GAS": {
      "value": "3000",
      "type": "CONST",
      "line": 42,
      "fileName": "constants.zkasm"
     },
     "IDENTITY_GAS": {
      "value": "15",
      "type": "CONST",
      "line": 43,
      "fileName": "constants.zkasm"
     },
     "IDENTITY_WORD_GAS": {
      "value": "3",
      "type": "CONST",
      "line": 44,
      "fileName": "constants.zkasm"
     },
     "KECCAK_GAS": {
      "value": "30",
      "type": "CONST",
      "line": 45,
      "fileName": "constants.zkasm"
     },
     "KECCAK_WORD_GAS": {
      "value": "6",
      "type": "CONST",
      "line": 46,
      "fileName": "constants.zkasm"
     },
     "LOG_GAS": {
      "value": "375",
      "type": "CONST",
      "line": 47,
      "fileName": "constants.zkasm"
     },
     "LOG_TOPIC_GAS": {
      "value": "375",
      "type": "CONST",
      "line": 48,
      "fileName": "constants.zkasm"
     },
     "JUMP_DEST_GAS": {
      "value": "1",
      "type": "CONST",
      "line": 49,
      "fileName": "constants.zkasm"
     },
     "WARM_STORGE_READ_GAS": {
      "value": "100",
      "type": "CONST",
      "line": 50,
      "fileName": "constants.zkasm"
     },
     "COLD_ACCOUNT_ACCESS_COST_REDUCED": {
      "value": "2500",
      "type": "CONST",
      "line": 51,
      "fileName": "constants.zkasm"
     },
     "COLD_ACCOUNT_ACCESS_COST": {
      "value": "2600",
      "type": "CONST",
      "line": 52,
      "fileName": "constants.zkasm"
     },
     "EXP_BYTE_GAS": {
      "value": "50",
      "type": "CONST",
      "line": 53,
      "fileName": "constants.zkasm"
     },
     "RETURN_GAS_COST": {
      "value": "200",
      "type": "CONST",
      "line": 54,
      "fileName": "constants.zkasm"
     },
     "CREATE_GAS": {
      "value": "32000",
      "type": "CONST",
      "line": 55,
      "fileName": "constants.zkasm"
     },
     "CREATE_2_GAS": {
      "value": "32000",
      "type": "CONST",
      "line": 56,
      "fileName": "constants.zkasm"
     },
     "SENDALL_GAS": {
      "value": "5000",
      "type": "CONST",
      "line": 57,
      "fileName": "constants.zkasm"
     },
     "LOG_DATA_GAS": {
      "value": "8",
      "type": "CONST",
      "line": 58,
      "fileName": "constants.zkasm"
     },
     "SSTORE_ENTRY_EIP_2200_GAS": {
      "value": "2300",
      "type": "CONST",
      "line": 60,
      "fileName": "constants.zkasm"
     },
     "SSTORE_SET_EIP_2200_GAS": {
      "value": "20000",
      "type": "CONST",
      "line": 61,
      "fileName": "constants.zkasm"
     },
     "COLD_SLOAD_COST": {
      "value": "2100",
      "type": "CONST",
      "line": 62,
      "fileName": "constants.zkasm"
     },
     "COLD_SLOAD_COST_REDUCED": {
      "value": "2000",
      "type": "CONST",
      "line": 63,
      "fileName": "constants.zkasm"
     },
     "SSTORE_DYNAMIC_GAS": {
      "value": "100",
      "type": "CONST",
      "line": 64,
      "fileName": "constants.zkasm"
     },
     "SSTORE_SET_GAS": {
      "value": "20000",
      "type": "CONST",
      "line": 65,
      "fileName": "constants.zkasm"
     },
     "SSTORE_SET_GAS_REDUCED": {
      "value": "19900",
      "type": "CONST",
      "line": 66,
      "fileName": "constants.zkasm"
     },
     "SSTORE_RESET_GAS": {
      "value": "2900",
      "type": "CONST",
      "line": 67,
      "fileName": "constants.zkasm"
     },
     "SSTORE_RESET_GAS_REDUCED": {
      "value": "2800",
      "type": "CONST",
      "line": 68,
      "fileName": "constants.zkasm"
     },
     "SSTORE_CLEARS_SCHEDULE": {
      "value": "15000",
      "type": "CONST",
      "line": 69,
      "fileName": "constants.zkasm"
     },
     "MIN_STEPS_FINISH_BATCH": {
      "value": "200",
      "type": "CONST",
      "line": 72,
      "fileName": "constants.zkasm"
     },
     "TOTAL_STEPS_LIMIT": {
      "value": "8388608",
      "type": "CONST",
      "line": 73,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_STEPS_LIMIT": {
      "value": "8388408",
      "type": "CONST",
      "line": 75,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_ARITH_LIMIT": {
      "value": "262144",
      "type": "CONST",
      "line": 76,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_BINARY_LIMIT": {
      "value": "524288",
      "type": "CONST",
      "line": 77,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_MEM_ALIGN_LIMIT": {
      "value": "262144",
      "type": "CONST",
      "line": 78,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_KECCAK_F_LIMIT": {
      "value": "2376",
      "type": "CONST",
      "line": 79,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_PADDING_PG_LIMIT": {
      "value": "149796",
      "type": "CONST",
      "line": 80,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_POSEIDON_G_LIMIT": {
      "value": "279620",
      "type": "CONST",
      "line": 81,
      "fileName": "constants.zkasm"
     },
     "SAFE_RANGE": {
      "value": "20",
      "type": "CONST",
      "line": 83,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_STEPS": {
      "value": "7968988",
      "type": "CONST",
      "line": 85,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_ARITH": {
      "value": "249037",
      "type": "CONST",
      "line": 86,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_BINARY": {
      "value": "498074",
      "type": "CONST",
      "line": 87,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_MEM_ALIGN": {
      "value": "249037",
      "type": "CONST",
      "line": 88,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_KECCAK_F": {
      "value": "2258",
      "type": "CONST",
      "line": 89,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_PADDING_PG": {
      "value": "142307",
      "type": "CONST",
      "line": 90,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_POSEIDON_G": {
      "value": "265639",
      "type": "CONST",
      "line": 91,
      "fileName": "constants.zkasm"
     },
     "MAX_CNT_POSEIDON_SLOAD_SSTORE": {
      "value": "257",
      "type": "CONST",
      "line": 92,
      "fileName": "constants.zkasm"
     },
     "MIN_CNT_KECCAK_BATCH": {
      "value": "1",
      "type": "CONST",
      "line": 94,
      "fileName": "constants.zkasm"
     },
     "MAX_NONCE": {
      "value": "18446744073709551615",
      "type": "CONSTL",
      "line": 97,
      "fileName": "constants.zkasm"
     },
     "MAX_UINT_256": {
      "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "type": "CONSTL",
      "line": 98,
      "fileName": "constants.zkasm"
     },
     "CODE_SIZE_LIMIT": {
      "value": "24576",
      "type": "CONST",
      "line": 99,
      "fileName": "constants.zkasm"
     },
     "BYTECODE_STARTS_EF": {
      "value": "239",
      "type": "CONST",
      "line": 100,
      "fileName": "constants.zkasm"
     },
     "FPEC": {
      "value": "115792089237316195423570985008687907853269984665640564039457584007908834671663",
      "type": "CONSTL",
      "line": 1,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "FPEC_MINUS_ONE": {
      "value": "115792089237316195423570985008687907853269984665640564039457584007908834671662",
      "type": "CONSTL",
      "line": 2,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "FNEC_DIV_TWO": {
      "value": "57896044618658097711785492504343953926418782139537452191302581570759080747168",
      "type": "CONSTL",
      "line": 3,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "FPEC_C2_256": {
      "value": "4294968273",
      "type": "CONSTL",
      "line": 4,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "FPEC_NON_SQRT": {
      "value": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
      "type": "CONSTL",
      "line": 5,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "FNEC": {
      "value": "115792089237316195423570985008687907852837564279074904382605163141518161494337",
      "type": "CONSTL",
      "line": 7,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "FNEC_MINUS_ONE": {
      "value": "115792089237316195423570985008687907852837564279074904382605163141518161494336",
      "type": "CONSTL",
      "line": 8,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "ECGX": {
      "value": "55066263022277343669578718895168534326250603453777594175500187360389116729240",
      "type": "CONSTL",
      "line": 10,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "ECGY": {
      "value": "32670510020758816978083085130507043184471273380659243275938904335757337482424",
      "type": "CONSTL",
      "line": 11,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "P2_160": {
      "value": "1461501637330902918203684832716283019655932542976",
      "type": "CONSTL",
      "line": 12,
      "fileName": "ecrecover/constEc.zkasm"
     },
     "P2_96": {
      "value": "79228162514264337593543950336",
      "type": "CONSTL",
      "line": 13,
      "fileName": "ecrecover/constEc.zkasm"
     }
    }
   }
   