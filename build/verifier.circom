pragma circom 2.0.2;

include "../node_modules/circomlib/circuits/binsum.circom";
include "../node_modules/circomlib/circuits/poseidon.circom";
include "../circuits/merklemultipol.circom";
include "../circuits/merklegroup.circom";
include "../circuits/merkle.circom";
include "../circuits/fft.circom";
include "../circuits/poleval.circom";
include "../circuits/exp.circom";

include "../circuits/fields2idxs.circom";

template StarkEvaluationCalculator() {

    signal input globalHash;

    signal input tree1[96];
    signal input tree2[11];
    signal input tree3[15];
    signal input treeC[59];
    signal input tree1p[96];
    signal input tree2p[11];
    signal input tree3p[15];
    signal input treeCp[59];
    signal input u;
    signal input defVal;
    signal input gamma;
    signal input beta;
    signal input v;
    signal output out;

    signal im[1252];
    
    im[0] <== v * v;
        im[1] <== im[0] * v;
        im[2] <== im[1] * v;
        im[3] <== im[2] * v;
        im[4] <== im[3] * v;
        im[5] <== im[4] * v;
        im[6] <== im[5] * v;
        im[7] <== im[6] * v;
        im[8] <== im[7] * v;
        im[9] <== im[8] * v;
        im[10] <== im[9] * v;
        im[11] <== im[10] * v;
        im[12] <== im[11] * v;
        im[13] <== im[12] * v;
        im[14] <== im[13] * v;
        im[15] <== im[14] * v;
        im[16] <== im[15] * v;
        im[17] <== im[16] * v;
        im[18] <== im[17] * v;
        im[19] <== im[18] * v;
        im[20] <== im[19] * v;
        im[21] <== im[20] * v;
        im[22] <== im[21] * v;
        im[23] <== im[22] * v;
        im[24] <== im[23] * v;
        im[25] <== im[24] * v;
        im[26] <== im[25] * v;
        im[27] <== im[26] * v;
        im[28] <== im[27] * v;
        im[29] <== im[28] * v;
        im[30] <== im[29] * v;
        im[31] <== im[30] * v;
        im[32] <== im[31] * v;
        im[33] <== im[32] * v;
        im[34] <== im[33] * v;
        im[35] <== im[34] * v;
        im[36] <== im[35] * v;
        im[37] <== im[36] * v;
        im[38] <== im[37] * v;
        im[39] <== im[38] * v;
        im[40] <== im[39] * v;
        im[41] <== im[40] * v;
        im[42] <== im[41] * v;
        im[43] <== im[42] * v;
        im[44] <== im[43] * v;
        im[45] <== im[44] * v;
        im[46] <== im[45] * v;
        im[47] <== im[46] * v;
        im[48] <== im[47] * v;
        im[49] <== im[48] * v;
        im[50] <== im[49] * v;
        im[51] <== im[50] * v;
        im[52] <== im[51] * v;
        im[53] <== im[52] * v;
        im[54] <== im[53] * v;
        im[55] <== im[54] * v;
        im[56] <== im[55] * v;
        im[57] <== im[56] * v;
        im[58] <== im[57] * v;
        im[59] <== im[58] * v;
        im[60] <== im[59] * v;
        im[61] <== im[60] * v;
        im[62] <== im[61] * v;
        im[63] <== im[62] * v;
        im[64] <== im[63] * v;
        im[65] <== im[64] * v;
        im[66] <== im[65] * v;
        im[67] <== im[66] * v;
        im[68] <== im[67] * v;
        im[69] <== im[68] * v;
        im[70] <== im[69] * v;
        im[71] <== im[70] * v;
        im[72] <== im[71] * v;
        im[73] <== im[72] * v;
        im[74] <== im[73] * v;
        im[75] <== im[74] * v;
        im[76] <== im[75] * v;
        im[77] <== im[76] * v;
        im[78] <== im[77] * v;
        im[79] <== im[78] * v;
        im[80] <== im[79] * v;
        im[81] <== im[80] * v;
        im[82] <== im[81] * v;
        im[83] <== im[82] * v;
        im[84] <== im[83] * v;
        im[85] <== im[84] * v;
        im[86] <== im[85] * v;
        im[87] <== im[86] * v;
        im[88] <== im[87] * v;
        im[89] <== im[88] * v;
        im[90] <== im[89] * v;
        im[91] <== im[90] * v;
        im[92] <== im[91] * v;
        im[93] <== im[92] * v;
        im[94] <== im[93] * v;
        im[95] <== im[94] * v;
        im[96] <== im[95] * v;
        im[97] <== im[96] * v;
        im[98] <== im[97] * v;
        im[99] <== im[98] * v;
        im[100] <== im[99] * v;
        im[101] <== im[100] * v;
        im[102] <== im[101] * v;
        im[103] <== im[102] * v;
        im[104] <== im[103] * v;
        im[105] <== im[104] * v;
        im[106] <== im[105] * v;
        im[107] <== im[106] * v;
        im[108] <== im[107] * v;
        im[109] <== im[108] * v;
        im[110] <== im[109] * v;
        im[111] <== im[110] * v;
        im[112] <== im[111] * v;
        im[113] <== im[112] * v;
        im[114] <== im[113] * v;
        im[115] <== im[114] * v;
        im[116] <== im[115] * v;
        im[117] <== im[116] * v;
        im[118] <== im[117] * v;
        im[119] <== im[118] * v;
        im[120] <== im[119] * v;
        im[123] <== treeC[4] * tree1[0];
        im[126] <== -treeC[4];
        im[125] <== im[126] + 1;
        im[128] <== tree1[1] * 65536;
        im[127] <== im[128] + tree1[0]; 
        im[124] <== im[125] * im[127];
        im[122] <== im[123] + im[124]; 
        im[121] <== tree1p[1] - im[122];
        im[129] <== im[120] * v;
        im[143] <== tree1[5] * tree1[34];
        im[144] <== tree1[9] * tree1[35];
        im[142] <== im[143] + im[144]; 
        im[145] <== tree1[13] * tree1[36];
        im[141] <== im[142] + im[145]; 
        im[146] <== tree1[17] * tree1[37];
        im[140] <== im[141] + im[146]; 
        im[147] <== tree1[21] * tree1[38];
        im[139] <== im[140] + im[147]; 
        im[148] <== tree1[33] * tree1[40];
        im[138] <== im[139] + im[148]; 
        im[149] <== tree1[22] * tree1[39];
        im[137] <== im[138] + im[149]; 
        im[150] <== tree1[23] * tree1[41];
        im[136] <== im[137] + im[150]; 
        im[151] <== tree1[24] * tree1[42];
        im[135] <== im[136] + im[151]; 
        im[152] <== tree1[25] * tree1[43];
        im[134] <== im[135] + im[152]; 
        im[153] <== tree1[26] * tree1[44];
        im[133] <== im[134] + im[153]; 
        im[154] <== tree1[27] * tree1[45];
        im[132] <== im[133] + im[154]; 
        im[155] <== treeC[58] * tree1[46];
        im[131] <== im[132] + im[155]; 
        im[130] <== im[131] + tree1[29]; 
        im[156] <== tree1[85] * treeC[0];
        im[157] <== im[130] - im[156];
        im[161] <== im[157] - tree1[5];
        im[160] <== tree1[47] * im[161];
        im[159] <== im[160] + tree1[5]; 
        im[158] <== tree1p[5] - im[159];
        im[162] <== im[129] * v;
        im[168] <== tree1[4] * tree1[34];
        im[169] <== tree1[8] * tree1[35];
        im[167] <== im[168] + im[169]; 
        im[170] <== tree1[12] * tree1[36];
        im[166] <== im[167] + im[170]; 
        im[171] <== tree1[16] * tree1[37];
        im[165] <== im[166] + im[171]; 
        im[172] <== tree1[20] * tree1[38];
        im[164] <== im[165] + im[172]; 
        im[173] <== tree1[32] * tree1[40];
        im[163] <== im[164] + im[173]; 
        im[174] <== tree1[86] * treeC[0];
        im[175] <== im[163] - im[174];
        im[179] <== im[175] - tree1[4];
        im[178] <== tree1[47] * im[179];
        im[177] <== im[178] + tree1[4]; 
        im[176] <== tree1p[4] - im[177];
        im[180] <== im[162] * v;
        im[186] <== tree1[3] * tree1[34];
        im[187] <== tree1[7] * tree1[35];
        im[185] <== im[186] + im[187]; 
        im[188] <== tree1[11] * tree1[36];
        im[184] <== im[185] + im[188]; 
        im[189] <== tree1[15] * tree1[37];
        im[183] <== im[184] + im[189]; 
        im[190] <== tree1[19] * tree1[38];
        im[182] <== im[183] + im[190]; 
        im[191] <== tree1[31] * tree1[40];
        im[181] <== im[182] + im[191]; 
        im[192] <== tree1[87] * treeC[0];
        im[193] <== im[181] - im[192];
        im[197] <== im[193] - tree1[3];
        im[196] <== tree1[47] * im[197];
        im[195] <== im[196] + tree1[3]; 
        im[194] <== tree1p[3] - im[195];
        im[198] <== im[180] * v;
        im[204] <== tree1[2] * tree1[34];
        im[205] <== tree1[6] * tree1[35];
        im[203] <== im[204] + im[205]; 
        im[206] <== tree1[10] * tree1[36];
        im[202] <== im[203] + im[206]; 
        im[207] <== tree1[14] * tree1[37];
        im[201] <== im[202] + im[207]; 
        im[208] <== tree1[18] * tree1[38];
        im[200] <== im[201] + im[208]; 
        im[209] <== tree1[30] * tree1[40];
        im[199] <== im[200] + im[209]; 
        im[210] <== tree1[88] * treeC[0];
        im[211] <== im[199] - im[210];
        im[215] <== im[211] - tree1[2];
        im[214] <== tree1[47] * im[215];
        im[213] <== im[214] + tree1[2]; 
        im[212] <== tree1p[2] - im[213];
        im[216] <== im[198] * v;
        im[220] <== im[157] - tree1[9];
        im[219] <== tree1[48] * im[220];
        im[218] <== im[219] + tree1[9]; 
        im[217] <== tree1p[9] - im[218];
        im[221] <== im[216] * v;
        im[225] <== im[175] - tree1[8];
        im[224] <== tree1[48] * im[225];
        im[223] <== im[224] + tree1[8]; 
        im[222] <== tree1p[8] - im[223];
        im[226] <== im[221] * v;
        im[230] <== im[193] - tree1[7];
        im[229] <== tree1[48] * im[230];
        im[228] <== im[229] + tree1[7]; 
        im[227] <== tree1p[7] - im[228];
        im[231] <== im[226] * v;
        im[235] <== im[211] - tree1[6];
        im[234] <== tree1[48] * im[235];
        im[233] <== im[234] + tree1[6]; 
        im[232] <== tree1p[6] - im[233];
        im[236] <== im[231] * v;
        im[240] <== im[157] - tree1[13];
        im[239] <== tree1[49] * im[240];
        im[238] <== im[239] + tree1[13]; 
        im[237] <== tree1p[13] - im[238];
        im[241] <== im[236] * v;
        im[245] <== im[175] - tree1[12];
        im[244] <== tree1[49] * im[245];
        im[243] <== im[244] + tree1[12]; 
        im[242] <== tree1p[12] - im[243];
        im[246] <== im[241] * v;
        im[250] <== im[193] - tree1[11];
        im[249] <== tree1[49] * im[250];
        im[248] <== im[249] + tree1[11]; 
        im[247] <== tree1p[11] - im[248];
        im[251] <== im[246] * v;
        im[255] <== im[211] - tree1[10];
        im[254] <== tree1[49] * im[255];
        im[253] <== im[254] + tree1[10]; 
        im[252] <== tree1p[10] - im[253];
        im[256] <== im[251] * v;
        im[260] <== im[157] - tree1[17];
        im[259] <== tree1[50] * im[260];
        im[258] <== im[259] + tree1[17]; 
        im[257] <== tree1p[17] - im[258];
        im[261] <== im[256] * v;
        im[265] <== im[175] - tree1[16];
        im[264] <== tree1[50] * im[265];
        im[263] <== im[264] + tree1[16]; 
        im[262] <== tree1p[16] - im[263];
        im[266] <== im[261] * v;
        im[270] <== im[193] - tree1[15];
        im[269] <== tree1[50] * im[270];
        im[268] <== im[269] + tree1[15]; 
        im[267] <== tree1p[15] - im[268];
        im[271] <== im[266] * v;
        im[275] <== im[211] - tree1[14];
        im[274] <== tree1[50] * im[275];
        im[273] <== im[274] + tree1[14]; 
        im[272] <== tree1p[14] - im[273];
        im[276] <== im[271] * v;
        im[280] <== im[157] - tree1[21];
        im[279] <== tree1[51] * im[280];
        im[278] <== im[279] + tree1[21]; 
        im[277] <== tree1p[21] - im[278];
        im[281] <== im[276] * v;
        im[285] <== im[175] - tree1[20];
        im[284] <== tree1[51] * im[285];
        im[283] <== im[284] + tree1[20]; 
        im[282] <== tree1p[20] - im[283];
        im[286] <== im[281] * v;
        im[290] <== im[193] - tree1[19];
        im[289] <== tree1[51] * im[290];
        im[288] <== im[289] + tree1[19]; 
        im[287] <== tree1p[19] - im[288];
        im[291] <== im[286] * v;
        im[295] <== im[211] - tree1[18];
        im[294] <== tree1[51] * im[295];
        im[293] <== im[294] + tree1[18]; 
        im[292] <== tree1p[18] - im[293];
        im[296] <== im[291] * v;
        im[300] <== im[157] - tree1[22];
        im[299] <== tree1[52] * im[300];
        im[298] <== im[299] + tree1[22]; 
        im[297] <== tree1p[22] - im[298];
        im[301] <== im[296] * v;
        im[305] <== im[157] - tree1[23];
        im[304] <== tree1[53] * im[305];
        im[303] <== im[304] + tree1[23]; 
        im[302] <== tree1p[23] - im[303];
        im[306] <== im[301] * v;
        im[311] <== tree1[24] + tree1[61]; 
        im[310] <== im[157] - im[311];
        im[309] <== tree1[54] * im[310];
        im[312] <== tree1[24] + tree1[61]; 
        im[308] <== im[309] + im[312]; 
        im[307] <== tree1p[24] - im[308];
        im[313] <== im[306] * v;
        im[318] <== tree1[25] + tree1[62]; 
        im[317] <== im[157] - im[318];
        im[316] <== tree1[55] * im[317];
        im[319] <== tree1[25] + tree1[62]; 
        im[315] <== im[316] + im[319]; 
        im[314] <== tree1p[25] - im[315];
        im[320] <== im[313] * v;
        im[324] <== im[157] - tree1[26];
        im[323] <== tree1[56] * im[324];
        im[322] <== im[323] + tree1[26]; 
        im[321] <== tree1p[26] - im[322];
        im[325] <== im[320] * v;
        im[327] <== tree1[66] * tree1[21];
        im[326] <== im[327] + tree1[60]; 
        im[328] <== tree1[89] * treeC[0];
        im[329] <== im[326] - im[328];
        im[332] <== im[329] - tree1[27];
        im[331] <== tree1[84] * im[332];
        im[330] <== im[331] + tree1[27]; 
        im[333] <== tree1[90] * treeC[0];
        im[334] <== im[330] - im[333];
        im[338] <== im[157] - im[334];
        im[337] <== tree1[57] * im[338];
        im[336] <== im[337] + im[334]; 
        im[335] <== tree1p[27] - im[336];
        im[339] <== im[325] * v;
        im[341] <== tree1[59] * tree1[83];
        im[340] <== im[341] + tree1[58]; 
        im[342] <== tree1[91] * treeC[0];
        im[343] <== im[340] - im[342];
        im[349] <== tree1[67] * tree1[23];
        im[348] <== im[349] * 17179869184;
        im[350] <== tree1[63] * 8589934592;
        im[347] <== im[348] + im[350]; 
        im[351] <== tree1[64] * 4294967296;
        im[346] <== im[347] + im[351]; 
        im[352] <== tree1[65] * 12884901888;
        im[345] <== im[346] + im[352]; 
        im[344] <== im[345] + im[329]; 
        im[353] <== tree1[92] * treeC[0];
        im[354] <== im[344] - im[353];
        im[359] <== tree1[28] + 1;
        im[358] <== im[354] - im[359];
        im[357] <== im[343] * im[358];
        im[360] <== tree1[28] + 1;
        im[356] <== im[357] + im[360]; 
        im[355] <== tree1p[28] - im[356];
        im[361] <== im[339] * v;
        im[363] <== tree1[5] - im[157];
        im[362] <== im[363] * tree1[81];
        im[364] <== im[361] * v;
        im[366] <== tree1[4] - im[175];
        im[365] <== im[366] * tree1[81];
        im[367] <== im[364] * v;
        im[369] <== tree1[3] - im[193];
        im[368] <== im[369] * tree1[81];
        im[370] <== im[367] * v;
        im[372] <== tree1[2] - im[211];
        im[371] <== im[372] * tree1[81];
        im[373] <== im[370] * v;
        im[375] <== tree1[33] - globalHash;
        im[374] <== treeC[2] * im[375];
        im[376] <== im[373] * v;
        im[378] <== tree3[0] + 21888242871839275222246405745257275088548364400416034343698204186575808495616;
        im[377] <== treeC[2] * im[378];
        im[379] <== im[376] * v;
        im[380] <== beta + 1;
        im[381] <== gamma * im[380];
        im[385] <== tree2[1] * beta;
        im[384] <== tree2[0] + im[385]; 
        im[383] <== im[384] + im[381]; 
        im[388] <== tree2p[0] * beta;
        im[387] <== tree2[1] + im[388]; 
        im[386] <== im[387] + im[381]; 
        im[382] <== im[383] * im[386];
        im[389] <== tree3[6] * treeC[0];
        im[390] <== im[382] - im[389];
        im[393] <== tree1[0] + gamma; 
        im[396] <== treeCp[3] * beta;
        im[395] <== treeC[3] + im[396]; 
        im[394] <== im[395] + im[381]; 
        im[392] <== im[393] * im[394];
        im[391] <== im[392] * im[380];
        im[397] <== tree3[5] * treeC[0];
        im[398] <== im[391] - im[397];
        im[400] <== tree3p[0] * im[390];
        im[401] <== tree3[0] * im[398];
        im[399] <== im[400] - im[401];
        im[402] <== im[379] * v;
        im[404] <== tree3[1] + 21888242871839275222246405745257275088548364400416034343698204186575808495616;
        im[403] <== treeC[2] * im[404];
        im[405] <== im[402] * v;
        im[409] <== tree2[3] * beta;
        im[408] <== tree2[2] + im[409]; 
        im[407] <== im[408] + im[381]; 
        im[412] <== tree2p[2] * beta;
        im[411] <== tree2[3] + im[412]; 
        im[410] <== im[411] + im[381]; 
        im[406] <== im[407] * im[410];
        im[413] <== tree3[8] * treeC[0];
        im[414] <== im[406] - im[413];
        im[417] <== tree1[83] * 4294967296;
        im[416] <== im[417] + im[157]; 
        im[415] <== tree1[59] * im[416];
        im[418] <== tree1[95] * treeC[0];
        im[419] <== im[415] - im[418];
        im[422] <== im[419] + gamma; 
        im[425] <== tree1p[1] * beta;
        im[424] <== tree1[1] + im[425]; 
        im[423] <== im[424] + im[381]; 
        im[421] <== im[422] * im[423];
        im[420] <== im[421] * im[380];
        im[426] <== tree3[7] * treeC[0];
        im[427] <== im[420] - im[426];
        im[429] <== tree3p[1] * im[414];
        im[430] <== tree3[1] * im[427];
        im[428] <== im[429] - im[430];
        im[431] <== im[405] * v;
        im[433] <== tree3[2] + 21888242871839275222246405745257275088548364400416034343698204186575808495616;
        im[432] <== treeC[2] * im[433];
        im[434] <== im[431] * v;
        im[438] <== tree2[5] * beta;
        im[437] <== tree2[4] + im[438]; 
        im[436] <== im[437] + im[381]; 
        im[441] <== tree2p[4] * beta;
        im[440] <== tree2[5] + im[441]; 
        im[439] <== im[440] + im[381]; 
        im[435] <== im[436] * im[439];
        im[442] <== tree3[10] * treeC[0];
        im[443] <== im[435] - im[442];
        im[444] <== tree1[65] * im[329];
        im[445] <== tree1[93] * treeC[0];
        im[446] <== im[444] - im[445];
        im[450] <== im[446] - tree1[27];
        im[451] <== tree1[27] - im[446];
        im[449] <== im[450] - im[451];
        im[448] <== tree1[84] * im[449];
        im[452] <== tree1[27] - im[446];
        im[447] <== im[448] + im[452]; 
        im[453] <== tree1[94] * treeC[0];
        im[454] <== im[447] - im[453];
        im[457] <== im[454] + gamma; 
        im[460] <== tree1p[1] * beta;
        im[459] <== tree1[1] + im[460]; 
        im[458] <== im[459] + im[381]; 
        im[456] <== im[457] * im[458];
        im[455] <== im[456] * im[380];
        im[461] <== tree3[9] * treeC[0];
        im[462] <== im[455] - im[461];
        im[464] <== tree3p[2] * im[443];
        im[465] <== tree3[2] * im[462];
        im[463] <== im[464] - im[465];
        im[466] <== im[434] * v;
        im[468] <== tree3[3] + 21888242871839275222246405745257275088548364400416034343698204186575808495616;
        im[467] <== treeC[2] * im[468];
        im[469] <== im[466] * v;
        im[473] <== tree2[7] * beta;
        im[472] <== tree2[6] + im[473]; 
        im[471] <== im[472] + im[381]; 
        im[476] <== tree2p[6] * beta;
        im[475] <== tree2[7] + im[476]; 
        im[474] <== im[475] + im[381]; 
        im[470] <== im[471] * im[474];
        im[477] <== tree3[12] * treeC[0];
        im[478] <== im[470] - im[477];
        im[480] <== u * treeC[57];
        im[479] <== treeC[56] + im[480]; 
        im[485] <== u * im[157];
        im[484] <== tree1[5] + im[485]; 
        im[483] <== im[484] - im[479];
        im[482] <== im[483] * tree1[82];
        im[481] <== im[482] + im[479]; 
        im[486] <== tree2[10] * treeC[0];
        im[487] <== im[481] - im[486];
        im[489] <== u * treeCp[57];
        im[488] <== treeCp[56] + im[489]; 
        im[492] <== im[487] + gamma; 
        im[495] <== im[488] * beta;
        im[494] <== im[479] + im[495]; 
        im[493] <== im[494] + im[381]; 
        im[491] <== im[492] * im[493];
        im[490] <== im[491] * im[380];
        im[496] <== tree3[11] * treeC[0];
        im[497] <== im[490] - im[496];
        im[499] <== tree3p[3] * im[478];
        im[500] <== tree3[3] * im[497];
        im[498] <== im[499] - im[500];
        im[501] <== im[469] * v;
        im[503] <== tree3[4] + 21888242871839275222246405745257275088548364400416034343698204186575808495616;
        im[502] <== treeC[2] * im[503];
        im[504] <== im[501] * v;
        im[508] <== tree2[9] * beta;
        im[507] <== tree2[8] + im[508]; 
        im[506] <== im[507] + im[381]; 
        im[511] <== tree2p[8] * beta;
        im[510] <== tree2[9] + im[511]; 
        im[509] <== im[510] + im[381]; 
        im[505] <== im[506] * im[509];
        im[512] <== tree3[14] * treeC[0];
        im[513] <== im[505] - im[512];
        im[514] <== u * u;
        im[515] <== im[514] * u;
        im[516] <== im[515] * u;
        im[517] <== im[516] * u;
        im[518] <== im[517] * u;
        im[519] <== im[518] * u;
        im[520] <== im[519] * u;
        im[521] <== im[520] * u;
        im[522] <== im[521] * u;
        im[523] <== im[522] * u;
        im[524] <== im[523] * u;
        im[525] <== im[524] * u;
        im[526] <== im[525] * u;
        im[527] <== im[526] * u;
        im[528] <== im[527] * u;
        im[529] <== im[528] * u;
        im[530] <== im[529] * u;
        im[531] <== im[530] * u;
        im[532] <== im[531] * u;
        im[533] <== im[532] * u;
        im[534] <== im[533] * u;
        im[535] <== im[534] * u;
        im[536] <== im[535] * u;
        im[537] <== im[536] * u;
        im[538] <== im[537] * u;
        im[539] <== im[538] * u;
        im[540] <== im[539] * u;
        im[541] <== im[540] * u;
        im[542] <== im[541] * u;
        im[543] <== im[542] * u;
        im[544] <== im[543] * u;
        im[545] <== im[544] * u;
        im[546] <== im[545] * u;
        im[547] <== im[546] * u;
        im[548] <== im[547] * u;
        im[549] <== im[548] * u;
        im[550] <== im[549] * u;
        im[551] <== im[550] * u;
        im[552] <== im[551] * u;
        im[553] <== im[552] * u;
        im[554] <== im[553] * u;
        im[555] <== im[554] * u;
        im[556] <== im[555] * u;
        im[557] <== im[556] * u;
        im[558] <== im[557] * u;
        im[559] <== im[558] * u;
        im[560] <== im[559] * u;
        im[561] <== im[560] * u;
        im[562] <== im[561] * u;
        im[613] <== u * tree1[60];
        im[612] <== tree1[29] + im[613]; 
        im[614] <== im[514] * tree1[34];
        im[611] <== im[612] + im[614]; 
        im[615] <== im[515] * tree1[35];
        im[610] <== im[611] + im[615]; 
        im[616] <== im[516] * tree1[36];
        im[609] <== im[610] + im[616]; 
        im[617] <== im[517] * tree1[37];
        im[608] <== im[609] + im[617]; 
        im[618] <== im[518] * tree1[38];
        im[607] <== im[608] + im[618]; 
        im[619] <== im[519] * tree1[39];
        im[606] <== im[607] + im[619]; 
        im[620] <== im[520] * tree1[41];
        im[605] <== im[606] + im[620]; 
        im[621] <== im[521] * tree1[42];
        im[604] <== im[605] + im[621]; 
        im[622] <== im[522] * tree1[43];
        im[603] <== im[604] + im[622]; 
        im[623] <== im[523] * tree1[44];
        im[602] <== im[603] + im[623]; 
        im[624] <== im[524] * tree1[45];
        im[601] <== im[602] + im[624]; 
        im[625] <== im[525] * tree1[46];
        im[600] <== im[601] + im[625]; 
        im[626] <== im[526] * tree1[40];
        im[599] <== im[600] + im[626]; 
        im[627] <== im[527] * tree1[47];
        im[598] <== im[599] + im[627]; 
        im[628] <== im[528] * tree1[48];
        im[597] <== im[598] + im[628]; 
        im[629] <== im[529] * tree1[49];
        im[596] <== im[597] + im[629]; 
        im[630] <== im[530] * tree1[50];
        im[595] <== im[596] + im[630]; 
        im[631] <== im[531] * tree1[51];
        im[594] <== im[595] + im[631]; 
        im[632] <== im[532] * tree1[52];
        im[593] <== im[594] + im[632]; 
        im[633] <== im[533] * tree1[53];
        im[592] <== im[593] + im[633]; 
        im[634] <== im[534] * tree1[54];
        im[591] <== im[592] + im[634]; 
        im[635] <== im[535] * tree1[55];
        im[590] <== im[591] + im[635]; 
        im[636] <== im[536] * tree1[56];
        im[589] <== im[590] + im[636]; 
        im[637] <== im[537] * tree1[57];
        im[588] <== im[589] + im[637]; 
        im[638] <== im[538] * tree1[58];
        im[587] <== im[588] + im[638]; 
        im[639] <== im[539] * tree1[59];
        im[586] <== im[587] + im[639]; 
        im[640] <== im[540] * tree1[63];
        im[585] <== im[586] + im[640]; 
        im[641] <== im[541] * tree1[64];
        im[584] <== im[585] + im[641]; 
        im[642] <== im[542] * tree1[65];
        im[583] <== im[584] + im[642]; 
        im[643] <== im[543] * tree1[61];
        im[582] <== im[583] + im[643]; 
        im[644] <== im[544] * tree1[62];
        im[581] <== im[582] + im[644]; 
        im[645] <== im[545] * tree1[67];
        im[580] <== im[581] + im[645]; 
        im[646] <== im[546] * tree1[66];
        im[579] <== im[580] + im[646]; 
        im[647] <== im[547] * tree1[68];
        im[578] <== im[579] + im[647]; 
        im[648] <== im[548] * tree1[69];
        im[577] <== im[578] + im[648]; 
        im[649] <== im[549] * tree1[70];
        im[576] <== im[577] + im[649]; 
        im[650] <== im[550] * tree1[71];
        im[575] <== im[576] + im[650]; 
        im[651] <== im[551] * tree1[72];
        im[574] <== im[575] + im[651]; 
        im[652] <== im[552] * tree1[75];
        im[573] <== im[574] + im[652]; 
        im[653] <== im[553] * tree1[76];
        im[572] <== im[573] + im[653]; 
        im[654] <== im[554] * tree1[77];
        im[571] <== im[572] + im[654]; 
        im[655] <== im[555] * tree1[78];
        im[570] <== im[571] + im[655]; 
        im[656] <== im[556] * tree1[79];
        im[569] <== im[570] + im[656]; 
        im[657] <== im[557] * tree1[80];
        im[568] <== im[569] + im[657]; 
        im[658] <== im[558] * tree1[81];
        im[567] <== im[568] + im[658]; 
        im[659] <== im[559] * tree1[82];
        im[566] <== im[567] + im[659]; 
        im[660] <== im[560] * tree1[73];
        im[565] <== im[566] + im[660]; 
        im[661] <== im[561] * tree1[74];
        im[564] <== im[565] + im[661]; 
        im[662] <== im[562] * tree1[28];
        im[563] <== im[564] + im[662]; 
        im[713] <== u * treeC[6];
        im[712] <== treeC[5] + im[713]; 
        im[714] <== im[514] * treeC[7];
        im[711] <== im[712] + im[714]; 
        im[715] <== im[515] * treeC[8];
        im[710] <== im[711] + im[715]; 
        im[716] <== im[516] * treeC[9];
        im[709] <== im[710] + im[716]; 
        im[717] <== im[517] * treeC[10];
        im[708] <== im[709] + im[717]; 
        im[718] <== im[518] * treeC[11];
        im[707] <== im[708] + im[718]; 
        im[719] <== im[519] * treeC[12];
        im[706] <== im[707] + im[719]; 
        im[720] <== im[520] * treeC[14];
        im[705] <== im[706] + im[720]; 
        im[721] <== im[521] * treeC[15];
        im[704] <== im[705] + im[721]; 
        im[722] <== im[522] * treeC[16];
        im[703] <== im[704] + im[722]; 
        im[723] <== im[523] * treeC[17];
        im[702] <== im[703] + im[723]; 
        im[724] <== im[524] * treeC[18];
        im[701] <== im[702] + im[724]; 
        im[725] <== im[525] * treeC[19];
        im[700] <== im[701] + im[725]; 
        im[726] <== im[526] * treeC[13];
        im[699] <== im[700] + im[726]; 
        im[727] <== im[527] * treeC[20];
        im[698] <== im[699] + im[727]; 
        im[728] <== im[528] * treeC[21];
        im[697] <== im[698] + im[728]; 
        im[729] <== im[529] * treeC[22];
        im[696] <== im[697] + im[729]; 
        im[730] <== im[530] * treeC[23];
        im[695] <== im[696] + im[730]; 
        im[731] <== im[531] * treeC[24];
        im[694] <== im[695] + im[731]; 
        im[732] <== im[532] * treeC[25];
        im[693] <== im[694] + im[732]; 
        im[733] <== im[533] * treeC[26];
        im[692] <== im[693] + im[733]; 
        im[734] <== im[534] * treeC[27];
        im[691] <== im[692] + im[734]; 
        im[735] <== im[535] * treeC[28];
        im[690] <== im[691] + im[735]; 
        im[736] <== im[536] * treeC[29];
        im[689] <== im[690] + im[736]; 
        im[737] <== im[537] * treeC[30];
        im[688] <== im[689] + im[737]; 
        im[738] <== im[538] * treeC[31];
        im[687] <== im[688] + im[738]; 
        im[739] <== im[539] * treeC[32];
        im[686] <== im[687] + im[739]; 
        im[740] <== im[540] * treeC[35];
        im[685] <== im[686] + im[740]; 
        im[741] <== im[541] * treeC[36];
        im[684] <== im[685] + im[741]; 
        im[742] <== im[542] * treeC[37];
        im[683] <== im[684] + im[742]; 
        im[743] <== im[543] * treeC[33];
        im[682] <== im[683] + im[743]; 
        im[744] <== im[544] * treeC[34];
        im[681] <== im[682] + im[744]; 
        im[745] <== im[545] * treeC[39];
        im[680] <== im[681] + im[745]; 
        im[746] <== im[546] * treeC[38];
        im[679] <== im[680] + im[746]; 
        im[747] <== im[547] * treeC[40];
        im[678] <== im[679] + im[747]; 
        im[748] <== im[548] * treeC[41];
        im[677] <== im[678] + im[748]; 
        im[749] <== im[549] * treeC[42];
        im[676] <== im[677] + im[749]; 
        im[750] <== im[550] * treeC[43];
        im[675] <== im[676] + im[750]; 
        im[751] <== im[551] * treeC[44];
        im[674] <== im[675] + im[751]; 
        im[752] <== im[552] * treeC[47];
        im[673] <== im[674] + im[752]; 
        im[753] <== im[553] * treeC[48];
        im[672] <== im[673] + im[753]; 
        im[754] <== im[554] * treeC[49];
        im[671] <== im[672] + im[754]; 
        im[755] <== im[555] * treeC[50];
        im[670] <== im[671] + im[755]; 
        im[756] <== im[556] * treeC[51];
        im[669] <== im[670] + im[756]; 
        im[757] <== im[557] * treeC[52];
        im[668] <== im[669] + im[757]; 
        im[758] <== im[558] * treeC[53];
        im[667] <== im[668] + im[758]; 
        im[759] <== im[559] * treeC[54];
        im[666] <== im[667] + im[759]; 
        im[760] <== im[560] * treeC[45];
        im[665] <== im[666] + im[760]; 
        im[761] <== im[561] * treeC[46];
        im[664] <== im[665] + im[761]; 
        im[762] <== im[562] * treeC[55];
        im[663] <== im[664] + im[762]; 
        im[763] <== u * u;
        im[764] <== im[763] * u;
        im[765] <== im[764] * u;
        im[766] <== im[765] * u;
        im[767] <== im[766] * u;
        im[768] <== im[767] * u;
        im[769] <== im[768] * u;
        im[770] <== im[769] * u;
        im[771] <== im[770] * u;
        im[772] <== im[771] * u;
        im[773] <== im[772] * u;
        im[774] <== im[773] * u;
        im[775] <== im[774] * u;
        im[776] <== im[775] * u;
        im[777] <== im[776] * u;
        im[778] <== im[777] * u;
        im[779] <== im[778] * u;
        im[780] <== im[779] * u;
        im[781] <== im[780] * u;
        im[782] <== im[781] * u;
        im[783] <== im[782] * u;
        im[784] <== im[783] * u;
        im[785] <== im[784] * u;
        im[786] <== im[785] * u;
        im[787] <== im[786] * u;
        im[788] <== im[787] * u;
        im[789] <== im[788] * u;
        im[790] <== im[789] * u;
        im[791] <== im[790] * u;
        im[792] <== im[791] * u;
        im[793] <== im[792] * u;
        im[794] <== im[793] * u;
        im[795] <== im[794] * u;
        im[796] <== im[795] * u;
        im[797] <== im[796] * u;
        im[798] <== im[797] * u;
        im[799] <== im[798] * u;
        im[800] <== im[799] * u;
        im[801] <== im[800] * u;
        im[802] <== im[801] * u;
        im[803] <== im[802] * u;
        im[804] <== im[803] * u;
        im[805] <== im[804] * u;
        im[806] <== im[805] * u;
        im[807] <== im[806] * u;
        im[808] <== im[807] * u;
        im[809] <== im[808] * u;
        im[810] <== im[809] * u;
        im[811] <== im[810] * u;
        im[862] <== u * treeCp[6];
        im[861] <== treeCp[5] + im[862]; 
        im[863] <== im[763] * treeCp[7];
        im[860] <== im[861] + im[863]; 
        im[864] <== im[764] * treeCp[8];
        im[859] <== im[860] + im[864]; 
        im[865] <== im[765] * treeCp[9];
        im[858] <== im[859] + im[865]; 
        im[866] <== im[766] * treeCp[10];
        im[857] <== im[858] + im[866]; 
        im[867] <== im[767] * treeCp[11];
        im[856] <== im[857] + im[867]; 
        im[868] <== im[768] * treeCp[12];
        im[855] <== im[856] + im[868]; 
        im[869] <== im[769] * treeCp[14];
        im[854] <== im[855] + im[869]; 
        im[870] <== im[770] * treeCp[15];
        im[853] <== im[854] + im[870]; 
        im[871] <== im[771] * treeCp[16];
        im[852] <== im[853] + im[871]; 
        im[872] <== im[772] * treeCp[17];
        im[851] <== im[852] + im[872]; 
        im[873] <== im[773] * treeCp[18];
        im[850] <== im[851] + im[873]; 
        im[874] <== im[774] * treeCp[19];
        im[849] <== im[850] + im[874]; 
        im[875] <== im[775] * treeCp[13];
        im[848] <== im[849] + im[875]; 
        im[876] <== im[776] * treeCp[20];
        im[847] <== im[848] + im[876]; 
        im[877] <== im[777] * treeCp[21];
        im[846] <== im[847] + im[877]; 
        im[878] <== im[778] * treeCp[22];
        im[845] <== im[846] + im[878]; 
        im[879] <== im[779] * treeCp[23];
        im[844] <== im[845] + im[879]; 
        im[880] <== im[780] * treeCp[24];
        im[843] <== im[844] + im[880]; 
        im[881] <== im[781] * treeCp[25];
        im[842] <== im[843] + im[881]; 
        im[882] <== im[782] * treeCp[26];
        im[841] <== im[842] + im[882]; 
        im[883] <== im[783] * treeCp[27];
        im[840] <== im[841] + im[883]; 
        im[884] <== im[784] * treeCp[28];
        im[839] <== im[840] + im[884]; 
        im[885] <== im[785] * treeCp[29];
        im[838] <== im[839] + im[885]; 
        im[886] <== im[786] * treeCp[30];
        im[837] <== im[838] + im[886]; 
        im[887] <== im[787] * treeCp[31];
        im[836] <== im[837] + im[887]; 
        im[888] <== im[788] * treeCp[32];
        im[835] <== im[836] + im[888]; 
        im[889] <== im[789] * treeCp[35];
        im[834] <== im[835] + im[889]; 
        im[890] <== im[790] * treeCp[36];
        im[833] <== im[834] + im[890]; 
        im[891] <== im[791] * treeCp[37];
        im[832] <== im[833] + im[891]; 
        im[892] <== im[792] * treeCp[33];
        im[831] <== im[832] + im[892]; 
        im[893] <== im[793] * treeCp[34];
        im[830] <== im[831] + im[893]; 
        im[894] <== im[794] * treeCp[39];
        im[829] <== im[830] + im[894]; 
        im[895] <== im[795] * treeCp[38];
        im[828] <== im[829] + im[895]; 
        im[896] <== im[796] * treeCp[40];
        im[827] <== im[828] + im[896]; 
        im[897] <== im[797] * treeCp[41];
        im[826] <== im[827] + im[897]; 
        im[898] <== im[798] * treeCp[42];
        im[825] <== im[826] + im[898]; 
        im[899] <== im[799] * treeCp[43];
        im[824] <== im[825] + im[899]; 
        im[900] <== im[800] * treeCp[44];
        im[823] <== im[824] + im[900]; 
        im[901] <== im[801] * treeCp[47];
        im[822] <== im[823] + im[901]; 
        im[902] <== im[802] * treeCp[48];
        im[821] <== im[822] + im[902]; 
        im[903] <== im[803] * treeCp[49];
        im[820] <== im[821] + im[903]; 
        im[904] <== im[804] * treeCp[50];
        im[819] <== im[820] + im[904]; 
        im[905] <== im[805] * treeCp[51];
        im[818] <== im[819] + im[905]; 
        im[906] <== im[806] * treeCp[52];
        im[817] <== im[818] + im[906]; 
        im[907] <== im[807] * treeCp[53];
        im[816] <== im[817] + im[907]; 
        im[908] <== im[808] * treeCp[54];
        im[815] <== im[816] + im[908]; 
        im[909] <== im[809] * treeCp[45];
        im[814] <== im[815] + im[909]; 
        im[910] <== im[810] * treeCp[46];
        im[813] <== im[814] + im[910]; 
        im[911] <== im[811] * treeCp[55];
        im[812] <== im[813] + im[911]; 
        im[914] <== im[563] + gamma; 
        im[917] <== im[812] * beta;
        im[916] <== im[663] + im[917]; 
        im[915] <== im[916] + im[381]; 
        im[913] <== im[914] * im[915];
        im[912] <== im[913] * im[380];
        im[918] <== tree3[13] * treeC[0];
        im[919] <== im[912] - im[918];
        im[921] <== tree3p[4] * im[513];
        im[922] <== tree3[4] * im[919];
        im[920] <== im[921] - im[922];
        im[1045] <== v * tree1[1];
        im[1044] <== tree1[0] + im[1045]; 
        im[1046] <== im[0] * tree1[2];
        im[1043] <== im[1044] + im[1046]; 
        im[1047] <== im[1] * tree1[3];
        im[1042] <== im[1043] + im[1047]; 
        im[1048] <== im[2] * tree1[4];
        im[1041] <== im[1042] + im[1048]; 
        im[1049] <== im[3] * tree1[5];
        im[1040] <== im[1041] + im[1049]; 
        im[1050] <== im[4] * tree1[6];
        im[1039] <== im[1040] + im[1050]; 
        im[1051] <== im[5] * tree1[7];
        im[1038] <== im[1039] + im[1051]; 
        im[1052] <== im[6] * tree1[8];
        im[1037] <== im[1038] + im[1052]; 
        im[1053] <== im[7] * tree1[9];
        im[1036] <== im[1037] + im[1053]; 
        im[1054] <== im[8] * tree1[10];
        im[1035] <== im[1036] + im[1054]; 
        im[1055] <== im[9] * tree1[11];
        im[1034] <== im[1035] + im[1055]; 
        im[1056] <== im[10] * tree1[12];
        im[1033] <== im[1034] + im[1056]; 
        im[1057] <== im[11] * tree1[13];
        im[1032] <== im[1033] + im[1057]; 
        im[1058] <== im[12] * tree1[14];
        im[1031] <== im[1032] + im[1058]; 
        im[1059] <== im[13] * tree1[15];
        im[1030] <== im[1031] + im[1059]; 
        im[1060] <== im[14] * tree1[16];
        im[1029] <== im[1030] + im[1060]; 
        im[1061] <== im[15] * tree1[17];
        im[1028] <== im[1029] + im[1061]; 
        im[1062] <== im[16] * tree1[18];
        im[1027] <== im[1028] + im[1062]; 
        im[1063] <== im[17] * tree1[19];
        im[1026] <== im[1027] + im[1063]; 
        im[1064] <== im[18] * tree1[20];
        im[1025] <== im[1026] + im[1064]; 
        im[1065] <== im[19] * tree1[21];
        im[1024] <== im[1025] + im[1065]; 
        im[1066] <== im[20] * tree1[22];
        im[1023] <== im[1024] + im[1066]; 
        im[1067] <== im[21] * tree1[23];
        im[1022] <== im[1023] + im[1067]; 
        im[1068] <== im[22] * tree1[24];
        im[1021] <== im[1022] + im[1068]; 
        im[1069] <== im[23] * tree1[25];
        im[1020] <== im[1021] + im[1069]; 
        im[1070] <== im[24] * tree1[26];
        im[1019] <== im[1020] + im[1070]; 
        im[1071] <== im[25] * tree1[27];
        im[1018] <== im[1019] + im[1071]; 
        im[1072] <== im[26] * tree1[28];
        im[1017] <== im[1018] + im[1072]; 
        im[1073] <== im[27] * tree1[29];
        im[1016] <== im[1017] + im[1073]; 
        im[1074] <== im[28] * tree1[30];
        im[1015] <== im[1016] + im[1074]; 
        im[1075] <== im[29] * tree1[31];
        im[1014] <== im[1015] + im[1075]; 
        im[1076] <== im[30] * tree1[32];
        im[1013] <== im[1014] + im[1076]; 
        im[1077] <== im[31] * tree1[33];
        im[1012] <== im[1013] + im[1077]; 
        im[1078] <== im[32] * tree1[34];
        im[1011] <== im[1012] + im[1078]; 
        im[1079] <== im[33] * tree1[35];
        im[1010] <== im[1011] + im[1079]; 
        im[1080] <== im[34] * tree1[36];
        im[1009] <== im[1010] + im[1080]; 
        im[1081] <== im[35] * tree1[37];
        im[1008] <== im[1009] + im[1081]; 
        im[1082] <== im[36] * tree1[38];
        im[1007] <== im[1008] + im[1082]; 
        im[1083] <== im[37] * tree1[39];
        im[1006] <== im[1007] + im[1083]; 
        im[1084] <== im[38] * tree1[40];
        im[1005] <== im[1006] + im[1084]; 
        im[1085] <== im[39] * tree1[41];
        im[1004] <== im[1005] + im[1085]; 
        im[1086] <== im[40] * tree1[42];
        im[1003] <== im[1004] + im[1086]; 
        im[1087] <== im[41] * tree1[43];
        im[1002] <== im[1003] + im[1087]; 
        im[1088] <== im[42] * tree1[44];
        im[1001] <== im[1002] + im[1088]; 
        im[1089] <== im[43] * tree1[45];
        im[1000] <== im[1001] + im[1089]; 
        im[1090] <== im[44] * tree1[46];
        im[999] <== im[1000] + im[1090]; 
        im[1091] <== im[45] * tree1[47];
        im[998] <== im[999] + im[1091]; 
        im[1092] <== im[46] * tree1[48];
        im[997] <== im[998] + im[1092]; 
        im[1093] <== im[47] * tree1[49];
        im[996] <== im[997] + im[1093]; 
        im[1094] <== im[48] * tree1[50];
        im[995] <== im[996] + im[1094]; 
        im[1095] <== im[49] * tree1[51];
        im[994] <== im[995] + im[1095]; 
        im[1096] <== im[50] * tree1[52];
        im[993] <== im[994] + im[1096]; 
        im[1097] <== im[51] * tree1[53];
        im[992] <== im[993] + im[1097]; 
        im[1098] <== im[52] * tree1[54];
        im[991] <== im[992] + im[1098]; 
        im[1099] <== im[53] * tree1[55];
        im[990] <== im[991] + im[1099]; 
        im[1100] <== im[54] * tree1[56];
        im[989] <== im[990] + im[1100]; 
        im[1101] <== im[55] * tree1[57];
        im[988] <== im[989] + im[1101]; 
        im[1102] <== im[56] * tree1[58];
        im[987] <== im[988] + im[1102]; 
        im[1103] <== im[57] * tree1[59];
        im[986] <== im[987] + im[1103]; 
        im[1104] <== im[58] * tree1[60];
        im[985] <== im[986] + im[1104]; 
        im[1105] <== im[59] * tree1[61];
        im[984] <== im[985] + im[1105]; 
        im[1106] <== im[60] * tree1[62];
        im[983] <== im[984] + im[1106]; 
        im[1107] <== im[61] * tree1[63];
        im[982] <== im[983] + im[1107]; 
        im[1108] <== im[62] * tree1[64];
        im[981] <== im[982] + im[1108]; 
        im[1109] <== im[63] * tree1[65];
        im[980] <== im[981] + im[1109]; 
        im[1110] <== im[64] * tree1[66];
        im[979] <== im[980] + im[1110]; 
        im[1111] <== im[65] * tree1[67];
        im[978] <== im[979] + im[1111]; 
        im[1112] <== im[66] * tree1[68];
        im[977] <== im[978] + im[1112]; 
        im[1113] <== im[67] * tree1[69];
        im[976] <== im[977] + im[1113]; 
        im[1114] <== im[68] * tree1[70];
        im[975] <== im[976] + im[1114]; 
        im[1115] <== im[69] * tree1[71];
        im[974] <== im[975] + im[1115]; 
        im[1116] <== im[70] * tree1[72];
        im[973] <== im[974] + im[1116]; 
        im[1117] <== im[71] * tree1[73];
        im[972] <== im[973] + im[1117]; 
        im[1118] <== im[72] * tree1[74];
        im[971] <== im[972] + im[1118]; 
        im[1119] <== im[73] * tree1[75];
        im[970] <== im[971] + im[1119]; 
        im[1120] <== im[74] * tree1[76];
        im[969] <== im[970] + im[1120]; 
        im[1121] <== im[75] * tree1[77];
        im[968] <== im[969] + im[1121]; 
        im[1122] <== im[76] * tree1[78];
        im[967] <== im[968] + im[1122]; 
        im[1123] <== im[77] * tree1[79];
        im[966] <== im[967] + im[1123]; 
        im[1124] <== im[78] * tree1[80];
        im[965] <== im[966] + im[1124]; 
        im[1125] <== im[79] * tree1[81];
        im[964] <== im[965] + im[1125]; 
        im[1126] <== im[80] * tree1[82];
        im[963] <== im[964] + im[1126]; 
        im[1127] <== im[81] * tree1[83];
        im[962] <== im[963] + im[1127]; 
        im[1128] <== im[82] * tree1[84];
        im[961] <== im[962] + im[1128]; 
        im[1129] <== im[83] * tree2[0];
        im[960] <== im[961] + im[1129]; 
        im[1130] <== im[84] * tree2[1];
        im[959] <== im[960] + im[1130]; 
        im[1131] <== im[85] * tree2[2];
        im[958] <== im[959] + im[1131]; 
        im[1132] <== im[86] * tree2[3];
        im[957] <== im[958] + im[1132]; 
        im[1133] <== im[87] * tree2[4];
        im[956] <== im[957] + im[1133]; 
        im[1134] <== im[88] * tree2[5];
        im[955] <== im[956] + im[1134]; 
        im[1135] <== im[89] * tree2[6];
        im[954] <== im[955] + im[1135]; 
        im[1136] <== im[90] * tree2[7];
        im[953] <== im[954] + im[1136]; 
        im[1137] <== im[91] * tree2[8];
        im[952] <== im[953] + im[1137]; 
        im[1138] <== im[92] * tree2[9];
        im[951] <== im[952] + im[1138]; 
        im[1139] <== im[93] * tree3[0];
        im[950] <== im[951] + im[1139]; 
        im[1140] <== im[94] * tree3[1];
        im[949] <== im[950] + im[1140]; 
        im[1141] <== im[95] * tree3[2];
        im[948] <== im[949] + im[1141]; 
        im[1142] <== im[96] * tree3[3];
        im[947] <== im[948] + im[1142]; 
        im[1143] <== im[97] * tree3[4];
        im[946] <== im[947] + im[1143]; 
        im[1144] <== im[98] * tree1[85];
        im[945] <== im[946] + im[1144]; 
        im[1145] <== im[99] * tree1[86];
        im[944] <== im[945] + im[1145]; 
        im[1146] <== im[100] * tree1[87];
        im[943] <== im[944] + im[1146]; 
        im[1147] <== im[101] * tree1[88];
        im[942] <== im[943] + im[1147]; 
        im[1148] <== im[102] * tree1[89];
        im[941] <== im[942] + im[1148]; 
        im[1149] <== im[103] * tree1[90];
        im[940] <== im[941] + im[1149]; 
        im[1150] <== im[104] * tree1[91];
        im[939] <== im[940] + im[1150]; 
        im[1151] <== im[105] * tree1[92];
        im[938] <== im[939] + im[1151]; 
        im[1152] <== im[106] * tree1[93];
        im[937] <== im[938] + im[1152]; 
        im[1153] <== im[107] * tree1[94];
        im[936] <== im[937] + im[1153]; 
        im[1154] <== im[108] * tree1[95];
        im[935] <== im[936] + im[1154]; 
        im[1155] <== im[109] * tree2[10];
        im[934] <== im[935] + im[1155]; 
        im[1156] <== im[110] * tree3[5];
        im[933] <== im[934] + im[1156]; 
        im[1157] <== im[111] * tree3[6];
        im[932] <== im[933] + im[1157]; 
        im[1158] <== im[112] * tree3[7];
        im[931] <== im[932] + im[1158]; 
        im[1159] <== im[113] * tree3[8];
        im[930] <== im[931] + im[1159]; 
        im[1160] <== im[114] * tree3[9];
        im[929] <== im[930] + im[1160]; 
        im[1161] <== im[115] * tree3[10];
        im[928] <== im[929] + im[1161]; 
        im[1162] <== im[116] * tree3[11];
        im[927] <== im[928] + im[1162]; 
        im[1163] <== im[117] * tree3[12];
        im[926] <== im[927] + im[1163]; 
        im[1164] <== im[118] * tree3[13];
        im[925] <== im[926] + im[1164]; 
        im[1165] <== im[119] * tree3[14];
        im[924] <== im[925] + im[1165]; 
        im[1209] <== im[120] * im[121];
        im[1210] <== im[129] * im[158];
        im[1208] <== im[1209] + im[1210]; 
        im[1211] <== im[162] * im[176];
        im[1207] <== im[1208] + im[1211]; 
        im[1212] <== im[180] * im[194];
        im[1206] <== im[1207] + im[1212]; 
        im[1213] <== im[198] * im[212];
        im[1205] <== im[1206] + im[1213]; 
        im[1214] <== im[216] * im[217];
        im[1204] <== im[1205] + im[1214]; 
        im[1215] <== im[221] * im[222];
        im[1203] <== im[1204] + im[1215]; 
        im[1216] <== im[226] * im[227];
        im[1202] <== im[1203] + im[1216]; 
        im[1217] <== im[231] * im[232];
        im[1201] <== im[1202] + im[1217]; 
        im[1218] <== im[236] * im[237];
        im[1200] <== im[1201] + im[1218]; 
        im[1219] <== im[241] * im[242];
        im[1199] <== im[1200] + im[1219]; 
        im[1220] <== im[246] * im[247];
        im[1198] <== im[1199] + im[1220]; 
        im[1221] <== im[251] * im[252];
        im[1197] <== im[1198] + im[1221]; 
        im[1222] <== im[256] * im[257];
        im[1196] <== im[1197] + im[1222]; 
        im[1223] <== im[261] * im[262];
        im[1195] <== im[1196] + im[1223]; 
        im[1224] <== im[266] * im[267];
        im[1194] <== im[1195] + im[1224]; 
        im[1225] <== im[271] * im[272];
        im[1193] <== im[1194] + im[1225]; 
        im[1226] <== im[276] * im[277];
        im[1192] <== im[1193] + im[1226]; 
        im[1227] <== im[281] * im[282];
        im[1191] <== im[1192] + im[1227]; 
        im[1228] <== im[286] * im[287];
        im[1190] <== im[1191] + im[1228]; 
        im[1229] <== im[291] * im[292];
        im[1189] <== im[1190] + im[1229]; 
        im[1230] <== im[296] * im[297];
        im[1188] <== im[1189] + im[1230]; 
        im[1231] <== im[301] * im[302];
        im[1187] <== im[1188] + im[1231]; 
        im[1232] <== im[306] * im[307];
        im[1186] <== im[1187] + im[1232]; 
        im[1233] <== im[313] * im[314];
        im[1185] <== im[1186] + im[1233]; 
        im[1234] <== im[320] * im[321];
        im[1184] <== im[1185] + im[1234]; 
        im[1235] <== im[325] * im[335];
        im[1183] <== im[1184] + im[1235]; 
        im[1236] <== im[339] * im[355];
        im[1182] <== im[1183] + im[1236]; 
        im[1237] <== im[361] * im[362];
        im[1181] <== im[1182] + im[1237]; 
        im[1238] <== im[364] * im[365];
        im[1180] <== im[1181] + im[1238]; 
        im[1239] <== im[367] * im[368];
        im[1179] <== im[1180] + im[1239]; 
        im[1240] <== im[370] * im[371];
        im[1178] <== im[1179] + im[1240]; 
        im[1241] <== im[373] * im[374];
        im[1177] <== im[1178] + im[1241]; 
        im[1242] <== im[376] * im[377];
        im[1176] <== im[1177] + im[1242]; 
        im[1243] <== im[379] * im[399];
        im[1175] <== im[1176] + im[1243]; 
        im[1244] <== im[402] * im[403];
        im[1174] <== im[1175] + im[1244]; 
        im[1245] <== im[405] * im[428];
        im[1173] <== im[1174] + im[1245]; 
        im[1246] <== im[431] * im[432];
        im[1172] <== im[1173] + im[1246]; 
        im[1247] <== im[434] * im[463];
        im[1171] <== im[1172] + im[1247]; 
        im[1248] <== im[466] * im[467];
        im[1170] <== im[1171] + im[1248]; 
        im[1249] <== im[469] * im[498];
        im[1169] <== im[1170] + im[1249]; 
        im[1250] <== im[501] * im[502];
        im[1168] <== im[1169] + im[1250]; 
        im[1251] <== im[504] * im[920];
        im[1167] <== im[1168] + im[1251]; 
        im[1166] <== im[1167] * treeC[1];
        im[923] <== im[924] + im[1166]; 
        
    out <== im[923];
}


template StarkVal() {

    signal input globalHash;


    signal input s0_rootUp1;
    signal input s0_rootUp2;
    signal input s0_rootUp3;
    
    signal input s0_valsUp1[128][1][96];
    signal input s0_valsUp2[128][1][11];
    signal input s0_valsUp3[128][1][15];
    signal input s0_valsUpC[128][1][59];
    signal input s0_valsUp1p[128][1][96];
    signal input s0_valsUp2p[128][1][11];
    signal input s0_valsUp3p[128][1][15];
    signal input s0_valsUpCp[128][1][59];
    signal input s0_siblingsUp1[128][5][16];
    signal input s0_siblingsUp2[128][5][16];
    signal input s0_siblingsUp3[128][5][16];
    signal input s0_siblingsUpC[128][5][16];
    signal input s0_siblingsUp1p[128][5][16];
    signal input s0_siblingsUp2p[128][5][16];
    signal input s0_siblingsUp3p[128][5][16];
    signal input s0_siblingsUpCp[128][5][16];
    signal input s0_rootDown;
    signal input s0_valsDown[128];
    signal input s0_siblingsDownL[128][2][16];
    signal input s0_siblingsDownH[128][3][16];
    


    
    signal input s1_valsUp[128][128];
    signal input s1_siblingsUp[128][3][16];
    signal input s1_rootDown;
    signal input s1_valsDown[128];
    signal input s1_siblingsDownL[128][0][16];
    signal input s1_siblingsDownH[128][3][16];



    signal input lastVals [1024];       

    signal s0_rootUpC;
    s0_rootUpC <== 12503066642343927762734285763386365402441851462195810048690350954307785919355;

//////////////////
// Challanges
//////////////////




   signal u;
   u <== s0_rootUp1;

   signal defVal;
   component chHash_0 = Poseidon(1);
   chHash_0.inputs[0] <== s0_rootUp1;
   defVal <== chHash_0.out;

   component chHash_1 = Poseidon(2);
   chHash_1.inputs[0] <== chHash_0.out;
   chHash_1.inputs[1] <== s0_rootUp2;

   signal gamma;
   gamma <== chHash_1.out;

   signal beta;
   component chHash_2 = Poseidon(1);
   chHash_2.inputs[0] <== chHash_1.out;
   beta <== chHash_2.out;

   component chHash_3 = Poseidon(2);
   chHash_3.inputs[0] <== chHash_2.out;
   chHash_3.inputs[1] <== s0_rootUp3;

   signal v;
   v <== chHash_3.out;


   signal s0_specialX;
   component chHash_4 = Poseidon(1);
   chHash_4.inputs[0] <== chHash_3.out;
   s0_specialX <== chHash_4.out;

   component chHash_5 = Poseidon(2);
   chHash_5.inputs[0] <== chHash_4.out;
   chHash_5.inputs[1] <== s0_rootDown;

   component s0_qIdx = Fields2Idxs(128, 17);
   s0_qIdx.in[0] <== chHash_5.out;
   component chHash_6 = Poseidon(1);
   chHash_6.inputs[0] <== chHash_5.out;
   s0_qIdx.in[1] <== chHash_6.out;
   component chHash_7 = Poseidon(1);
   chHash_7.inputs[0] <== chHash_6.out;
   s0_qIdx.in[2] <== chHash_7.out;
   component chHash_8 = Poseidon(1);
   chHash_8.inputs[0] <== chHash_7.out;
   s0_qIdx.in[3] <== chHash_8.out;
   component chHash_9 = Poseidon(1);
   chHash_9.inputs[0] <== chHash_8.out;
   s0_qIdx.in[4] <== chHash_9.out;
   component chHash_10 = Poseidon(1);
   chHash_10.inputs[0] <== chHash_9.out;
   s0_qIdx.in[5] <== chHash_10.out;
   component chHash_11 = Poseidon(1);
   chHash_11.inputs[0] <== chHash_10.out;
   s0_qIdx.in[6] <== chHash_11.out;
   component chHash_12 = Poseidon(1);
   chHash_12.inputs[0] <== chHash_11.out;
   s0_qIdx.in[7] <== chHash_12.out;
   component chHash_13 = Poseidon(1);
   chHash_13.inputs[0] <== chHash_12.out;
   s0_qIdx.in[8] <== chHash_13.out;


   signal s1_specialX;
   component chHash_14 = Poseidon(1);
   chHash_14.inputs[0] <== chHash_13.out;
   s1_specialX <== chHash_14.out;

   component chHash_15 = Poseidon(2);
   chHash_15.inputs[0] <== chHash_14.out;
   chHash_15.inputs[1] <== s1_rootDown;

   component s1_qIdx = Fields2Idxs(128, 10);
   s1_qIdx.in[0] <== chHash_15.out;
   component chHash_16 = Poseidon(1);
   chHash_16.inputs[0] <== chHash_15.out;
   s1_qIdx.in[1] <== chHash_16.out;
   component chHash_17 = Poseidon(1);
   chHash_17.inputs[0] <== chHash_16.out;
   s1_qIdx.in[2] <== chHash_17.out;
   component chHash_18 = Poseidon(1);
   chHash_18.inputs[0] <== chHash_17.out;
   s1_qIdx.in[3] <== chHash_18.out;
   component chHash_19 = Poseidon(1);
   chHash_19.inputs[0] <== chHash_18.out;
   s1_qIdx.in[4] <== chHash_19.out;
   component chHash_20 = Poseidon(1);
   chHash_20.inputs[0] <== chHash_19.out;
   s1_qIdx.in[5] <== chHash_20.out;




//////////////////
// step0 Up Verification
//////////////////

    component s0_qIdxP[128];
    component starkEvaluationCalculator[128][1];
    component mpmVerifierTree1[128];
    component mpmVerifierTree2[128];
    component mpmVerifierTree3[128];
    component mpmVerifierTreeC[128];
    component mpmVerifierTree1p[128];
    component mpmVerifierTree2p[128];
    component mpmVerifierTree3p[128];
    component mpmVerifierTreeCp[128];
    for (var i = 0; i < 128; i++) {
        mpmVerifierTree1[i] = MerkleMultipol_GroupVerifier(131072,  1, 96);
        mpmVerifierTree2[i] = MerkleMultipol_GroupVerifier(131072,  1, 11);
        mpmVerifierTree3[i] = MerkleMultipol_GroupVerifier(131072,  1, 15);
        mpmVerifierTreeC[i] = MerkleMultipol_GroupVerifier(131072,  1, 59);
        mpmVerifierTree1p[i] = MerkleMultipol_GroupVerifier(131072,  1, 96);
        mpmVerifierTree2p[i] = MerkleMultipol_GroupVerifier(131072,  1, 11);
        mpmVerifierTree3p[i] = MerkleMultipol_GroupVerifier(131072,  1, 15);
        mpmVerifierTreeCp[i] = MerkleMultipol_GroupVerifier(131072,  1, 59);
    
        s0_qIdxP[i] = BinSum(17, 2);
        for (var k=0; k< 17; k++) {
            mpmVerifierTree1[i].key[k] <== s0_qIdx.out[i][k];
            mpmVerifierTree2[i].key[k] <== s0_qIdx.out[i][k];
            mpmVerifierTree3[i].key[k] <== s0_qIdx.out[i][k];
            mpmVerifierTreeC[i].key[k] <== s0_qIdx.out[i][k];
            s0_qIdxP[i].in[0][k] <== s0_qIdx.out[i][k];
            if (k==1) {
                s0_qIdxP[i].in[1][k] <== 1;
            } else {
                s0_qIdxP[i].in[1][k] <== 0;
            }
        }
        for (var k=0; k< 17; k++) {
            mpmVerifierTree1p[i].key[k] <== s0_qIdxP[i].out[k];
            mpmVerifierTree2p[i].key[k] <== s0_qIdxP[i].out[k];
            mpmVerifierTree3p[i].key[k] <== s0_qIdxP[i].out[k];
            mpmVerifierTreeCp[i].key[k] <== s0_qIdxP[i].out[k];
        }
        for (var j=0; j< 5; j++) {
            for (var k=0; k<16; k++) {
                mpmVerifierTree1[i].siblings[j][k] <== s0_siblingsUp1[i][j][k];
                mpmVerifierTree2[i].siblings[j][k] <== s0_siblingsUp2[i][j][k];
                mpmVerifierTree3[i].siblings[j][k] <== s0_siblingsUp3[i][j][k];
                mpmVerifierTreeC[i].siblings[j][k] <== s0_siblingsUpC[i][j][k];
                mpmVerifierTree1p[i].siblings[j][k] <== s0_siblingsUp1p[i][j][k];
                mpmVerifierTree2p[i].siblings[j][k] <== s0_siblingsUp2p[i][j][k];
                mpmVerifierTree3p[i].siblings[j][k] <== s0_siblingsUp3p[i][j][k];
                mpmVerifierTreeCp[i].siblings[j][k] <== s0_siblingsUpCp[i][j][k];
            }
        }

        for (var j=0; j< 1; j++) {
            starkEvaluationCalculator[i][j] = StarkEvaluationCalculator();

            starkEvaluationCalculator[i][j].globalHash <== globalHash;

            starkEvaluationCalculator[i][j].u <== u;
            starkEvaluationCalculator[i][j].defVal <== defVal;
            starkEvaluationCalculator[i][j].gamma <== gamma;
            starkEvaluationCalculator[i][j].beta <== beta;
            starkEvaluationCalculator[i][j].v <== v;

            for (var k=0; k< 96; k++) {
                starkEvaluationCalculator[i][j].tree1[k] <== s0_valsUp1[i][j][k];
                starkEvaluationCalculator[i][j].tree1p[k] <== s0_valsUp1p[i][j][k];
                mpmVerifierTree1[i].values[j][k] <== s0_valsUp1[i][j][k];
                mpmVerifierTree1p[i].values[j][k] <== s0_valsUp1p[i][j][k];
            }
            for (var k=0; k< 11; k++) {
                starkEvaluationCalculator[i][j].tree2[k] <== s0_valsUp2[i][j][k];
                starkEvaluationCalculator[i][j].tree2p[k] <== s0_valsUp2p[i][j][k];
                mpmVerifierTree2[i].values[j][k] <== s0_valsUp2[i][j][k];
                mpmVerifierTree2p[i].values[j][k] <== s0_valsUp2p[i][j][k];
            }
            for (var k=0; k< 15; k++) {
                starkEvaluationCalculator[i][j].tree3[k] <== s0_valsUp3[i][j][k];
                starkEvaluationCalculator[i][j].tree3p[k] <== s0_valsUp3p[i][j][k];
                mpmVerifierTree3[i].values[j][k] <== s0_valsUp3[i][j][k];
                mpmVerifierTree3p[i].values[j][k] <== s0_valsUp3p[i][j][k];
            }
            for (var k=0; k< 59; k++) {
                starkEvaluationCalculator[i][j].treeC[k] <== s0_valsUpC[i][j][k];
                starkEvaluationCalculator[i][j].treeCp[k] <== s0_valsUpCp[i][j][k];
                mpmVerifierTreeC[i].values[j][k] <== s0_valsUpC[i][j][k];
                mpmVerifierTreeCp[i].values[j][k] <== s0_valsUpCp[i][j][k];
            }
        }

        mpmVerifierTree1[i].root === s0_rootUp1;
        mpmVerifierTree2[i].root === s0_rootUp2;
        mpmVerifierTree3[i].root === s0_rootUp3;
        mpmVerifierTreeC[i].root === s0_rootUpC;
        mpmVerifierTree1p[i].root === s0_rootUp1;
        mpmVerifierTree2p[i].root === s0_rootUp2;
        mpmVerifierTree3p[i].root === s0_rootUp3;
        mpmVerifierTreeCp[i].root === s0_rootUpC;
    }

// Verifier Up



    component s1_gmVerifierUp[128];
    for (var i=0; i< 128; i++) {
        s1_gmVerifierUp[i] = MerkleGroup_GroupVerifier(1024, 128);
        for (var k=0; k< 128; k++ ) {
            s1_gmVerifierUp[i].values[k] <== s1_valsUp[i][k];
        }
        for (var j=0; j< 3; j++ ) {
            for (var k=0; k<16; k++) {
                s1_gmVerifierUp[i].siblings[j][k] <== s1_siblingsUp[i][j][k];
            }
        }
        for (var k=0; k< 10; k++) {
            s1_gmVerifierUp[i].key[k] <== s1_qIdx.out[i][k];
        }
        s1_gmVerifierUp[i].root === s0_rootDown;
    }


// Verify down query


    component s0_gmVerifierDown[128];
    for (var i=0; i< 128; i++) {
        s0_gmVerifierDown[i] = MerkleGroup_ElementVerifier(1024, 128);
        s0_gmVerifierDown[i].value <== s0_valsDown[i];
        for (var j=0; j< 2; j++ ) {
            for (var k=0; k<16; k++) {
                s0_gmVerifierDown[i].siblingsL[j][k] <== s0_siblingsDownL[i][j][k];
            }
        }
        for (var j=0; j< 3; j++ ) {
            for (var k=0; k<16; k++) {
                s0_gmVerifierDown[i].siblingsH[j][k] <== s0_siblingsDownH[i][j][k];
            }
        }
        for (var k=0; k< 17; k++) {
            s0_gmVerifierDown[i].key[k] <== s0_qIdx.out[i][k];
        }
        s0_gmVerifierDown[i].root === s0_rootDown;
    }

    component s1_gmVerifierDown[128];
    for (var i=0; i< 128; i++) {
        s1_gmVerifierDown[i] = MerkleGroup_ElementVerifier(1024, 1);
        s1_gmVerifierDown[i].value <== s1_valsDown[i];
        for (var j=0; j< 0; j++ ) {
            for (var k=0; k<16; k++) {
                s1_gmVerifierDown[i].siblingsL[j][k] <== s1_siblingsDownL[i][j][k];
            }
        }
        for (var j=0; j< 3; j++ ) {
            for (var k=0; k<16; k++) {
                s1_gmVerifierDown[i].siblingsH[j][k] <== s1_siblingsDownH[i][j][k];
            }
        }
        for (var k=0; k< 10; k++) {
            s1_gmVerifierDown[i].key[k] <== s1_qIdx.out[i][k];
        }
        s1_gmVerifierDown[i].root === s1_rootDown;
    }


// Linearity of the query



    component s0_exp[128];
    component s0_ifft[128];
    component s0_polMulAxi[128];
    component s0_polEval[128];

    
    for (var i=0; i< 128; i++) {
        s0_exp[i] = Exp(17);
        s0_ifft[i] = IFFT(1);
        s0_polMulAxi[i] = PolMulAxi(1);
        s0_polEval[i] = PolEval(1);
        s0_exp[i].in <== 16419199797069286018154632093538978307443519224016378057156716264399020428578;
        for (var k=0; k< 17; k++) {
            s0_exp[i].exp[k] <== s0_qIdx.out[i][k];
        }
        for (var k=0; k< 1; k++) {
            s0_ifft[i].in[k] <== starkEvaluationCalculator[i][k].out;
        }
        s0_polMulAxi[i].init <== 1;
        s0_polMulAxi[i].acc <== 19261653727218562195576837055826402077922560672366110222454419684186711476143 * s0_exp[i].out;
        for (var k=0; k< 1; k++) {
            s0_polMulAxi[i].in[k] <== s0_ifft[i].out[k];
        }
        for (var k=0; k< 1; k++) {
            s0_polEval[i].coefs[k] <== s0_polMulAxi[i].out[k];
        }
        s0_polEval[i].x <== s0_specialX;
        s0_polEval[i].y === s0_valsDown[i];
    }


    component s1_exp[128];
    component s1_ifft[128];
    component s1_polMulAxi[128];
    component s1_polEval[128];

    
    for (var i=0; i< 128; i++) {
        s1_exp[i] = Exp(10);
        s1_ifft[i] = IFFT(128);
        s1_polMulAxi[i] = PolMulAxi(128);
        s1_polEval[i] = PolEval(128);
        s1_exp[i].in <== 16419199797069286018154632093538978307443519224016378057156716264399020428578;
        for (var k=0; k< 10; k++) {
            s1_exp[i].exp[k] <== s1_qIdx.out[i][k];
        }
        for (var k=0; k< 128; k++) {
            s1_ifft[i].in[k] <== s1_valsUp[i][k];
        }
        s1_polMulAxi[i].init <== 1;
        s1_polMulAxi[i].acc <== 19261653727218562195576837055826402077922560672366110222454419684186711476143 * s1_exp[i].out;
        for (var k=0; k< 128; k++) {
            s1_polMulAxi[i].in[k] <== s1_ifft[i].out[k];
        }
        for (var k=0; k< 128; k++) {
            s1_polEval[i].coefs[k] <== s1_polMulAxi[i].out[k];
        }
        s1_polEval[i].x <== s1_specialX;
        s1_polEval[i].y === s1_valsDown[i];
    }



// Last Merkle TODO
    component lastMerkle = Merkle_Merkelize(1024 );
    for (var k=0; k< 1024; k++ ){
        lastMerkle.values[k] <== lastVals[k];
    }

    lastMerkle.root === s1_rootDown;

// Last FFT


    component lastIFFT = IFFT(1024 );

    for (var k=0; k< 1024; k++ ){
        lastIFFT.in[k] <== lastVals[k];
    }

    for (var k= 512; k< 1024; k++ ) {
        lastIFFT.out[k] === 0;
    }

}



component main {public [globalHash]} = StarkVal();